DELIMITER $$
CREATE OR REPLACE PROCEDURE CARS_801_AGGN_SP_AGE_GROUP( IN i_aggn_ref_id INT)
BEGIN

DECLARE v_rec_cnt INTEGER DEFAULT 0 ;
DECLARE v_total_rows_deleted INTEGER DEFAULT 0; 
DECLARE v_total_rows_inserted INTEGER DEFAULT 0; 
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
			SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
			 
			UPDATE CARS_801_SP_LOG
				SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
			WHERE SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_801_SP_LOG WHERE SP_NAME='CARS_801_AGGN_SP_AGE_GROUP' );
			COMMIT;
		END;	
		
	INSERT INTO CARS_801_SP_LOG ( SP_NAME, START_TS)
		VALUES( 'CARS_801_AGGN_SP_AGE_GROUP', NOW());	
		
		
	SELECT COUNT(*) INTO v_rec_cnt FROM CARS_801_AGGN_AGE_GROUP WHERE  AGGN_REF_ID = i_aggn_ref_id;
 
		DELETE FROM CARS_801_AGGN_AGE_GROUP
		WHERE AGGN_REF_ID = i_aggn_ref_id;
        
		SET v_total_rows_deleted = ROW_COUNT();
		
DROP TEMPORARY TABLE IF EXISTS CARS_TMP_AGE_GROUP_INIT;
CREATE TEMPORARY TABLE CARS_TMP_AGE_GROUP_INIT AS  
SELECT
    H.MODULE_HDR_ID, 
	H.ENTITY_NAME, 
	H.ENTITY_ID,
	F.POOLING_FACTOR,
	R.FISCAL_YEAR, 
	H.FAMILY_COUNT AS FAMILY_UNADJ_AVG_COUNT, 
	C.CHILD_COUNT,
	C.POP_SAM_CHILD_COUNT AS CHILD_UNADJ_COUNT,
	SR.POPULATION_SAMPLE_CODE
FROM CARS_MODULE_PERIOD_HDR H
JOIN CARS_PERIOD P
ON H.PERIOD_ID = P.PERIOD_ID
AND 801_FLAG = 1
JOIN CARS_801_AGGN_REF R
ON CAST(SUBSTR(P.PERIOD_DESC, 5, 4) AS INTEGER) = R.FISCAL_YEAR
AND R.AGGN_REF_ID = i_aggn_ref_id
JOIN CARS_801_REC_COUNTS C
ON H.MODULE_HDR_ID = C.MODULE_HDR_ID
JOIN VW_CARS_801_POOLING_FACTOR F
ON SUBSTR(P.PERIOD_DESC, 2, 7) = F.PERIOD_DESC
AND H.ENTITY_ID = F.ENTITY_ID
JOIN CARS_801_STATE_REF SR
ON H.ENTITY_ID = SR.ENTITY_ID
AND SUBSTR(P.PERIOD_DESC, 5, 4) = SR.FISCAL_YEAR
;


DROP TEMPORARY TABLE IF EXISTS CARS_TMP_AGE_GROUP_UNADJ_DATA;
CREATE TEMPORARY TABLE CARS_TMP_AGE_GROUP_UNADJ_DATA AS  
SELECT
B.MODULE_HDR_ID, B.ENTITY_ID, B.ENTITY_NAME, 
CHILD_COUNT, CHILD_UNADJ_COUNT, POOLING_FACTOR,
CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (AGE_0_TO_1 / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE AGE_0_TO_1 END AS AGE_0_TO_1, 
CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (AGE_1_TO_2 / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE AGE_1_TO_2 END AS AGE_1_TO_2, 
CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (AGE_2_TO_3 / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE AGE_2_TO_3 END AS AGE_2_TO_3, 
CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (AGE_3_TO_4 / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE AGE_3_TO_4 END AS AGE_3_TO_4, 
CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (AGE_4_TO_5 / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE AGE_4_TO_5 END AS AGE_4_TO_5, 
CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (AGE_5_TO_6 / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE AGE_5_TO_6 END AS AGE_5_TO_6,
CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (AGE_6_TO_13 / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE AGE_6_TO_13 END AS AGE_6_TO_13,
CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (AGE_GT_13 / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE AGE_GT_13 END AS AGE_GT_13,

CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN ((CHILD_COUNT - AGE_0_TO_1 - AGE_1_TO_2 - AGE_2_TO_3 - AGE_3_TO_4 - AGE_4_TO_5 
- AGE_5_TO_6 - AGE_6_TO_13 - AGE_GT_13) / CHILD_COUNT) * CHILD_UNADJ_COUNT 
ELSE CHILD_COUNT - AGE_0_TO_1 - AGE_1_TO_2 - AGE_2_TO_3 - AGE_3_TO_4 - AGE_4_TO_5 
- AGE_5_TO_6 - AGE_6_TO_13 - AGE_GT_13 END AS INVALID

FROM
(
	SELECT
	MODULE_HDR_ID, ENTITY_ID, ENTITY_NAME,
	SUM(CASE WHEN AGE_CALC BETWEEN 0 AND 11 THEN 1 ELSE 0 END) AS AGE_0_TO_1,
	SUM(CASE WHEN AGE_CALC BETWEEN 12 AND 23 THEN 1 ELSE 0 END) AS AGE_1_TO_2,
	SUM(CASE WHEN AGE_CALC BETWEEN 24 AND 35 THEN 1 ELSE 0 END) AS AGE_2_TO_3,
	SUM(CASE WHEN AGE_CALC BETWEEN 36 AND 47 THEN 1 ELSE 0 END) AS AGE_3_TO_4,
	SUM(CASE WHEN AGE_CALC BETWEEN 48 AND 59 THEN 1 ELSE 0 END) AS AGE_4_TO_5,
	SUM(CASE WHEN AGE_CALC BETWEEN 60 AND 71 THEN 1 ELSE 0 END) AS AGE_5_TO_6,
	SUM(CASE WHEN AGE_CALC BETWEEN 72 AND 155 THEN 1 ELSE 0 END) AS AGE_6_TO_13,
	SUM(CASE WHEN AGE_CALC >= 156 THEN 1 ELSE 0 END) AS AGE_GT_13

	FROM 
	(
		SELECT H.MODULE_HDR_ID, H.ENTITY_ID, H.ENTITY_NAME, CHILD_ID, 
		((SUBSTRING(F.REP_YYYYMM, 1, 4) * 12) + SUBSTRING(F.REP_YYYYMM,5,2)) - ((SUBSTRING(C.BIRTH_YYYYMM, 1, 4) * 12) + SUBSTRING(C.BIRTH_YYYYMM,5,2)) AS AGE_CALC
		FROM CARS_MODULE_PERIOD_HDR H
		JOIN CARS_PERIOD P
		ON H.PERIOD_ID = P.PERIOD_ID
		AND 801_FLAG = 1
		JOIN CARS_801_AGGN_REF R
		ON CAST(SUBSTR(P.PERIOD_DESC, 5, 4) AS INTEGER) = R.FISCAL_YEAR
		AND R.AGGN_REF_ID = i_aggn_ref_id
		JOIN CARS_801_REC_COUNTS RC
		ON H.MODULE_HDR_ID = RC.MODULE_HDR_ID
		JOIN CARS_801_FAMILY F
		ON H.MODULE_HDR_ID = F.MODULE_HDR_ID
		JOIN CARS_801_CHILD C
		ON F.FAMILY_ID = C.FAMILY_ID
	) C
	GROUP BY MODULE_HDR_ID, ENTITY_ID, ENTITY_NAME
) B
JOIN CARS_TMP_AGE_GROUP_INIT I
ON B.MODULE_HDR_ID = I.MODULE_HDR_ID
;



DROP TEMPORARY TABLE IF EXISTS CARS_TMP_AGE_GROUP_ADJ_DATA;
CREATE TEMPORARY TABLE CARS_TMP_AGE_GROUP_ADJ_DATA AS  

SELECT
MODULE_HDR_ID, ENTITY_ID, ENTITY_NAME,
AGE_0_TO_1_UNADJ_CNT, AGE_0_TO_1_ADJ_CNT,
AGE_1_TO_2_UNADJ_CNT, AGE_1_TO_2_ADJ_CNT,
AGE_2_TO_3_UNADJ_CNT, AGE_2_TO_3_ADJ_CNT,
AGE_3_TO_4_UNADJ_CNT, AGE_3_TO_4_ADJ_CNT,
AGE_4_TO_5_UNADJ_CNT, AGE_4_TO_5_ADJ_CNT,
AGE_5_TO_6_UNADJ_CNT, AGE_5_TO_6_ADJ_CNT,
AGE_6_TO_13_UNADJ_CNT, AGE_6_TO_13_ADJ_CNT,
AGE_GT_13_UNADJ_CNT, AGE_GT_13_ADJ_CNT,
INVALID_UNADJ_CNT, INVALID_ADJ_CNT,
AGE_0_TO_1_UNADJ_CNT + AGE_1_TO_2_UNADJ_CNT + AGE_2_TO_3_UNADJ_CNT + AGE_3_TO_4_UNADJ_CNT + AGE_4_TO_5_UNADJ_CNT + AGE_5_TO_6_UNADJ_CNT + 
AGE_6_TO_13_UNADJ_CNT + AGE_GT_13_UNADJ_CNT + INVALID_UNADJ_CNT AS TOT_UNADJ_CNT,
AGE_0_TO_1_ADJ_CNT + AGE_1_TO_2_ADJ_CNT + AGE_2_TO_3_ADJ_CNT + AGE_3_TO_4_ADJ_CNT + AGE_4_TO_5_ADJ_CNT + AGE_5_TO_6_ADJ_CNT + 
AGE_6_TO_13_ADJ_CNT + AGE_GT_13_ADJ_CNT + INVALID_ADJ_CNT AS TOT_ADJ_CNT

FROM
(
	SELECT
	MODULE_HDR_ID, ENTITY_ID, ENTITY_NAME,
	AGE_0_TO_1 AS AGE_0_TO_1_UNADJ_CNT,
	AGE_1_TO_2 AS AGE_1_TO_2_UNADJ_CNT,
	AGE_2_TO_3 AS AGE_2_TO_3_UNADJ_CNT,
	AGE_3_TO_4 AS AGE_3_TO_4_UNADJ_CNT,
	AGE_4_TO_5 AS AGE_4_TO_5_UNADJ_CNT,
	AGE_5_TO_6 AS AGE_5_TO_6_UNADJ_CNT,
	AGE_6_TO_13 AS AGE_6_TO_13_UNADJ_CNT,
	AGE_GT_13 AS AGE_GT_13_UNADJ_CNT,
	INVALID AS INVALID_UNADJ_CNT,


	AGE_0_TO_1 * POOLING_FACTOR * .01 AS AGE_0_TO_1_ADJ_CNT,
	AGE_1_TO_2 * POOLING_FACTOR * .01 AS AGE_1_TO_2_ADJ_CNT,
	AGE_2_TO_3 * POOLING_FACTOR * .01 AS AGE_2_TO_3_ADJ_CNT,
	AGE_3_TO_4 * POOLING_FACTOR * .01 AS AGE_3_TO_4_ADJ_CNT,
	AGE_4_TO_5 * POOLING_FACTOR * .01 AS AGE_4_TO_5_ADJ_CNT,
	AGE_5_TO_6 * POOLING_FACTOR * .01 AS AGE_5_TO_6_ADJ_CNT,
	AGE_6_TO_13 * POOLING_FACTOR * .01 AS AGE_6_TO_13_ADJ_CNT,
	AGE_GT_13 * POOLING_FACTOR * .01 AS AGE_GT_13_ADJ_CNT,
	INVALID * POOLING_FACTOR * .01 AS INVALID_ADJ_CNT

	FROM CARS_TMP_AGE_GROUP_UNADJ_DATA
) A
;

DROP TEMPORARY TABLE IF EXISTS CARS_TMP_AGE_GROUP_AVG;
CREATE TEMPORARY TABLE CARS_TMP_AGE_GROUP_AVG AS  
SELECT
ENTITY_ID, ENTITY_NAME,
ROUND(AVG(AGE_0_TO_1_UNADJ_CNT), 0) AS AGE_0_TO_1_UNADJ_CNT, ROUND(AVG(AGE_0_TO_1_ADJ_CNT), 0) AS AGE_0_TO_1_ADJ_CNT,
ROUND(AVG(AGE_1_TO_2_UNADJ_CNT), 0) AS AGE_1_TO_2_UNADJ_CNT, ROUND(AVG(AGE_1_TO_2_ADJ_CNT), 0) AS AGE_1_TO_2_ADJ_CNT,
ROUND(AVG(AGE_2_TO_3_UNADJ_CNT), 0) AS AGE_2_TO_3_UNADJ_CNT, ROUND(AVG(AGE_2_TO_3_ADJ_CNT), 0) AS AGE_2_TO_3_ADJ_CNT,
ROUND(AVG(AGE_3_TO_4_UNADJ_CNT), 0) AS AGE_3_TO_4_UNADJ_CNT, ROUND(AVG(AGE_3_TO_4_ADJ_CNT), 0) AS AGE_3_TO_4_ADJ_CNT,
ROUND(AVG(AGE_4_TO_5_UNADJ_CNT), 0) AS AGE_4_TO_5_UNADJ_CNT, ROUND(AVG(AGE_4_TO_5_ADJ_CNT), 0) AS AGE_4_TO_5_ADJ_CNT,
ROUND(AVG(AGE_5_TO_6_UNADJ_CNT), 0) AS AGE_5_TO_6_UNADJ_CNT, ROUND(AVG(AGE_5_TO_6_ADJ_CNT), 0) AS AGE_5_TO_6_ADJ_CNT,
ROUND(AVG(AGE_6_TO_13_UNADJ_CNT), 0) AS AGE_6_TO_13_UNADJ_CNT, ROUND(AVG(AGE_6_TO_13_ADJ_CNT), 0) AS AGE_6_TO_13_ADJ_CNT,
ROUND(AVG(AGE_GT_13_UNADJ_CNT), 0) AS AGE_GT_13_UNADJ_CNT, ROUND(AVG(AGE_GT_13_ADJ_CNT), 0) AS AGE_GT_13_ADJ_CNT,
ROUND(AVG(INVALID_UNADJ_CNT), 0) AS INVALID_UNADJ_CNT, ROUND(AVG(INVALID_ADJ_CNT), 0) AS INVALID_ADJ_CNT,

ROUND(AVG(AGE_0_TO_1_UNADJ_CNT), 0) + ROUND(AVG(AGE_1_TO_2_UNADJ_CNT), 0) + ROUND(AVG(AGE_2_TO_3_UNADJ_CNT), 0) + ROUND(AVG(AGE_3_TO_4_UNADJ_CNT), 0) 
+ ROUND(AVG(AGE_4_TO_5_UNADJ_CNT), 0) + ROUND(AVG(AGE_5_TO_6_UNADJ_CNT), 0) + ROUND(AVG(AGE_6_TO_13_UNADJ_CNT), 0) 
+ ROUND(AVG(AGE_GT_13_UNADJ_CNT), 0) + ROUND(AVG(INVALID_UNADJ_CNT), 0) AS TOT_UNADJ_CNT,

ROUND(AVG(AGE_0_TO_1_ADJ_CNT), 0) + ROUND(AVG(AGE_1_TO_2_ADJ_CNT), 0) + ROUND(AVG(AGE_2_TO_3_ADJ_CNT), 0) + ROUND(AVG(AGE_3_TO_4_ADJ_CNT), 0) 
+ ROUND(AVG(AGE_4_TO_5_ADJ_CNT), 0) + ROUND(AVG(AGE_5_TO_6_ADJ_CNT), 0) + ROUND(AVG(AGE_6_TO_13_ADJ_CNT), 0) 
+ ROUND(AVG(AGE_GT_13_ADJ_CNT), 0) + ROUND(AVG(INVALID_ADJ_CNT), 0) AS TOT_ADJ_CNT

FROM CARS_TMP_AGE_GROUP_ADJ_DATA
GROUP BY ENTITY_ID, ENTITY_NAME
;


DROP TEMPORARY TABLE IF EXISTS CARS_TMP_AGE_GROUP_NATIONAL;
CREATE TEMPORARY TABLE CARS_TMP_AGE_GROUP_NATIONAL AS  
SELECT
0 AS ENTITY_ID, 'National' AS ENTITY_NAME,
SUM(AGE_0_TO_1_UNADJ_CNT) AS AGE_0_TO_1_UNADJ_CNT, SUM(AGE_0_TO_1_ADJ_CNT) AS AGE_0_TO_1_ADJ_CNT,
SUM(AGE_1_TO_2_UNADJ_CNT) AS AGE_1_TO_2_UNADJ_CNT, SUM(AGE_1_TO_2_ADJ_CNT) AS AGE_1_TO_2_ADJ_CNT,
SUM(AGE_2_TO_3_UNADJ_CNT) AS AGE_2_TO_3_UNADJ_CNT, SUM(AGE_2_TO_3_ADJ_CNT) AS AGE_2_TO_3_ADJ_CNT,
SUM(AGE_3_TO_4_UNADJ_CNT) AS AGE_3_TO_4_UNADJ_CNT, SUM(AGE_3_TO_4_ADJ_CNT) AS AGE_3_TO_4_ADJ_CNT,
SUM(AGE_4_TO_5_UNADJ_CNT) AS AGE_4_TO_5_UNADJ_CNT, SUM(AGE_4_TO_5_ADJ_CNT) AS AGE_4_TO_5_ADJ_CNT,
SUM(AGE_5_TO_6_UNADJ_CNT) AS AGE_5_TO_6_UNADJ_CNT, SUM(AGE_5_TO_6_ADJ_CNT) AS AGE_5_TO_6_ADJ_CNT,
SUM(AGE_6_TO_13_UNADJ_CNT) AS AGE_6_TO_13_UNADJ_CNT, SUM(AGE_6_TO_13_ADJ_CNT) AS AGE_6_TO_13_ADJ_CNT,
SUM(AGE_GT_13_UNADJ_CNT) AS AGE_GT_13_UNADJ_CNT, SUM(AGE_GT_13_ADJ_CNT) AS AGE_GT_13_ADJ_CNT,
SUM(INVALID_UNADJ_CNT) AS INVALID_UNADJ_CNT, SUM(INVALID_ADJ_CNT) AS INVALID_ADJ_CNT,
SUM(TOT_UNADJ_CNT) AS TOT_UNADJ_CNT, SUM(TOT_ADJ_CNT) AS TOT_ADJ_CNT
FROM CARS_TMP_AGE_GROUP_AVG;

DROP TEMPORARY TABLE IF EXISTS CARS_TMP_AGE_GROUP_PCT;
CREATE TEMPORARY TABLE CARS_TMP_AGE_GROUP_PCT AS  
SELECT
ENTITY_ID, ENTITY_NAME,
ROUND((AGE_0_TO_1_ADJ_CNT / TOT_ADJ_CNT) * 100, 2) AS AGE_0_TO_1_PCT,
ROUND((AGE_1_TO_2_ADJ_CNT / TOT_ADJ_CNT) * 100, 2) AS AGE_1_TO_2_PCT,
ROUND((AGE_2_TO_3_ADJ_CNT / TOT_ADJ_CNT) * 100, 2) AS AGE_2_TO_3_PCT,
ROUND((AGE_3_TO_4_ADJ_CNT / TOT_ADJ_CNT) * 100, 2) AS AGE_3_TO_4_PCT,
ROUND((AGE_4_TO_5_ADJ_CNT / TOT_ADJ_CNT) * 100, 2) AS AGE_4_TO_5_PCT,
ROUND((AGE_5_TO_6_ADJ_CNT / TOT_ADJ_CNT) * 100, 2) AS AGE_5_TO_6_PCT,
ROUND((AGE_6_TO_13_ADJ_CNT / TOT_ADJ_CNT) * 100, 2) AS AGE_6_TO_13_PCT,
ROUND((AGE_GT_13_ADJ_CNT / TOT_ADJ_CNT) * 100, 2) AS AGE_GT_13_PCT,
ROUND((INVALID_ADJ_CNT / TOT_ADJ_CNT) * 100, 2) AS INVALID_PCT,
CASE WHEN AGE_0_TO_1_ADJ_CNT IS NULL THEN NULL ELSE 100.00 END AS TOT_PCT /* IF POOLING FACTOR IS NULL */
FROM CARS_TMP_AGE_GROUP_AVG

UNION ALL

SELECT
ENTITY_ID, ENTITY_NAME, 
ROUND((AGE_0_TO_1_ADJ_CNT / TOT_ADJ_CNT) * 100, 2) AS AGE_0_TO_1_PCT,
ROUND((AGE_1_TO_2_ADJ_CNT / TOT_ADJ_CNT) * 100, 2) AS AGE_1_TO_2_PCT,
ROUND((AGE_2_TO_3_ADJ_CNT / TOT_ADJ_CNT) * 100, 2) AS AGE_2_TO_3_PCT,
ROUND((AGE_3_TO_4_ADJ_CNT / TOT_ADJ_CNT) * 100, 2) AS AGE_3_TO_4_PCT,
ROUND((AGE_4_TO_5_ADJ_CNT / TOT_ADJ_CNT) * 100, 2) AS AGE_4_TO_5_PCT,
ROUND((AGE_5_TO_6_ADJ_CNT / TOT_ADJ_CNT) * 100, 2) AS AGE_5_TO_6_PCT,
ROUND((AGE_6_TO_13_ADJ_CNT / TOT_ADJ_CNT) * 100, 2) AS AGE_6_TO_13_PCT,
ROUND((AGE_GT_13_ADJ_CNT / TOT_ADJ_CNT) * 100, 2) AS AGE_GT_13_PCT,
ROUND((INVALID_ADJ_CNT / TOT_ADJ_CNT) * 100, 2) AS INVALID_PCT,
100.00 AS TOT_PCT
FROM CARS_TMP_AGE_GROUP_NATIONAL;

INSERT INTO CARS_801_AGGN_AGE_GROUP
(
	AGGN_REF_ID,
	ENTITY_ID  ,
	ENTITY_NAME ,
	INVALID_AGE_CHILD_UNADJ_COUNT,
	INVALID_AGE_CHILD_ADJ_COUNT,
	INVALID_AGE_CHILD_PERCENT,
	AGE_0_TO_1_CHILD_UNADJ_COUNT,
	AGE_0_TO_1_CHILD_ADJ_COUNT,
	AGE_0_TO_1_PERCENT  ,
	AGE_1_TO_2_CHILD_UNADJ_COUNT,
	AGE_1_TO_2_CHILD_ADJ_COUNT,
	AGE_1_TO_2_PERCENT  ,
	AGE_2_TO_3_CHILD_UNADJ_COUNT,
	AGE_2_TO_3_CHILD_ADJ_COUNT,
	AGE_2_TO_3_PERCENT  ,
	AGE_3_TO_4_CHILD_UNADJ_COUNT,
	AGE_3_TO_4_CHILD_ADJ_COUNT,
	AGE_3_TO_4_PERCENT  ,
	AGE_4_TO_5_CHILD_UNADJ_COUNT,
	AGE_4_TO_5_CHILD_ADJ_COUNT,
	AGE_4_TO_5_PERCENT  ,
	AGE_5_TO_6_CHILD_UNADJ_COUNT,
	AGE_5_TO_6_CHILD_ADJ_COUNT,
	AGE_5_TO_6_PERCENT  ,
	AGE_6_TO_13_CHILD_UNADJ_COUNT,
	AGE_6_TO_13_CHILD_ADJ_COUNT,
	AGE_6_TO_13_PERCENT ,
	AGE_GT_13_CHILD_UNADJ_COUNT,
	AGE_GT_13_CHILD_ADJ_COUNT,
	AGE_GT_13_PERCENT   ,
	TOTAL_CHILD_UNADJ_COUNT,
	TOTAL_CHILD_ADJ_COUNT,
	TOTAL_CHILD_PERCENT
)
SELECT
i_aggn_ref_id,
A.ENTITY_ID, 
A.ENTITY_NAME, 
INVALID_UNADJ_CNT,
INVALID_ADJ_CNT,
INVALID_PCT,
AGE_0_TO_1_UNADJ_CNT,
AGE_0_TO_1_ADJ_CNT,
AGE_0_TO_1_PCT,
AGE_1_TO_2_UNADJ_CNT,
AGE_1_TO_2_ADJ_CNT,
AGE_1_TO_2_PCT,
AGE_2_TO_3_UNADJ_CNT,
AGE_2_TO_3_ADJ_CNT,
AGE_2_TO_3_PCT,
AGE_3_TO_4_UNADJ_CNT,
AGE_3_TO_4_ADJ_CNT,
AGE_3_TO_4_PCT,
AGE_4_TO_5_UNADJ_CNT,
AGE_4_TO_5_ADJ_CNT,
AGE_4_TO_5_PCT,
AGE_5_TO_6_UNADJ_CNT,
AGE_5_TO_6_ADJ_CNT,
AGE_5_TO_6_PCT,
AGE_6_TO_13_UNADJ_CNT,
AGE_6_TO_13_ADJ_CNT,
AGE_6_TO_13_PCT,
AGE_GT_13_UNADJ_CNT,
AGE_GT_13_ADJ_CNT,
AGE_GT_13_PCT,
TOT_UNADJ_CNT, 
TOT_ADJ_CNT, 
TOT_PCT

FROM CARS_TMP_AGE_GROUP_AVG A
JOIN CARS_TMP_AGE_GROUP_PCT P
ON A.ENTITY_ID = P.ENTITY_ID

UNION ALL 

SELECT
i_aggn_ref_id,
A.ENTITY_ID, 
A.ENTITY_NAME, 
INVALID_UNADJ_CNT,
INVALID_ADJ_CNT,
INVALID_PCT,
AGE_0_TO_1_UNADJ_CNT,
AGE_0_TO_1_ADJ_CNT,
AGE_0_TO_1_PCT,
AGE_1_TO_2_UNADJ_CNT,
AGE_1_TO_2_ADJ_CNT,
AGE_1_TO_2_PCT,
AGE_2_TO_3_UNADJ_CNT,
AGE_2_TO_3_ADJ_CNT,
AGE_2_TO_3_PCT,
AGE_3_TO_4_UNADJ_CNT,
AGE_3_TO_4_ADJ_CNT,
AGE_3_TO_4_PCT,
AGE_4_TO_5_UNADJ_CNT,
AGE_4_TO_5_ADJ_CNT,
AGE_4_TO_5_PCT,
AGE_5_TO_6_UNADJ_CNT,
AGE_5_TO_6_ADJ_CNT,
AGE_5_TO_6_PCT,
AGE_6_TO_13_UNADJ_CNT,
AGE_6_TO_13_ADJ_CNT,
AGE_6_TO_13_PCT,
AGE_GT_13_UNADJ_CNT,
AGE_GT_13_ADJ_CNT,
AGE_GT_13_PCT,
TOT_UNADJ_CNT, 
TOT_ADJ_CNT, 
TOT_PCT
FROM CARS_TMP_AGE_GROUP_NATIONAL A
JOIN CARS_TMP_AGE_GROUP_PCT P
ON A.ENTITY_ID = P.ENTITY_ID

UNION ALL
        
SELECT 
i_aggn_ref_id, 
E.ENTITY_ID,
E.ENTITY_NAME,  
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL
FROM CARS_ENTITY E
LEFT OUTER JOIN CARS_TMP_AGE_GROUP_AVG C
ON E.ENTITY_ID = C.ENTITY_ID
WHERE E.ENTITY_TYPE_CD = 'STATE-TER'
AND C.ENTITY_ID IS NULL 

;

		SET v_total_rows_inserted = ROW_COUNT();
		
DROP TEMPORARY TABLE IF EXISTS CARS_TMP_AGE_GROUP_INIT;
DROP TEMPORARY TABLE IF EXISTS CARS_TMP_AGE_GROUP_UNADJ_DATA;
DROP TEMPORARY TABLE IF EXISTS CARS_TMP_AGE_GROUP_ADJ_DATA;
DROP TEMPORARY TABLE IF EXISTS CARS_TMP_AGE_GROUP_AVG;
DROP TEMPORARY TABLE IF EXISTS CARS_TMP_AGE_GROUP_PCT;
DROP TEMPORARY TABLE IF EXISTS CARS_TMP_AGE_GROUP_NATIONAL;


UPDATE CARS_801_SP_LOG
SET SP_STATUS_TEXT= CONCAT('Success. Rows inserted: ',v_total_rows_inserted, ' Rows Deleted :', v_total_rows_deleted), END_TS=NOW()
WHERE  SP_LOG_ID=( SELECT MAX(SP_LOG_ID) FROM CARS_801_SP_LOG WHERE SP_NAME ='CARS_801_AGGN_SP_AGE_GROUP');
COMMIT;		
	
END$$
DELIMITER ;