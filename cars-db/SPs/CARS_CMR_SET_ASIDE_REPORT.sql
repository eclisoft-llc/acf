DROP PROCEDURE IF EXISTS CARS_CMR_SET_ASIDE_REPORT;
DELIMITER $$
CREATE PROCEDURE CARS_CMR_SET_ASIDE_REPORT (IN period_id INTEGER,IN excludeAcceptedFlag INTEGER, IN i_hdramend_id TEXT)
proc_label: BEGIN

    DECLARE v_Status_Text TEXT DEFAULT NULL;
	DECLARE v_hdramendid_Text TEXT DEFAULT NULL;
    DECLARE v_sql TEXT DEFAULT NULL;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
		SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
		
		UPDATE CARS_SP_LOG
			SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
		WHERE SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_SP_LOG WHERE SP_NAME='CARS_CMR_SET_ASIDE_REPORT');
			
		
	END;
	
		INSERT INTO CARS_SP_LOG (SP_NAME, SP_STATUS_TEXT, START_TS)
		VALUES('CARS_CMR_SET_ASIDE_REPORT', 'Started', NOW());	

IF excludeAcceptedFlag = 1 THEN SET v_Status_Text = ' AND  A.STATUS_TEXT <> ''Accepted'' ' ;
ELSE SET v_Status_Text = '  ' ;
END IF;

IF TRIM(i_hdramend_id)!='' THEN SET v_hdramendid_Text = CONCAT(' AND  A.HDR_AMEND_ID IN ( ',i_hdramend_id,') ') ;
ELSE SET v_hdramendid_Text = '  ' ;
END IF;

SET v_sql = 
CONCAT('
SELECT DISTINCT
E.ENTITY_NAME AS ''Lead Agency'',
E.OGM_TRIBAL_CD AS ''Tribal Code'',
ST.ENTITY_NAME AS ''State'',
R.ENTITY_NAME AS ''Region'',
I.ALLOCATION_SIZE AS ''Allocation'',
CONCAT("Request #",A.AMEND_SEQ_NUM) AS ''Request #'',
A.STATUS_TEXT AS ''Status'',
A.REQUESTED_BY AS ''Requested By'',
A.REQUESTED_TS AS ''Requested Time'',
MR.ANS_DEC AS ''Mandatory: $'',
DR.ANS_DEC AS ''Discretionary: $'',
PR.ANS_TEXT AS ''Project Name''

FROM CARS_MODULE_PERIOD_HDR H
JOIN CARS_CMR_HDR_AMEND A
ON H.MODULE_HDR_ID = A.MODULE_HDR_ID

JOIN CARS_ENTITY E ON (H.ENTITY_ID = E.ENTITY_ID and E.ENTITY_TYPE_CD = ''TRIBE'')
JOIN CARS_TRIBE_INFO I ON (H.ENTITY_ID = I.TRIBE_ID and H.PERIOD_ID = I.PERIOD_ID)
JOIN CARS_ENTITY R ON (E.REGION_ID = R.ENTITY_ID and R.ENTITY_TYPE_CD = ''REGION'')
JOIN CARS_ENTITY ST ON (E.ENTITY_STATE_CD = ST.ENTITY_STATE_CD and ST.ENTITY_TYPE_CD = ''STATE-TER'')

LEFT JOIN (SELECT N.ANS_DEC,A.HDR_AMEND_ID  
FROM CARS_MODULE_PERIOD_HDR H
JOIN CARS_CMR_HDR_AMEND A
ON H.MODULE_HDR_ID = A.MODULE_HDR_ID AND H.PERIOD_ID IN (',period_id,')
JOIN CARS_CMR_HDR_ANS N
ON A.HDR_AMEND_ID = N.HDR_AMEND_ID 
JOIN CARS_CMR_SUBQUES_RESP B
ON N.SUBQUES_RESP_ID = B.SUBQUES_RESP_ID AND B.RESP_LABEL_TEXT=''Mandatory: $'') AS MR
ON MR.HDR_AMEND_ID=A.HDR_AMEND_ID
LEFT JOIN (SELECT N.ANS_DEC,A.HDR_AMEND_ID 
FROM CARS_MODULE_PERIOD_HDR H
JOIN CARS_CMR_HDR_AMEND A
ON H.MODULE_HDR_ID = A.MODULE_HDR_ID AND H.PERIOD_ID IN (',period_id,')
JOIN CARS_CMR_HDR_ANS N
ON A.HDR_AMEND_ID = N.HDR_AMEND_ID 
JOIN CARS_CMR_SUBQUES_RESP B
ON N.SUBQUES_RESP_ID = B.SUBQUES_RESP_ID AND B.RESP_LABEL_TEXT=''Discretionary: $'') AS DR
ON DR.HDR_AMEND_ID=A.HDR_AMEND_ID
LEFT JOIN (SELECT N.ANS_TEXT,A.HDR_AMEND_ID 
FROM CARS_MODULE_PERIOD_HDR H
JOIN CARS_CMR_HDR_AMEND A
ON H.MODULE_HDR_ID = A.MODULE_HDR_ID AND H.PERIOD_ID IN (',period_id,')
JOIN CARS_CMR_HDR_ANS N
ON A.HDR_AMEND_ID = N.HDR_AMEND_ID 
JOIN CARS_CMR_SUBQUES_RESP B
ON N.SUBQUES_RESP_ID = B.SUBQUES_RESP_ID AND B.RESP_LABEL_TEXT=''Name of Project:'') AS PR
ON PR.HDR_AMEND_ID=A.HDR_AMEND_ID
			WHERE H.PERIOD_ID IN (',period_id,')', v_Status_Text,v_hdramendid_Text, '  
            ORDER BY H.ENTITY_NAME'
			)
			;

EXECUTE IMMEDIATE v_sql;
	
	SELECT 'Lead Agency' AS 'Lead Agency','Tribal Code' AS 'Tribal Code', 'State' AS 'State', 'Region' AS 'Region',
	'Allocation' AS 'Allocation','Request #' AS 'Request','Status' AS 'Status','Requested By' AS 'Requested By','Requested Time' AS 'Requested Time','Mandatory: $' AS 'Mandatory:',
	'Discretionary: $' AS 'Discretionary:','Project Name' AS 'Project Name';

UPDATE CARS_SP_LOG
SET SP_STATUS_TEXT= 'Success', END_TS=NOW()
WHERE  SP_LOG_ID=( SELECT MAX(SP_LOG_ID) FROM CARS_SP_LOG WHERE SP_NAME = 'CARS_CMR_SET_ASIDE_REPORT');
		
	
END$$
DELIMITER ;