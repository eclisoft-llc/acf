DROP PROCEDURE IF EXISTS CARS_801_AGGN_SP_REASON_FOR_CARE;
DELIMITER $$

CREATE PROCEDURE CARS_801_AGGN_SP_REASON_FOR_CARE( IN i_aggn_ref_id INT)
BEGIN
/******************************************************
 * Author: Zohreh Torabian
 * Report Name: Family Reasons for Receiving Care
 * Report Number: 200
 * Report Name: Family Reasons for Receiving Care in National Emergency (Cnt)
 * Report Number: 206 
 * Report Name: Family Reasons for Receiving Care in National Emergency (Pct)
 * Report Number: 207 
 * Desc: It populates data for table, 
 *		 CARS_801_AGGN_REASON_FOR_CARE.
 ******************************************************/
DECLARE v_rec_cnt INTEGER DEFAULT 0 ;
DECLARE v_total_rows_deleted INTEGER DEFAULT 0; 
DECLARE v_total_rows_inserted INTEGER DEFAULT 0; 
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
			SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
			 
			UPDATE CARS_801_SP_LOG
				SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
			WHERE SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_801_SP_LOG WHERE SP_NAME='CARS_801_AGGN_SP_REASON_FOR_CARE' );
			COMMIT;
		END;	
		
	INSERT INTO CARS_801_SP_LOG ( SP_NAME,  START_TS)
		VALUES( 'CARS_801_AGGN_SP_REASON_FOR_CARE',  NOW());	
		
		
	SELECT COUNT(*) INTO v_rec_cnt FROM CARS_801_AGGN_REASON_FOR_CARE WHERE  AGGN_REF_ID = i_aggn_ref_id;
 
		DELETE FROM CARS_801_AGGN_REASON_FOR_CARE
		WHERE AGGN_REF_ID = i_aggn_ref_id;
        
		SET v_total_rows_deleted = ROW_COUNT();


DROP TABLE IF EXISTS TMP_REASON_CD_M;
CREATE TEMPORARY TABLE TMP_REASON_CD_M AS
				    SELECT 	DISTINCT HDR.MODULE_HDR_ID 
						   
						   ,AGGN_REF_ID
						   ,HDR.ENTITY_ID
						   ,HDR.ENTITY_NAME	
						   ,HDR.FAMILY_COUNT AS FAM_MO_UNADJ_CNT
						   ,REC.FAMILY_COUNT AS FAM_CNT
						   ,AGGN_RF.FISCAL_YEAR 
							FROM CARS_MODULE_PERIOD_HDR HDR 
								JOIN CARS_PERIOD P 
							ON P.PERIOD_ID=HDR.PERIOD_ID 
							AND P.801_FLAG = 1
							 	JOIN CARS_801_REC_COUNTS REC
							ON REC.MODULE_HDR_ID=HDR.MODULE_HDR_ID
								JOIN CARS_801_AGGN_REF AGGN_RF 
							ON CAST(SUBSTR(P.PERIOD_DESC,5,4) AS INTEGER) =AGGN_RF.FISCAL_YEAR
							AND AGGN_RF.AGGN_REF_ID=i_aggn_ref_id; 
							
                           
							
DROP TABLE IF EXISTS TMP_REASON_RATIO;
CREATE TEMPORARY TABLE TMP_REASON_RATIO AS 							

SELECT 
				RES_M.MODULE_HDR_ID
				,RES_M.ENTITY_ID
           		,RES_M.ENTITY_NAME
           		,RES_M.FISCAL_YEAR
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD=1 THEN 1 END )/RES_M.FAM_CNT ELSE 0 END  EMP_RATIO
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD=2 THEN 1 END )/RES_M.FAM_CNT ELSE 0 END  TRAIN_RATIO
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD=3 THEN 1 END )/RES_M.FAM_CNT ELSE 0 END  EMP_TRAIN_RATIO
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD=4 THEN 1 END )/RES_M.FAM_CNT ELSE 0 END  PROT_SERV_RATIO
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD=6 THEN 1 END )/RES_M.FAM_CNT ELSE 0 END  EMP_RATIO_EMG
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD=7 THEN 1 END )/RES_M.FAM_CNT ELSE 0 END  TRAIN_RATIO_EMG
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD=8 THEN 1 END )/RES_M.FAM_CNT ELSE 0 END  EMP_TRAIN_RATIO_EMG
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD=9 THEN 1 END )/RES_M.FAM_CNT ELSE 0 END  PROT_SERV_RATIO_EMG
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD NOT IN (1,2,3,4) OR FAM.REASON_CD IS NULL THEN 1 END ) /RES_M.FAM_CNT ELSE 0 END EMG_INVALID_RATIO
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD NOT IN (1,2,3,4,6,7,8,9) OR FAM.REASON_CD IS NULL THEN 1 END ) /RES_M.FAM_CNT ELSE 0 END INVALID_RATIO
				
				
								
				FROM TMP_REASON_CD_M RES_M
                   JOIN CARS_801_FAMILY FAM
				ON FAM.MODULE_HDR_ID=RES_M.MODULE_HDR_ID
					
				
           
   GROUP BY 1,2,3,4;
/* SELECT * FROM TMP_REASON_RATIO; */
DROP TEMPORARY TABLE IF EXISTS CARS_801_TEMP_REASON_CARE;
CREATE TEMPORARY TABLE CARS_801_TEMP_REASON_CARE 
    AS	
SELECT RECR.ENTITY_ID,RECR.ENTITY_NAME AS STNAME,RECR.FISCAL_YEAR AS FISCY,
	 AVG(IFNULL(RECR.EMP_RATIO,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 			AS WGHTD1AVG,
     AVG(IFNULL(RECR.TRAIN_RATIO,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 			AS WGHTD2AVG,
     AVG(IFNULL(RECR.EMP_TRAIN_RATIO,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD3AVG,
     AVG(IFNULL(RECR.PROT_SERV_RATIO ,0)* IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD4AVG,
     
     AVG(IFNULL(INVALID_RATIO,0)* IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 				AS WGHTD5AVG,
                  
     AVG(IFNULL(RECR.EMP_RATIO_EMG,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD6AVG,
     AVG(IFNULL(RECR.TRAIN_RATIO_EMG,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD7AVG,
     AVG(IFNULL(RECR.EMP_TRAIN_RATIO_EMG,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 	AS WGHTD8AVG,
     AVG(IFNULL(RECR.PROT_SERV_RATIO_EMG,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 	AS WGHTD9AVG,
     AVG(IFNULL(EMG_INVALID_RATIO,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD10AVG,
	 
     SUM(IFNULL(RECR.EMP_RATIO,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 			AS WGHTD1SUM,
     SUM(IFNULL(RECR.TRAIN_RATIO,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 			AS WGHTD2SUM,
     SUM(IFNULL(RECR.EMP_TRAIN_RATIO,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD3SUM,
     SUM(IFNULL(RECR.PROT_SERV_RATIO ,0)* IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD4SUM,
     
     SUM(IFNULL(INVALID_RATIO,0)* IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 				AS WGHTD5SUM,
                  
     SUM(IFNULL(RECR.EMP_RATIO_EMG,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD6SUM,
     SUM(IFNULL(RECR.TRAIN_RATIO_EMG,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD7SUM,
     SUM(IFNULL(RECR.EMP_TRAIN_RATIO_EMG,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 	AS WGHTD8SUM,
     SUM(IFNULL(RECR.PROT_SERV_RATIO_EMG,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 	AS WGHTD9SUM,
     SUM(IFNULL(EMG_INVALID_RATIO,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD10SUM
     
                  
     FROM TMP_REASON_CD_M AREF
		JOIN  TMP_REASON_RATIO RECR
	 ON AREF.MODULE_HDR_ID=RECR.MODULE_HDR_ID
     
     AND AREF.FISCAL_YEAR=RECR.FISCAL_YEAR
		
	 
	 GROUP BY 1,2,3;
    
 


DROP TEMPORARY TABLE IF EXISTS CARS_801_TEMP_RUNTOT_NAT;
CREATE TEMPORARY TABLE CARS_801_TEMP_RUNTOT_NAT
	SELECT
	 CARE.ENTITY_ID
	,CARE.STNAME 
	,CARE.FISCY
	
	/*To calculate total family adjusted count per state and fiscal year using the formula*/  
	
	/* in this section, it uses formula to populate family unadjusted/adjusted count per state and fiscal year for each reason code 1-9*/
	/* in this section, it uses formula to populate family count percentage per state and fiscal year for each reason code 1-9*/
	/*emp*/
	,ROUND(CARE.EMPLOYMENT_FAMILY_UNADJ_COUNT) EMPLOYMENT_FAMILY_UNADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN ROUND(CARE.EMPLOYMENT_FAMILY_UNADJ_COUNT*FACT.PFACTOR,2) ELSE NULL END EMPLOYMENT_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND(CARE.EMPLOYMENT_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT*100,2) ELSE 0 END ELSE NULL END EMPLOYMENT_FAMILY_PERCENT
	/*train*/
	,ROUND(CARE.TRAINING_FAMILY_UNADJ_COUNT) TRAINING_FAMILY_UNADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(CARE.TRAINING_FAMILY_UNADJ_COUNT*FACT.PFACTOR) ELSE NULL END  TRAINING_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND((CARE.TRAINING_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END  TRAINING_FAMILY_PERCENT
	/*emp-train*/
	,ROUND( CARE.EMP_AND_TRAIN_FAMILY_UNADJ_COUNT) EMP_AND_TRAIN_FAMILY_UNADJ_COUNT 
	,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(CARE.EMP_AND_TRAIN_FAMILY_UNADJ_COUNT*FACT.PFACTOR,2)  ELSE NULL END EMP_AND_TRAIN_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND((CARE.EMP_AND_TRAIN_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END EMP_AND_TRAIN_FAMILY_PERCENT
	/*prov-serv*/
	,ROUND(CARE.PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT) PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(CARE.PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT *FACT.PFACTOR,2) ELSE NULL END PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND((CARE.PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END PROTECTIVE_SERVICE_FAMILY_PERCENT
	/*invalid*/
	/* to calculate all invalid unadjusted/adjusted counts and percentage per state and fiscal year*/
	,ROUND(CARE.INVALID_FAMILY_UNADJ_COUNT ) INVALID_FAMILY_UNADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(CARE.INVALID_FAMILY_UNADJ_COUNT*FACT.PFACTOR,2)  ELSE NULL END INVALID_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND((CARE.INVALID_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END  INVALID_FAMILY_PERCENT
	/*emp emg*/
	,ROUND( CARE.EMPLOYMENT_911_FAMILY_UNADJ_COUNT) EMPLOYMENT_911_FAMILY_UNADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(CARE.EMPLOYMENT_911_FAMILY_UNADJ_COUNT*FACT.PFACTOR,2)  ELSE NULL END EMPLOYMENT_911_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND((CARE.EMPLOYMENT_911_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END  EMPLOYMENT_911_FAMILY_PERCENT
	/*train emg*/
	, ROUND(CARE.TRAINING_911_FAMILY_UNADJ_COUNT) TRAINING_911_FAMILY_UNADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(CARE.TRAINING_911_FAMILY_UNADJ_COUNT*FACT.PFACTOR,2)  ELSE NULL END TRAINING_911_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND((CARE.TRAINING_911_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END TRAINING_911_FAMILY_PERCENT
	 /*emp-train emg*/
	,ROUND(CARE.EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT ) EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(CARE.EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT*FACT.PFACTOR,2)  ELSE NULL END EMP_AND_TRAIN_911_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND((CARE.EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END EMP_AND_TRAIN_911_FAMILY_PERCENT
	/*prov-serv emg*/
	,ROUND(CARE.PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT) PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(CARE.PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT*FACT.PFACTOR,2)  ELSE NULL END PROTECTIVE_SERVICE_911_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND((CARE.PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END PROTECTIVE_SERVICE_911_FAMILY_PERCENT
	
	
	
	/* invalid_911 emg*/
	/* to calculate all invalid 911 unadjusted/adjusted counts and percentage  per state and fiscal year*/ 
	,ROUND(CARE.INVALID_911_FAMILY_UNADJ_COUNT) INVALID_911_FAMILY_UNADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN ROUND(CARE.INVALID_911_FAMILY_UNADJ_COUNT*FACT.PFACTOR) ELSE NULL END INVALID_911_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND((CARE.INVALID_911_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END INVALID_911_FAMILY_PERCENT	
	
	
	
	
	
     FROM ( SELECT 
                    ENTITY_ID,
                    STNAME,
           			FISCY,
           			WGHTD1AVG	EMPLOYMENT_FAMILY_UNADJ_COUNT,
					WGHTD2AVG 	TRAINING_FAMILY_UNADJ_COUNT,
					WGHTD3AVG 	EMP_AND_TRAIN_FAMILY_UNADJ_COUNT,
					WGHTD4AVG 	PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT, 
					WGHTD5AVG 	INVALID_FAMILY_UNADJ_COUNT,
					WGHTD6AVG 	EMPLOYMENT_911_FAMILY_UNADJ_COUNT,
					WGHTD7AVG 	TRAINING_911_FAMILY_UNADJ_COUNT,
					WGHTD8AVG 	EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT,
					WGHTD9AVG 	PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT,
					WGHTD10AVG  INVALID_911_FAMILY_UNADJ_COUNT,
					WGHTD1SUM	EMPLOYMENT_FAMILY_UNADJ_COUNT_S,
					WGHTD2SUM	TRAINING_FAMILY_UNADJ_COUNT_S,
					WGHTD3SUM	EMP_AND_TRAIN_FAMILY_UNADJ_COUNT_S,
					WGHTD4SUM	PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT_S,
					WGHTD5SUM	INVALID_FAMILY_UNADJ_COUNT_S,
					WGHTD6SUM   EMPLOYMENT_911_FAMILY_UNADJ_COUNT_S,
					WGHTD7SUM	TRAINING_911_FAMILY_UNADJ_COUNT_S,
					WGHTD8SUM	EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT_S,
					WGHTD9SUM	PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT_S,		
					WGHTD10SUM	INVALID_911_FAMILY_UNADJ_COUNT_S,
					
					(
					WGHTD1SUM+
					WGHTD2SUM+
					WGHTD3SUM+
					WGHTD4SUM+ 
					WGHTD5SUM+
					WGHTD6SUM+
					WGHTD7SUM+
					WGHTD8SUM+
					WGHTD9SUM+
					WGHTD10SUM) TOTAL_WGHT
					FROM
					CARS_801_TEMP_REASON_CARE ) CARE 
		
	
		LEFT JOIN ( SELECT ENTITY_ID
						,ENTITY_NAME
						,PERIOD_DESC
						,CASE WHEN POOLING_FACTOR IS NULL THEN NULL ELSE POOLING_FACTOR * .01 END AS PFACTOR 
						FROM VW_CARS_801_POOLING_FACTOR FACT 
				  ) FACT
     						
	ON FACT.PERIOD_DESC LIKE CONCAT('%',CARE.FISCY)
	AND FACT.ENTITY_NAME=CARE.STNAME
	AND FACT.ENTITY_ID=CARE.ENTITY_ID;
INSERT INTO CARS_801_AGGN_REASON_FOR_CARE (
	AGGN_REF_ID , 
	ENTITY_ID , 
	ENTITY_NAME , 
	INVALID_FAMILY_UNADJ_COUNT , 
	INVALID_FAMILY_ADJ_COUNT , 
	INVALID_FAMILY_PERCENT ,
	INVALID_AND_911_FAMILY_UNADJ_COUNT , 
	INVALID_AND_911_FAMILY_ADJ_COUNT , 
	INVALID_AND_911_FAMILY_PERCENT , 	
	EMPLOYMENT_FAMILY_UNADJ_COUNT ,
	EMPLOYMENT_FAMILY_ADJ_COUNT , 
	EMPLOYMENT_FAMILY_PERCENT , 
	TRAINING_FAMILY_UNADJ_COUNT , 
	TRAINING_FAMILY_ADJ_COUNT , 
	TRAINING_FAMILY_PERCENT , 
	EMP_AND_TRAIN_FAMILY_UNADJ_COUNT , 
	EMP_AND_TRAIN_FAMILY_ADJ_COUNT , 
	EMP_AND_TRAIN_FAMILY_PERCENT , 
	PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT , 
	PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT , 
	PROTECTIVE_SERVICE_FAMILY_PERCENT , 
	OTHER_FAMILY_UNADJ_COUNT , 
	OTHER_FAMILY_ADJ_COUNT , 
	OTHER_FAMILY_PERCENT , 
	EMPLOYMENT_911_FAMILY_UNADJ_COUNT , 
	EMPLOYMENT_911_FAMILY_ADJ_COUNT , 
	EMPLOYMENT_911_FAMILY_PERCENT , 
	TRAINING_911_FAMILY_UNADJ_COUNT , 
	TRAINING_911_FAMILY_ADJ_COUNT , 
	TRAINING_911_FAMILY_PERCENT , 
	EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT , 
	EMP_AND_TRAIN_911_FAMILY_ADJ_COUNT , 
	EMP_AND_TRAIN_911_FAMILY_PERCENT , 
	PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT , 
	PROTECTIVE_SERVICE_911_FAMILY_ADJ_COUNT , 
	PROTECTIVE_SERVICE_911_FAMILY_PERCENT , 
	OTHER_911_FAMILY_UNADJ_COUNT , 
	OTHER_911_FAMILY_ADJ_COUNT , 
	OTHER_911_FAMILY_PERCENT
)	 
	
 SELECT 
		i_aggn_ref_id
	   ,ENTITY_ID 
	   ,STNAME  
	   
	   ,INVALID_FAMILY_UNADJ_COUNT					INVALID_FAMILY_UNADJ_COUNT
	   ,INVALID_FAMILY_ADJ_COUNT					INVALID_FAMILY_ADJ_COUNT
	   ,INVALID_FAMILY_PERCENT 						INVALID_FAMILY_PERCENT
	   
       ,INVALID_911_FAMILY_UNADJ_COUNT				INVALID_911_FAMILY_UNADJ_COUNT
	   ,INVALID_911_FAMILY_ADJ_COUNT				INVALID_911_FAMILY_ADJ_COUNT
	   ,INVALID_911_FAMILY_PERCENT 					INVALID_911_FAMILY_PERCENT
	   
	   ,EMPLOYMENT_FAMILY_UNADJ_COUNT				EMPLOYMENT_FAMILY_UNADJ_COUNT
	   ,EMPLOYMENT_FAMILY_ADJ_COUNT					EMPLOYMENT_FAMILY_ADJ_COUNT
	   ,EMPLOYMENT_FAMILY_PERCENT 					EMPLOYMENT_FAMILY_PERCENT
       
	   ,TRAINING_FAMILY_UNADJ_COUNT					TRAINING_FAMILY_UNADJ_COUNT
	   ,TRAINING_FAMILY_ADJ_COUNT					TRAINING_FAMILY_ADJ_COUNT
	   ,TRAINING_FAMILY_PERCENT 					TRAINING_FAMILY_PERCENT
       
	   ,EMP_AND_TRAIN_FAMILY_UNADJ_COUNT 			EMP_AND_TRAIN_FAMILY_UNADJ_COUNT
	   ,EMP_AND_TRAIN_FAMILY_ADJ_COUNT 				EMP_AND_TRAIN_FAMILY_ADJ_COUNT
	   ,EMP_AND_TRAIN_FAMILY_PERCENT  				EMP_AND_TRAIN_FAMILY_PERCENT
	   
	   ,PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT 		PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT
	   ,PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT 		PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT
	   ,PROTECTIVE_SERVICE_FAMILY_PERCENT  			PROTECTIVE_SERVICE_FAMILY_PERCENT
       
	   ,NULL AS OTHER_FAMILY_UNADJ_COUNT
	   ,NULL AS OTHER_FAMILY_ADJ_COUNT
	   ,NULL AS OTHER_FAMILY_PERCENT
       
	   ,EMPLOYMENT_911_FAMILY_UNADJ_COUNT			EMPLOYMENT_911_FAMILY_UNADJ_COUNT
	   ,EMPLOYMENT_911_FAMILY_ADJ_COUNT			EMPLOYMENT_911_FAMILY_ADJ_COUNT
	   ,EMPLOYMENT_911_FAMILY_PERCENT 				EMPLOYMENT_911_FAMILY_PERCENT
       
	   ,TRAINING_911_FAMILY_UNADJ_COUNT			TRAINING_911_FAMILY_UNADJ_COUNT
	   ,TRAINING_911_FAMILY_ADJ_COUNT				TRAINING_911_FAMILY_ADJ_COUNT
	   ,TRAINING_911_FAMILY_PERCENT 				TRAINING_911_FAMILY_PERCENT
       
       ,EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT		EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT
	   ,EMP_AND_TRAIN_911_FAMILY_ADJ_COUNT			EMP_AND_TRAIN_911_FAMILY_ADJ_COUNT
	   ,EMP_AND_TRAIN_911_FAMILY_PERCENT  			EMP_AND_TRAIN_911_FAMILY_PERCENT
       
	   ,PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT  PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT
	   ,PROTECTIVE_SERVICE_911_FAMILY_ADJ_COUNT 	PROTECTIVE_SERVICE_911_FAMILY_ADJ_COUNT
	   ,PROTECTIVE_SERVICE_911_FAMILY_PERCENT 		PROTECTIVE_SERVICE_911_FAMILY_PERCENT
       
	   ,NULL AS OTHER_911_FAMILY_UNADJ_COUNT
	   ,NULL AS OTHER_911_FAMILY_ADJ_COUNT
	   ,NULL AS OTHER_911_FAMILY_PERCENT
       
	 
	   FROM CARS_801_TEMP_RUNTOT_NAT
UNION ALL
SELECT
   i_aggn_ref_id
	,0
	,'National'
    
	,NAT_DT.NAT_INVALID_FAMILY_UNADJ_COUNT
	,NAT_DT.NAT_INVALID_FAMILY_ADJ_COUNT
	,CASE WHEN TOTAL_ADJ_CNT>0 THEN ROUND(NAT_INVALID_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100 ,2) ELSE  NULL END  					NAT_INVALID_FAMILY_PERCENT
    
	,NAT_DT.NAT_INVALID_911_FAMILY_UNADJ_COUNT
	,NAT_DT.NAT_INVALID_911_FAMILY_ADJ_COUNT
	,CASE WHEN TOTAL_ADJ_CNT>0 THEN ROUND(NAT_DT.NAT_INVALID_911_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100,2) ELSE  NULL END  			NAT_INVALID_911_PERCENT
	
	,NAT_DT.NAT_EMPLOYMENT_FAMILY_UNADJ_COUNT
	,NAT_DT.NAT_EMPLOYMENT_FAMILY_ADJ_COUNT 
	,CASE WHEN  TOTAL_ADJ_CNT>0 THEN ROUND(NAT_DT.NAT_EMPLOYMENT_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100,2) ELSE  NULL END  			NAT_EMPLOYMENT_FAMILY_PERCENT
    
	,NAT_DT.NAT_TRAINING_FAMILY_UNADJ_COUNT
	,NAT_DT.NAT_TRAINING_FAMILY_ADJ_COUNT
	,CASE WHEN TOTAL_ADJ_CNT>0 THEN ROUND(NAT_DT.NAT_TRAINING_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100,2) ELSE  NULL END 			 	NAT_TRAINING_FAMILY_PERCENT
    
	,NAT_DT.NAT_EMP_AND_TRAIN_FAMILY_UNADJ_COUNT
	,NAT_DT.NAT_EMP_AND_TRAIN_FAMILY_ADJ_COUNT
	,CASE WHEN TOTAL_ADJ_CNT>0 THEN ROUND(NAT_DT.NAT_EMP_AND_TRAIN_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100,2) ELSE  NULL END  		NAT_EMP_AND_TRAIN_FAMILY_PERCENT
    
	,NAT_DT.NAT_PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT
	,NAT_DT.NAT_PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT
	,CASE WHEN TOTAL_ADJ_CNT>0 THEN ROUND(NAT_DT.NAT_PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100,2) ELSE NULL END    	NAT_PROTECTIVE_SERVICE_FAMILY_PERCENT
	
	
	,NULL 
	,NULL
	,NULL
     
	,NAT_EMPLOYMENT_911_FAMILY_UNADJ_COUNT
	,NAT_EMPLOYMENT_911_FAMILY_ADJ_COUNT
	,CASE WHEN TOTAL_ADJ_CNT>0 THEN ROUND(NAT_DT.NAT_EMPLOYMENT_911_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100,2) ELSE  NULL END 	 	NAT_EMPLOYMENT_911_FAMILY_PERCENT
     
	,NAT_TRAINING_911_FAMILY_UNADJ_COUNT
	,NAT_TRAINING_911_FAMILY_ADJ_COUNT
	,CASE WHEN  TOTAL_ADJ_CNT>0 THEN ROUND(NAT_DT.NAT_TRAINING_911_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100,2) ELSE  NULL END 		NAT_TRAINING_911_FAMILY_PERCENT
     
	,NAT_EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT 
	,NAT_EMP_AND_TRAIN_911_FAMILY_ADJ_COUNT
	,CASE WHEN  TOTAL_ADJ_CNT>0 THEN ROUND(NAT_EMP_AND_TRAIN_911_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100,2) ELSE  NULL END 	 		NAT_EMP_AND_TRAIN_911_FAMILY_PERCENT
	
	,NAT_PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT
	,NAT_PROTECTIVE_SERVICE_911_FAMILY_ADJ_COUNT
	,CASE WHEN  TOTAL_ADJ_CNT>0 THEN ROUND(NAT_PROTECTIVE_SERVICE_911_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100,2) ELSE  NULL END  	NAT_PROTECTIVE_SERVICE_911_FAMILY_PERCENT

	,NULL 
	,NULL
	,NULL
	FROM 
	(
		SELECT
			
			 SUM(IFNULL(EMPLOYMENT_FAMILY_UNADJ_COUNT,0)) 				NAT_EMPLOYMENT_FAMILY_UNADJ_COUNT
			,SUM(IFNULL(EMPLOYMENT_FAMILY_ADJ_COUNT,0)) 				NAT_EMPLOYMENT_FAMILY_ADJ_COUNT
			 
			,SUM(IFNULL(TRAINING_FAMILY_UNADJ_COUNT,0))					NAT_TRAINING_FAMILY_UNADJ_COUNT
			,SUM(IFNULL(TRAINING_FAMILY_ADJ_COUNT,0))  					NAT_TRAINING_FAMILY_ADJ_COUNT
			
			,SUM(IFNULL(EMP_AND_TRAIN_FAMILY_UNADJ_COUNT,0)) 			NAT_EMP_AND_TRAIN_FAMILY_UNADJ_COUNT
			,SUM(IFNULL(EMP_AND_TRAIN_FAMILY_ADJ_COUNT,0))  			NAT_EMP_AND_TRAIN_FAMILY_ADJ_COUNT
			
			,SUM(IFNULL(INVALID_911_FAMILY_UNADJ_COUNT,0)) 				NAT_INVALID_911_FAMILY_UNADJ_COUNT
			,SUM(IFNULL(INVALID_911_FAMILY_ADJ_COUNT,0)) 				NAT_INVALID_911_FAMILY_ADJ_COUNT
			
			,SUM(IFNULL(PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT,0)) 		NAT_PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT
			,SUM(IFNULL(PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT,0)) 		NAT_PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT
			
			,SUM(IFNULL(INVALID_FAMILY_UNADJ_COUNT,0)) 					NAT_INVALID_FAMILY_UNADJ_COUNT
            ,SUM(IFNULL(INVALID_FAMILY_ADJ_COUNT,0))  					NAT_INVALID_FAMILY_ADJ_COUNT
			
		    ,SUM(IFNULL(EMPLOYMENT_911_FAMILY_UNADJ_COUNT,0)) 			NAT_EMPLOYMENT_911_FAMILY_UNADJ_COUNT
			,SUM(IFNULL(EMPLOYMENT_911_FAMILY_ADJ_COUNT,0)) 			NAT_EMPLOYMENT_911_FAMILY_ADJ_COUNT
			
			,SUM(IFNULL(TRAINING_911_FAMILY_UNADJ_COUNT,0))				NAT_TRAINING_911_FAMILY_UNADJ_COUNT
			,SUM(IFNULL(TRAINING_911_FAMILY_ADJ_COUNT,0)) 				NAT_TRAINING_911_FAMILY_ADJ_COUNT
			
			,SUM(IFNULL(EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT,0))		NAT_EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT
			,SUM(IFNULL(EMP_AND_TRAIN_911_FAMILY_ADJ_COUNT,0))			NAT_EMP_AND_TRAIN_911_FAMILY_ADJ_COUNT
			
			,SUM(IFNULL(PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT,0)) 	NAT_PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT
			,SUM(IFNULL(PROTECTIVE_SERVICE_911_FAMILY_ADJ_COUNT,0))		NAT_PROTECTIVE_SERVICE_911_FAMILY_ADJ_COUNT
			
            ,(SUM(IFNULL(EMPLOYMENT_FAMILY_ADJ_COUNT,0)) +
        	  SUM(IFNULL(TRAINING_FAMILY_ADJ_COUNT,0))+
        	  SUM(IFNULL(EMP_AND_TRAIN_FAMILY_ADJ_COUNT,0))+
        	  SUM(IFNULL(PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT,0))+
        	  SUM(IFNULL(INVALID_FAMILY_ADJ_COUNT,0)) +
        	  SUM(IFNULL(EMPLOYMENT_911_FAMILY_ADJ_COUNT,0))+
        	  SUM(IFNULL(TRAINING_911_FAMILY_ADJ_COUNT,0))+
        	  SUM(IFNULL(EMP_AND_TRAIN_911_FAMILY_ADJ_COUNT,0))+
        	  SUM(IFNULL(PROTECTIVE_SERVICE_911_FAMILY_ADJ_COUNT,0))+
        	  SUM(IFNULL(INVALID_911_FAMILY_ADJ_COUNT,0))) TOTAL_ADJ_CNT
        
			
		FROM CARS_801_TEMP_RUNTOT_NAT 
			
	) NAT_DT		
	
	
			
	UNION ALL
	SELECT 
    i_aggn_ref_id
    ,E.ENTITY_ID		   
    ,E.ENTITY_NAME
    
	,NULL
	,NULL
	,NULL
	
    ,NULL
	,NULL
	,NULL
	
	,NULL
	,NULL
	,NULL
    
	,NULL
	,NULL
	,NULL
    
	,NULL
	,NULL
	,NULL
    
	,NULL
	,NULL
	,NULL
    
    ,NULL
	,NULL
	,NULL
    
	,NULL
	,NULL
	,NULL
    
	,NULL
	,NULL
	,NULL
	
	,NULL
	,NULL
	,NULL
	
	,NULL
	,NULL
	,NULL
	
    ,NULL
	,NULL
	,NULL
     FROM CARS_ENTITY E
          LEFT OUTER JOIN CARS_801_TEMP_RUNTOT_NAT C
     ON E.ENTITY_ID = C.ENTITY_ID
     WHERE E.ENTITY_TYPE_CD = 'STATE-TER'
     AND C.ENTITY_ID IS NULL ;
	 
	SET v_total_rows_inserted = ROW_COUNT();

UPDATE CARS_801_SP_LOG
SET SP_STATUS_TEXT= CONCAT('Success. Rows inserted: ',v_total_rows_inserted, ' Rows Deleted :', v_total_rows_deleted), END_TS=NOW()
 
WHERE  SP_LOG_ID=( SELECT MAX(SP_LOG_ID) FROM CARS_801_SP_LOG WHERE SP_NAME ='CARS_801_AGGN_SP_REASON_FOR_CARE');
COMMIT;		
	
END$$
DELIMITER ;DELIMITER $$
CREATE OR REPLACE PROCEDURE CARS_801_AGGN_SP_REASON_FOR_CARE( IN i_aggn_ref_id INT)
BEGIN
/******************************************************
 * Author: Zohreh Torabian
 * Report Name: Family Reasons for Receiving Care
 * Report Number: 200
 * Report Name: Family Reasons for Receiving Care in National Emergency (Cnt)
 * Report Number: 206 
 * Report Name: Family Reasons for Receiving Care in National Emergency (Pct)
 * Report Number: 207 
 * Desc: It populates data for table, 
 *		 CARS_801_AGGN_REASON_FOR_CARE.
 ******************************************************/
DECLARE v_rec_cnt INTEGER DEFAULT 0 ;
DECLARE v_total_rows_deleted INTEGER DEFAULT 0; 
DECLARE v_total_rows_inserted INTEGER DEFAULT 0; 
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
			SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
			 
			UPDATE CARS_801_SP_LOG
				SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
			WHERE SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_801_SP_LOG WHERE SP_NAME='CARS_801_AGGN_SP_REASON_FOR_CARE' );
			COMMIT;
		END;	
		
	INSERT INTO CARS_801_SP_LOG ( SP_NAME,  START_TS)
		VALUES( 'CARS_801_AGGN_SP_REASON_FOR_CARE',  NOW());	
		
		
	SELECT COUNT(*) INTO v_rec_cnt FROM CARS_801_AGGN_REASON_FOR_CARE WHERE  AGGN_REF_ID = i_aggn_ref_id;
 
		DELETE FROM CARS_801_AGGN_REASON_FOR_CARE
		WHERE AGGN_REF_ID = i_aggn_ref_id;
        
		SET v_total_rows_deleted = ROW_COUNT();


DROP TABLE IF EXISTS TMP_REASON_CD_M;
CREATE TEMPORARY TABLE TMP_REASON_CD_M AS
				    SELECT 	DISTINCT HDR.MODULE_HDR_ID 
						   
						   ,AGGN_REF_ID
						   ,HDR.ENTITY_ID
						   ,HDR.ENTITY_NAME	
						   ,HDR.FAMILY_COUNT AS FAM_MO_UNADJ_CNT
						   ,REC.FAMILY_COUNT AS FAM_CNT
						   ,AGGN_RF.FISCAL_YEAR 
							FROM CARS_MODULE_PERIOD_HDR HDR 
								JOIN CARS_PERIOD P 
							ON P.PERIOD_ID=HDR.PERIOD_ID 
							AND P.801_FLAG = 1
							 	JOIN CARS_801_REC_COUNTS REC
							ON REC.MODULE_HDR_ID=HDR.MODULE_HDR_ID
								JOIN CARS_801_AGGN_REF AGGN_RF 
							ON CAST(SUBSTR(P.PERIOD_DESC,5,4) AS INTEGER) =AGGN_RF.FISCAL_YEAR
							AND AGGN_RF.AGGN_REF_ID=i_aggn_ref_id; 
							
                           
							
DROP TABLE IF EXISTS TMP_REASON_RATIO;
CREATE TEMPORARY TABLE TMP_REASON_RATIO AS 							

SELECT 
				RES_M.MODULE_HDR_ID
				,RES_M.ENTITY_ID
           		,RES_M.ENTITY_NAME
           		,RES_M.FISCAL_YEAR
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD=1 THEN 1 END )/RES_M.FAM_CNT ELSE 0 END  EMP_RATIO
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD=2 THEN 1 END )/RES_M.FAM_CNT ELSE 0 END  TRAIN_RATIO
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD=3 THEN 1 END )/RES_M.FAM_CNT ELSE 0 END  EMP_TRAIN_RATIO
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD=4 THEN 1 END )/RES_M.FAM_CNT ELSE 0 END  PROT_SERV_RATIO
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD=6 THEN 1 END )/RES_M.FAM_CNT ELSE 0 END  EMP_RATIO_EMG
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD=7 THEN 1 END )/RES_M.FAM_CNT ELSE 0 END  TRAIN_RATIO_EMG
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD=8 THEN 1 END )/RES_M.FAM_CNT ELSE 0 END  EMP_TRAIN_RATIO_EMG
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD=9 THEN 1 END )/RES_M.FAM_CNT ELSE 0 END  PROT_SERV_RATIO_EMG
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD NOT IN (1,2,3,4) OR FAM.REASON_CD IS NULL THEN 1 END ) /RES_M.FAM_CNT ELSE 0 END EMG_INVALID_RATIO
				,CASE WHEN RES_M.FAM_CNT>0 THEN  COUNT(CASE WHEN FAM.REASON_CD NOT IN (1,2,3,4,6,7,8,9) OR FAM.REASON_CD IS NULL THEN 1 END ) /RES_M.FAM_CNT ELSE 0 END INVALID_RATIO
				
				
								
				FROM TMP_REASON_CD_M RES_M
                   JOIN CARS_801_FAMILY FAM
				ON FAM.MODULE_HDR_ID=RES_M.MODULE_HDR_ID
					
				
           
   GROUP BY 1,2,3,4;
/* SELECT * FROM TMP_REASON_RATIO; */
DROP TEMPORARY TABLE IF EXISTS CARS_801_TEMP_REASON_CARE;
CREATE TEMPORARY TABLE CARS_801_TEMP_REASON_CARE 
    AS	
SELECT RECR.ENTITY_ID,RECR.ENTITY_NAME AS STNAME,RECR.FISCAL_YEAR AS FISCY,
	 AVG(IFNULL(RECR.EMP_RATIO,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 			AS WGHTD1AVG,
     AVG(IFNULL(RECR.TRAIN_RATIO,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 			AS WGHTD2AVG,
     AVG(IFNULL(RECR.EMP_TRAIN_RATIO,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD3AVG,
     AVG(IFNULL(RECR.PROT_SERV_RATIO ,0)* IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD4AVG,
     
     AVG(IFNULL(INVALID_RATIO,0)* IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 				AS WGHTD5AVG,
                  
     AVG(IFNULL(RECR.EMP_RATIO_EMG,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD6AVG,
     AVG(IFNULL(RECR.TRAIN_RATIO_EMG,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD7AVG,
     AVG(IFNULL(RECR.EMP_TRAIN_RATIO_EMG,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 	AS WGHTD8AVG,
     AVG(IFNULL(RECR.PROT_SERV_RATIO_EMG,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 	AS WGHTD9AVG,
     AVG(IFNULL(EMG_INVALID_RATIO,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD10AVG,
	 
     SUM(IFNULL(RECR.EMP_RATIO,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 			AS WGHTD1SUM,
     SUM(IFNULL(RECR.TRAIN_RATIO,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 			AS WGHTD2SUM,
     SUM(IFNULL(RECR.EMP_TRAIN_RATIO,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD3SUM,
     SUM(IFNULL(RECR.PROT_SERV_RATIO ,0)* IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD4SUM,
     
     SUM(IFNULL(INVALID_RATIO,0)* IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 				AS WGHTD5SUM,
                  
     SUM(IFNULL(RECR.EMP_RATIO_EMG,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD6SUM,
     SUM(IFNULL(RECR.TRAIN_RATIO_EMG,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD7SUM,
     SUM(IFNULL(RECR.EMP_TRAIN_RATIO_EMG,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 	AS WGHTD8SUM,
     SUM(IFNULL(RECR.PROT_SERV_RATIO_EMG,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 	AS WGHTD9SUM,
     SUM(IFNULL(EMG_INVALID_RATIO,0) * IFNULL(AREF.FAM_MO_UNADJ_CNT,0)) 		AS WGHTD10SUM
     
                  
     FROM TMP_REASON_CD_M AREF
		JOIN  TMP_REASON_RATIO RECR
	 ON AREF.MODULE_HDR_ID=RECR.MODULE_HDR_ID
     
     AND AREF.FISCAL_YEAR=RECR.FISCAL_YEAR
		
	 
	 GROUP BY 1,2,3;
    
 


DROP TEMPORARY TABLE IF EXISTS CARS_801_TEMP_RUNTOT_NAT;
CREATE TEMPORARY TABLE CARS_801_TEMP_RUNTOT_NAT
	SELECT
	 CARE.ENTITY_ID
	,CARE.STNAME 
	,CARE.FISCY
	
	/*To calculate total family adjusted count per state and fiscal year using the formula*/  
	
	/* in this section, it uses formula to populate family unadjusted/adjusted count per state and fiscal year for each reason code 1-9*/
	/* in this section, it uses formula to populate family count percentage per state and fiscal year for each reason code 1-9*/
	/*emp*/
	,ROUND(CARE.EMPLOYMENT_FAMILY_UNADJ_COUNT) EMPLOYMENT_FAMILY_UNADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN ROUND(CARE.EMPLOYMENT_FAMILY_UNADJ_COUNT*FACT.PFACTOR,2) ELSE NULL END EMPLOYMENT_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND(CARE.EMPLOYMENT_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT*100,2) ELSE 0 END ELSE NULL END EMPLOYMENT_FAMILY_PERCENT
	/*train*/
	,ROUND(CARE.TRAINING_FAMILY_UNADJ_COUNT) TRAINING_FAMILY_UNADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(CARE.TRAINING_FAMILY_UNADJ_COUNT*FACT.PFACTOR) ELSE NULL END  TRAINING_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND((CARE.TRAINING_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END  TRAINING_FAMILY_PERCENT
	/*emp-train*/
	,ROUND( CARE.EMP_AND_TRAIN_FAMILY_UNADJ_COUNT) EMP_AND_TRAIN_FAMILY_UNADJ_COUNT 
	,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(CARE.EMP_AND_TRAIN_FAMILY_UNADJ_COUNT*FACT.PFACTOR,2)  ELSE NULL END EMP_AND_TRAIN_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND((CARE.EMP_AND_TRAIN_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END EMP_AND_TRAIN_FAMILY_PERCENT
	/*prov-serv*/
	,ROUND(CARE.PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT) PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(CARE.PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT *FACT.PFACTOR,2) ELSE NULL END PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND((CARE.PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END PROTECTIVE_SERVICE_FAMILY_PERCENT
	/*invalid*/
	/* to calculate all invalid unadjusted/adjusted counts and percentage per state and fiscal year*/
	,ROUND(CARE.INVALID_FAMILY_UNADJ_COUNT ) INVALID_FAMILY_UNADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(CARE.INVALID_FAMILY_UNADJ_COUNT*FACT.PFACTOR,2)  ELSE NULL END INVALID_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND((CARE.INVALID_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END  INVALID_FAMILY_PERCENT
	/*emp emg*/
	,ROUND( CARE.EMPLOYMENT_911_FAMILY_UNADJ_COUNT) EMPLOYMENT_911_FAMILY_UNADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(CARE.EMPLOYMENT_911_FAMILY_UNADJ_COUNT*FACT.PFACTOR,2)  ELSE NULL END EMPLOYMENT_911_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND((CARE.EMPLOYMENT_911_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END  EMPLOYMENT_911_FAMILY_PERCENT
	/*train emg*/
	, ROUND(CARE.TRAINING_911_FAMILY_UNADJ_COUNT) TRAINING_911_FAMILY_UNADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(CARE.TRAINING_911_FAMILY_UNADJ_COUNT*FACT.PFACTOR,2)  ELSE NULL END TRAINING_911_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND((CARE.TRAINING_911_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END TRAINING_911_FAMILY_PERCENT
	 /*emp-train emg*/
	,ROUND(CARE.EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT ) EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(CARE.EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT*FACT.PFACTOR,2)  ELSE NULL END EMP_AND_TRAIN_911_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND((CARE.EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END EMP_AND_TRAIN_911_FAMILY_PERCENT
	/*prov-serv emg*/
	,ROUND(CARE.PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT) PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(CARE.PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT*FACT.PFACTOR,2)  ELSE NULL END PROTECTIVE_SERVICE_911_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND((CARE.PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END PROTECTIVE_SERVICE_911_FAMILY_PERCENT
	
	
	
	/* invalid_911 emg*/
	/* to calculate all invalid 911 unadjusted/adjusted counts and percentage  per state and fiscal year*/ 
	,ROUND(CARE.INVALID_911_FAMILY_UNADJ_COUNT) INVALID_911_FAMILY_UNADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN ROUND(CARE.INVALID_911_FAMILY_UNADJ_COUNT*FACT.PFACTOR) ELSE NULL END INVALID_911_FAMILY_ADJ_COUNT
	,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN CARE.TOTAL_WGHT>0 THEN ROUND((CARE.INVALID_911_FAMILY_UNADJ_COUNT_S/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END INVALID_911_FAMILY_PERCENT	
	
	
	
	
	
     FROM ( SELECT 
                    ENTITY_ID,
                    STNAME,
           			FISCY,
           			WGHTD1AVG	EMPLOYMENT_FAMILY_UNADJ_COUNT,
					WGHTD2AVG 	TRAINING_FAMILY_UNADJ_COUNT,
					WGHTD3AVG 	EMP_AND_TRAIN_FAMILY_UNADJ_COUNT,
					WGHTD4AVG 	PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT, 
					WGHTD5AVG 	INVALID_FAMILY_UNADJ_COUNT,
					WGHTD6AVG 	EMPLOYMENT_911_FAMILY_UNADJ_COUNT,
					WGHTD7AVG 	TRAINING_911_FAMILY_UNADJ_COUNT,
					WGHTD8AVG 	EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT,
					WGHTD9AVG 	PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT,
					WGHTD10AVG  INVALID_911_FAMILY_UNADJ_COUNT,
					WGHTD1SUM	EMPLOYMENT_FAMILY_UNADJ_COUNT_S,
					WGHTD2SUM	TRAINING_FAMILY_UNADJ_COUNT_S,
					WGHTD3SUM	EMP_AND_TRAIN_FAMILY_UNADJ_COUNT_S,
					WGHTD4SUM	PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT_S,
					WGHTD5SUM	INVALID_FAMILY_UNADJ_COUNT_S,
					WGHTD6SUM   EMPLOYMENT_911_FAMILY_UNADJ_COUNT_S,
					WGHTD7SUM	TRAINING_911_FAMILY_UNADJ_COUNT_S,
					WGHTD8SUM	EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT_S,
					WGHTD9SUM	PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT_S,		
					WGHTD10SUM	INVALID_911_FAMILY_UNADJ_COUNT_S,
					
					(
					WGHTD1SUM+
					WGHTD2SUM+
					WGHTD3SUM+
					WGHTD4SUM+ 
					WGHTD5SUM+
					WGHTD6SUM+
					WGHTD7SUM+
					WGHTD8SUM+
					WGHTD9SUM+
					WGHTD10SUM) TOTAL_WGHT
					FROM
					CARS_801_TEMP_REASON_CARE ) CARE 
		
	
		LEFT JOIN ( SELECT ENTITY_ID
						,ENTITY_NAME
						,PERIOD_DESC
						,CASE WHEN POOLING_FACTOR IS NULL THEN NULL ELSE POOLING_FACTOR *.01 AS PFACTOR 
						FROM VW_CARS_801_POOLING_FACTOR FACT 
				  ) FACT
     						
	ON FACT.PERIOD_DESC LIKE CONCAT('%',CARE.FISCY)
	AND FACT.ENTITY_NAME=CARE.STNAME
	AND FACT.ENTITY_ID=CARE.ENTITY_ID;
INSERT INTO CARS_801_AGGN_REASON_FOR_CARE (
	AGGN_REF_ID , 
	ENTITY_ID , 
	ENTITY_NAME , 
	INVALID_FAMILY_UNADJ_COUNT , 
	INVALID_FAMILY_ADJ_COUNT , 
	INVALID_FAMILY_PERCENT ,
	INVALID_AND_911_FAMILY_UNADJ_COUNT , 
	INVALID_AND_911_FAMILY_ADJ_COUNT , 
	INVALID_AND_911_FAMILY_PERCENT , 	
	EMPLOYMENT_FAMILY_UNADJ_COUNT ,
	EMPLOYMENT_FAMILY_ADJ_COUNT , 
	EMPLOYMENT_FAMILY_PERCENT , 
	TRAINING_FAMILY_UNADJ_COUNT , 
	TRAINING_FAMILY_ADJ_COUNT , 
	TRAINING_FAMILY_PERCENT , 
	EMP_AND_TRAIN_FAMILY_UNADJ_COUNT , 
	EMP_AND_TRAIN_FAMILY_ADJ_COUNT , 
	EMP_AND_TRAIN_FAMILY_PERCENT , 
	PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT , 
	PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT , 
	PROTECTIVE_SERVICE_FAMILY_PERCENT , 
	OTHER_FAMILY_UNADJ_COUNT , 
	OTHER_FAMILY_ADJ_COUNT , 
	OTHER_FAMILY_PERCENT , 
	EMPLOYMENT_911_FAMILY_UNADJ_COUNT , 
	EMPLOYMENT_911_FAMILY_ADJ_COUNT , 
	EMPLOYMENT_911_FAMILY_PERCENT , 
	TRAINING_911_FAMILY_UNADJ_COUNT , 
	TRAINING_911_FAMILY_ADJ_COUNT , 
	TRAINING_911_FAMILY_PERCENT , 
	EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT , 
	EMP_AND_TRAIN_911_FAMILY_ADJ_COUNT , 
	EMP_AND_TRAIN_911_FAMILY_PERCENT , 
	PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT , 
	PROTECTIVE_SERVICE_911_FAMILY_ADJ_COUNT , 
	PROTECTIVE_SERVICE_911_FAMILY_PERCENT , 
	OTHER_911_FAMILY_UNADJ_COUNT , 
	OTHER_911_FAMILY_ADJ_COUNT , 
	OTHER_911_FAMILY_PERCENT
)	 
	
 SELECT 
		i_aggn_ref_id
	   ,ENTITY_ID 
	   ,STNAME  
	   
	   ,INVALID_FAMILY_UNADJ_COUNT					INVALID_FAMILY_UNADJ_COUNT
	   ,INVALID_FAMILY_ADJ_COUNT					INVALID_FAMILY_ADJ_COUNT
	   ,INVALID_FAMILY_PERCENT 						INVALID_FAMILY_PERCENT
	   
       ,INVALID_911_FAMILY_UNADJ_COUNT				INVALID_911_FAMILY_UNADJ_COUNT
	   ,INVALID_911_FAMILY_ADJ_COUNT				INVALID_911_FAMILY_ADJ_COUNT
	   ,INVALID_911_FAMILY_PERCENT 					INVALID_911_FAMILY_PERCENT
	   
	   ,EMPLOYMENT_FAMILY_UNADJ_COUNT				EMPLOYMENT_FAMILY_UNADJ_COUNT
	   ,EMPLOYMENT_FAMILY_ADJ_COUNT					EMPLOYMENT_FAMILY_ADJ_COUNT
	   ,EMPLOYMENT_FAMILY_PERCENT 					EMPLOYMENT_FAMILY_PERCENT
       
	   ,TRAINING_FAMILY_UNADJ_COUNT					TRAINING_FAMILY_UNADJ_COUNT
	   ,TRAINING_FAMILY_ADJ_COUNT					TRAINING_FAMILY_ADJ_COUNT
	   ,TRAINING_FAMILY_PERCENT 					TRAINING_FAMILY_PERCENT
       
	   ,EMP_AND_TRAIN_FAMILY_UNADJ_COUNT 			EMP_AND_TRAIN_FAMILY_UNADJ_COUNT
	   ,EMP_AND_TRAIN_FAMILY_ADJ_COUNT 				EMP_AND_TRAIN_FAMILY_ADJ_COUNT
	   ,EMP_AND_TRAIN_FAMILY_PERCENT  				EMP_AND_TRAIN_FAMILY_PERCENT
	   
	   ,PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT 		PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT
	   ,PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT 		PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT
	   ,PROTECTIVE_SERVICE_FAMILY_PERCENT  			PROTECTIVE_SERVICE_FAMILY_PERCENT
       
	   ,NULL AS OTHER_FAMILY_UNADJ_COUNT
	   ,NULL AS OTHER_FAMILY_ADJ_COUNT
	   ,NULL AS OTHER_FAMILY_PERCENT
       
	   ,EMPLOYMENT_911_FAMILY_UNADJ_COUNT			EMPLOYMENT_911_FAMILY_UNADJ_COUNT
	   ,EMPLOYMENT_911_FAMILY_ADJ_COUNT			EMPLOYMENT_911_FAMILY_ADJ_COUNT
	   ,EMPLOYMENT_911_FAMILY_PERCENT 				EMPLOYMENT_911_FAMILY_PERCENT
       
	   ,TRAINING_911_FAMILY_UNADJ_COUNT			TRAINING_911_FAMILY_UNADJ_COUNT
	   ,TRAINING_911_FAMILY_ADJ_COUNT				TRAINING_911_FAMILY_ADJ_COUNT
	   ,TRAINING_911_FAMILY_PERCENT 				TRAINING_911_FAMILY_PERCENT
       
       ,EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT		EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT
	   ,EMP_AND_TRAIN_911_FAMILY_ADJ_COUNT			EMP_AND_TRAIN_911_FAMILY_ADJ_COUNT
	   ,EMP_AND_TRAIN_911_FAMILY_PERCENT  			EMP_AND_TRAIN_911_FAMILY_PERCENT
       
	   ,PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT  PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT
	   ,PROTECTIVE_SERVICE_911_FAMILY_ADJ_COUNT 	PROTECTIVE_SERVICE_911_FAMILY_ADJ_COUNT
	   ,PROTECTIVE_SERVICE_911_FAMILY_PERCENT 		PROTECTIVE_SERVICE_911_FAMILY_PERCENT
       
	   ,NULL AS OTHER_911_FAMILY_UNADJ_COUNT
	   ,NULL AS OTHER_911_FAMILY_ADJ_COUNT
	   ,NULL AS OTHER_911_FAMILY_PERCENT
       
	 
	   FROM CARS_801_TEMP_RUNTOT_NAT
UNION ALL
SELECT
   i_aggn_ref_id
	,0
	,'National'
    
	,NAT_DT.NAT_INVALID_FAMILY_UNADJ_COUNT
	,NAT_DT.NAT_INVALID_FAMILY_ADJ_COUNT
	,CASE WHEN TOTAL_ADJ_CNT>0 THEN ROUND(NAT_INVALID_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100 ,2) ELSE  NULL END  					NAT_INVALID_FAMILY_PERCENT
    
	,NAT_DT.NAT_INVALID_911_FAMILY_UNADJ_COUNT
	,NAT_DT.NAT_INVALID_911_FAMILY_ADJ_COUNT
	,CASE WHEN TOTAL_ADJ_CNT>0 THEN ROUND(NAT_DT.NAT_INVALID_911_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100,2) ELSE  NULL END  			NAT_INVALID_911_PERCENT
	
	,NAT_DT.NAT_EMPLOYMENT_FAMILY_UNADJ_COUNT
	,NAT_DT.NAT_EMPLOYMENT_FAMILY_ADJ_COUNT 
	,CASE WHEN  TOTAL_ADJ_CNT>0 THEN ROUND(NAT_DT.NAT_EMPLOYMENT_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100,2) ELSE  NULL END  			NAT_EMPLOYMENT_FAMILY_PERCENT
    
	,NAT_DT.NAT_TRAINING_FAMILY_UNADJ_COUNT
	,NAT_DT.NAT_TRAINING_FAMILY_ADJ_COUNT
	,CASE WHEN TOTAL_ADJ_CNT>0 THEN ROUND(NAT_DT.NAT_TRAINING_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100,2) ELSE  NULL END 			 	NAT_TRAINING_FAMILY_PERCENT
    
	,NAT_DT.NAT_EMP_AND_TRAIN_FAMILY_UNADJ_COUNT
	,NAT_DT.NAT_EMP_AND_TRAIN_FAMILY_ADJ_COUNT
	,CASE WHEN TOTAL_ADJ_CNT>0 THEN ROUND(NAT_DT.NAT_EMP_AND_TRAIN_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100,2) ELSE  NULL END  		NAT_EMP_AND_TRAIN_FAMILY_PERCENT
    
	,NAT_DT.NAT_PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT
	,NAT_DT.NAT_PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT
	,CASE WHEN TOTAL_ADJ_CNT>0 THEN ROUND(NAT_DT.NAT_PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100,2) ELSE NULL END    	NAT_PROTECTIVE_SERVICE_FAMILY_PERCENT
	
	
	,NULL 
	,NULL
	,NULL
     
	,NAT_EMPLOYMENT_911_FAMILY_UNADJ_COUNT
	,NAT_EMPLOYMENT_911_FAMILY_ADJ_COUNT
	,CASE WHEN TOTAL_ADJ_CNT>0 THEN ROUND(NAT_DT.NAT_EMPLOYMENT_911_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100,2) ELSE  NULL END 	 	NAT_EMPLOYMENT_911_FAMILY_PERCENT
     
	,NAT_TRAINING_911_FAMILY_UNADJ_COUNT
	,NAT_TRAINING_911_FAMILY_ADJ_COUNT
	,CASE WHEN  TOTAL_ADJ_CNT>0 THEN ROUND(NAT_DT.NAT_TRAINING_911_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100,2) ELSE  NULL END 		NAT_TRAINING_911_FAMILY_PERCENT
     
	,NAT_EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT 
	,NAT_EMP_AND_TRAIN_911_FAMILY_ADJ_COUNT
	,CASE WHEN  TOTAL_ADJ_CNT>0 THEN ROUND(NAT_EMP_AND_TRAIN_911_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100,2) ELSE  NULL END 	 		NAT_EMP_AND_TRAIN_911_FAMILY_PERCENT
	
	,NAT_PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT
	,NAT_PROTECTIVE_SERVICE_911_FAMILY_ADJ_COUNT
	,CASE WHEN  TOTAL_ADJ_CNT>0 THEN ROUND(NAT_PROTECTIVE_SERVICE_911_FAMILY_ADJ_COUNT/TOTAL_ADJ_CNT*100,2) ELSE  NULL END  	NAT_PROTECTIVE_SERVICE_911_FAMILY_PERCENT

	,NULL 
	,NULL
	,NULL
	FROM 
	(
		SELECT
			
			 SUM(IFNULL(EMPLOYMENT_FAMILY_UNADJ_COUNT,0)) 				NAT_EMPLOYMENT_FAMILY_UNADJ_COUNT
			,SUM(IFNULL(EMPLOYMENT_FAMILY_ADJ_COUNT,0)) 				NAT_EMPLOYMENT_FAMILY_ADJ_COUNT
			 
			,SUM(IFNULL(TRAINING_FAMILY_UNADJ_COUNT,0))					NAT_TRAINING_FAMILY_UNADJ_COUNT
			,SUM(IFNULL(TRAINING_FAMILY_ADJ_COUNT,0))  					NAT_TRAINING_FAMILY_ADJ_COUNT
			
			,SUM(IFNULL(EMP_AND_TRAIN_FAMILY_UNADJ_COUNT,0)) 			NAT_EMP_AND_TRAIN_FAMILY_UNADJ_COUNT
			,SUM(IFNULL(EMP_AND_TRAIN_FAMILY_ADJ_COUNT,0))  			NAT_EMP_AND_TRAIN_FAMILY_ADJ_COUNT
			
			,SUM(IFNULL(INVALID_911_FAMILY_UNADJ_COUNT,0)) 				NAT_INVALID_911_FAMILY_UNADJ_COUNT
			,SUM(IFNULL(INVALID_911_FAMILY_ADJ_COUNT,0)) 				NAT_INVALID_911_FAMILY_ADJ_COUNT
			
			,SUM(IFNULL(PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT,0)) 		NAT_PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT
			,SUM(IFNULL(PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT,0)) 		NAT_PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT
			
			,SUM(IFNULL(INVALID_FAMILY_UNADJ_COUNT,0)) 					NAT_INVALID_FAMILY_UNADJ_COUNT
            ,SUM(IFNULL(INVALID_FAMILY_ADJ_COUNT,0))  					NAT_INVALID_FAMILY_ADJ_COUNT
			
		    ,SUM(IFNULL(EMPLOYMENT_911_FAMILY_UNADJ_COUNT,0)) 			NAT_EMPLOYMENT_911_FAMILY_UNADJ_COUNT
			,SUM(IFNULL(EMPLOYMENT_911_FAMILY_ADJ_COUNT,0)) 			NAT_EMPLOYMENT_911_FAMILY_ADJ_COUNT
			
			,SUM(IFNULL(TRAINING_911_FAMILY_UNADJ_COUNT,0))				NAT_TRAINING_911_FAMILY_UNADJ_COUNT
			,SUM(IFNULL(TRAINING_911_FAMILY_ADJ_COUNT,0)) 				NAT_TRAINING_911_FAMILY_ADJ_COUNT
			
			,SUM(IFNULL(EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT,0))		NAT_EMP_AND_TRAIN_911_FAMILY_UNADJ_COUNT
			,SUM(IFNULL(EMP_AND_TRAIN_911_FAMILY_ADJ_COUNT,0))			NAT_EMP_AND_TRAIN_911_FAMILY_ADJ_COUNT
			
			,SUM(IFNULL(PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT,0)) 	NAT_PROTECTIVE_SERVICE_911_FAMILY_UNADJ_COUNT
			,SUM(IFNULL(PROTECTIVE_SERVICE_911_FAMILY_ADJ_COUNT,0))		NAT_PROTECTIVE_SERVICE_911_FAMILY_ADJ_COUNT
			
            ,(SUM(IFNULL(EMPLOYMENT_FAMILY_ADJ_COUNT,0)) +
        	  SUM(IFNULL(TRAINING_FAMILY_ADJ_COUNT,0))+
        	  SUM(IFNULL(EMP_AND_TRAIN_FAMILY_ADJ_COUNT,0))+
        	  SUM(IFNULL(PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT,0))+
        	  SUM(IFNULL(INVALID_FAMILY_ADJ_COUNT,0)) +
        	  SUM(IFNULL(EMPLOYMENT_911_FAMILY_ADJ_COUNT,0))+
        	  SUM(IFNULL(TRAINING_911_FAMILY_ADJ_COUNT,0))+
        	  SUM(IFNULL(EMP_AND_TRAIN_911_FAMILY_ADJ_COUNT,0))+
        	  SUM(IFNULL(PROTECTIVE_SERVICE_911_FAMILY_ADJ_COUNT,0))+
        	  SUM(IFNULL(INVALID_911_FAMILY_ADJ_COUNT,0))) TOTAL_ADJ_CNT
        
			
		FROM CARS_801_TEMP_RUNTOT_NAT 
			
	) NAT_DT		
	
	
			
	UNION ALL
	SELECT 
    i_aggn_ref_id
    ,E.ENTITY_ID		   
    ,E.ENTITY_NAME
    
	,NULL
	,NULL
	,NULL
	
    ,NULL
	,NULL
	,NULL
	
	,NULL
	,NULL
	,NULL
    
	,NULL
	,NULL
	,NULL
    
	,NULL
	,NULL
	,NULL
    
	,NULL
	,NULL
	,NULL
    
    ,NULL
	,NULL
	,NULL
    
	,NULL
	,NULL
	,NULL
    
	,NULL
	,NULL
	,NULL
	
	,NULL
	,NULL
	,NULL
	
	,NULL
	,NULL
	,NULL
	
    ,NULL
	,NULL
	,NULL
     FROM CARS_ENTITY E
          LEFT OUTER JOIN CARS_801_TEMP_RUNTOT_NAT C
     ON E.ENTITY_ID = C.ENTITY_ID
     WHERE E.ENTITY_TYPE_CD = 'STATE-TER'
     AND C.ENTITY_ID IS NULL ;
	 
	SET v_total_rows_inserted = ROW_COUNT();

DROP TEMPORARY TABLE IF EXISTS TMP_REASON_CD_M;
DROP TEMPORARY TABLE IF EXISTS TMP_REASON_RATIO;
DROP TEMPORARY TABLE IF EXISTS CARS_801_TEMP_REASON_CARE;
DROP TEMPORARY TABLE IF EXISTS CARS_801_TEMP_RUNTOT_NAT;

UPDATE CARS_801_SP_LOG
SET SP_STATUS_TEXT= CONCAT('Success. Rows inserted: ',v_total_rows_inserted, ' Rows Deleted :', v_total_rows_deleted), END_TS=NOW()
 
WHERE  SP_LOG_ID=( SELECT MAX(SP_LOG_ID) FROM CARS_801_SP_LOG WHERE SP_NAME ='CARS_801_AGGN_SP_REASON_FOR_CARE');
COMMIT;		
	
END$$
DELIMITER ;