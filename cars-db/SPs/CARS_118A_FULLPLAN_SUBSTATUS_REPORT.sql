DELIMITER $$
CREATE OR REPLACE PROCEDURE `CARS_118A_FULLPLAN_SUBSTATUS_REPORT`(IN i_amend_where_cond TEXT)
proc_label: BEGIN

DECLARE v_iter INTEGER DEFAULT 0;
DECLARE v_createtable TEXT DEFAULT '';
DECLARE v_droptable TEXT DEFAULT '';
DECLARE v_whilecnt INTEGER DEFAULT 1;
DECLARE v_collist TEXT DEFAULT '';
DECLARE v_collist1 TEXT DEFAULT '';
DECLARE v_infinite INTEGER DEFAULT 0;
DECLARE v_comma CHAR(1) DEFAULT ',';
DECLARE v_sql TEXT DEFAULT '';
DECLARE v_union TEXT DEFAULT ' ';
DECLARE v_sqlhdr TEXT DEFAULT '';
DECLARE v_sqlans TEXT DEFAULT '';
DECLARE v_rand CHAR(7) DEFAULT '';
DECLARE v_dropsql TEXT DEFAULT '';
DECLARE v_crsql TEXT DEFAULT '';




	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
		SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
		
		UPDATE CARS_SP_LOG
			SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
		WHERE SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_SP_LOG WHERE SP_NAME='CARS_118A_FULLPLAN_SUBSTATUS_REPORT');

			
		
	END;
	
	
	INSERT INTO CARS_SP_LOG (SP_NAME, SP_STATUS_TEXT, START_TS)
		VALUES('CARS_118A_FULLPLAN_SUBSTATUS_REPORT', 'Started', NOW());	

SELECT SUBSTR(CAST(RAND() * 100000000 AS VARCHAR(50)), 1, 7) INTO v_rand FROM DUAL;

/*
SET v_dropsql = '';
SET v_dropsql = CONCAT('DROP TEMPORARY TABLE IF EXISTS CARS_TEMP_SUBSECT_LIST', v_rand);
EXECUTE IMMEDIATE (v_dropsql);
*/


DROP TEMPORARY TABLE IF EXISTS CARS_TEMP_SUBSECT_LIST;


SET v_sql = '';
SET v_sql = CONCAT('CREATE TEMPORARY TABLE CARS_TEMP_SUBSECT_LIST   
AS 
SELECT
RANK() OVER(ORDER BY SS.SUBSECT_ID) AS LIST_ORDER, SS.SUBSECT_ID, SS.SUBSECT_NAV_TEXT
FROM CARS_118A_SECT S
JOIN CARS_118A_SUBSECT SS
ON S.SECT_ID = SS.SECT_ID
WHERE S.SECT_ID BETWEEN 2 AND 8
'
)
;


EXECUTE IMMEDIATE(v_sql);


SELECT COUNT(DISTINCT LIST_ORDER) INTO v_iter FROM CARS_TEMP_SUBSECT_LIST;


SET v_dropsql = '';
SET v_dropsql = CONCAT('DROP TEMPORARY TABLE IF EXISTS CARS_TEMP_SUBSECT_STATUS_COLS', v_rand);
EXECUTE IMMEDIATE (v_dropsql);



SET v_whilecnt = 1;
SET v_createtable = CONCAT('CREATE TEMPORARY TABLE CARS_TEMP_SUBSECT_STATUS_COLS', v_rand, '  
( ENTITY_NAME TEXT NULL, TRIBAL_CODE TEXT NULL, STATE_CD TEXT NULL, REGION_NAME TEXT NULL, REGION_ID INT NULL, ALLOCATION_SIZE TEXT NULL,AMENDMENT_NUMBER TEXT NULL, ');

a_while:
	WHILE v_whilecnt <= v_iter DO
		SET v_infinite = v_infinite + 1;
		
		IF v_iter = 0 THEN 
			SET v_collist = '';
			LEAVE a_while;
		END IF;
		
		IF v_whilecnt = 1 THEN 
			SET v_collist = v_createtable;
		END IF;
		
		IF v_whilecnt = v_iter THEN
			SET v_comma = '';
		END IF;
		
		SET v_collist = CONCAT(v_collist, 'COL', v_whilecnt, ' TEXT NULL', v_comma);
		
		SET v_whilecnt = v_whilecnt + 1;
		
		IF v_infinite = 60 THEN
			LEAVE a_while;
		END IF;
		
	END WHILE a_while;

SET v_collist = CONCAT(v_collist, ');');



EXECUTE IMMEDIATE(v_collist);


SET v_dropsql = '';
SET v_dropsql = CONCAT('DROP TEMPORARY TABLE IF EXISTS CARS_TEMP_SUBSECT_STATUS', v_rand);
EXECUTE IMMEDIATE (v_dropsql);


SET v_crsql = '';
SET v_crsql = CONCAT('CREATE TEMPORARY TABLE CARS_TEMP_SUBSECT_STATUS', v_rand, ' AS SELECT * FROM CARS_TEMP_SUBSECT_STATUS_COLS', v_rand);

EXECUTE IMMEDIATE (v_crsql);

SET v_dropsql = '';
SET v_dropsql = CONCAT('DROP TEMPORARY TABLE IF EXISTS CARS_TEMP_SUBSECT_HEADER_COLS', v_rand);
EXECUTE IMMEDIATE (v_dropsql);


SET v_whilecnt = 1;
SET v_comma = ',';
SET v_collist = '';
SET v_infinite = 0;
SET v_createtable = CONCAT('CREATE TEMPORARY TABLE CARS_TEMP_SUBSECT_HEADER_COLS', v_rand, '  
( ENTITY_NAME TEXT NULL, TRIBAL_CODE TEXT NULL, STATE_CD TEXT NULL, REGION_NAME TEXT NULL, REGION_ID TEXT NULL, ALLOCATION_SIZE TEXT NULL,AMENDMENT_NUMBER TEXT NULL, ');


a1_while:
	WHILE v_whilecnt <= v_iter DO
		SET v_infinite = v_infinite + 1;
		
		IF v_iter = 0 THEN 
			SET v_collist = '';
			LEAVE a1_while;
		END IF;
		
		IF v_whilecnt = 1 THEN 
			SET v_collist = v_createtable;
		END IF;
		
		IF v_whilecnt = v_iter THEN
			SET v_comma = '';
		END IF;
		
		SET v_collist = CONCAT(v_collist, 'HEADER', v_whilecnt, ' TEXT NULL', v_comma);
		
		SET v_whilecnt = v_whilecnt + 1;
		
		IF v_infinite = 50 THEN
			LEAVE a1_while;
		END IF;
		
	END WHILE a1_while;

SET v_collist = CONCAT(v_collist, ');');


EXECUTE IMMEDIATE(v_collist);

SET v_dropsql = '';
SET v_dropsql = CONCAT('DROP TEMPORARY TABLE IF EXISTS CARS_TEMP_SUBSECT_HEADERS', v_rand);
EXECUTE IMMEDIATE (v_dropsql);


SET v_crsql = '';
SET v_crsql = CONCAT('CREATE TEMPORARY TABLE CARS_TEMP_SUBSECT_HEADERS', v_rand, ' AS SELECT * FROM CARS_TEMP_SUBSECT_HEADER_COLS', v_rand);

EXECUTE IMMEDIATE (v_crsql);


SET v_dropsql = '';
SET v_dropsql = CONCAT('DROP TEMPORARY TABLE IF EXISTS CARS_TEMP_SUBSECT_AMEND_LIST', v_rand);
EXECUTE IMMEDIATE (v_dropsql);


SET v_sql = '';
SET v_sql = CONCAT('
CREATE TEMPORARY TABLE CARS_TEMP_SUBSECT_AMEND_LIST', v_rand, ' 
AS 
SELECT
DISTINCT H.ENTITY_NAME, A.HDR_AMEND_ID, H.ENTITY_STATE_CD AS STATE_CD, E.OGM_TRIBAL_CD AS TRIBAL_CODE, T.ALLOCATION_SIZE, R.ENTITY_NAME AS REGION_NAME, E.REGION_ID AS REGION_ID,
CASE WHEN A.AMEND_SEQ_NUM>1 THEN CONCAT(''Amendment #'',A.AMEND_SEQ_NUM-1) ELSE ''Initial Submission'' END AS ''AMENDMENT_NUMBER''
FROM CARS_MODULE_PERIOD_HDR H
JOIN CARS_118A_HDR_AMEND A
ON H.MODULE_HDR_ID = A.MODULE_HDR_ID
LEFT OUTER JOIN CARS_TRIBE_INFO T
ON H.PERIOD_ID = T.PERIOD_ID
AND H.ENTITY_ID = T.TRIBE_ID
JOIN CARS_ENTITY E
ON H.ENTITY_ID = E.ENTITY_ID
JOIN CARS_ENTITY R
ON E.REGION_ID = R.ENTITY_ID
AND R.ENTITY_TYPE_CD = ''REGION''
WHERE A.HDR_AMEND_ID IN (', i_amend_where_cond, ')')
;

EXECUTE IMMEDIATE(v_sql);

SET v_dropsql = '';
SET v_dropsql = CONCAT('DROP TEMPORARY TABLE IF EXISTS CARS_TEMP_SUBSECT_PERCENT', v_rand);
EXECUTE IMMEDIATE (v_dropsql);

SET v_sql = '';
SET v_sql = CONCAT('
CREATE TEMPORARY TABLE CARS_TEMP_SUBSECT_PERCENT', v_rand, ' 
AS 

SELECT
H.ENTITY_ID, H.ENTITY_NAME,
A.HDR_AMEND_ID,
S.SUBSECT_ID,
ROUND((SUM(CASE WHEN N.ANS_STATUS_TEXT IN (''COMPLETE'') THEN 1 ELSE 0 END) / SUM(CASE WHEN N.ANS_STATUS_TEXT IN (''VALIDATION ERROR'', ''IN PROGRESS'', ''NOT STARTED'', ''COMPLETE'') THEN 1 ELSE 0 END) ) * 100, 2) AS SUBSECT_PCT
FROM CARS_MODULE_PERIOD_HDR H
JOIN CARS_118A_HDR_AMEND A
ON H.MODULE_HDR_ID = A.MODULE_HDR_ID
JOIN CARS_118A_HDR_ANS N
ON A.HDR_AMEND_ID = N.HDR_AMEND_ID
JOIN CARS_118A_SUBQUES_RESP R
ON N.SUBQUES_RESP_ID = R.SUBQUES_RESP_ID
JOIN CARS_118A_SUBQUES SQ
ON R.SUBQUES_ID = SQ.SUBQUES_ID
JOIN CARS_118A_QUES Q
ON SQ.QUES_ID = Q.QUES_ID
JOIN CARS_118A_SUBSECT S
ON Q.SUBSECT_ID = S.SUBSECT_ID
WHERE A.HDR_AMEND_ID IN (', i_amend_where_cond, ')
GROUP BY 1,2,3,4')
;

EXECUTE IMMEDIATE(v_sql);

SET v_dropsql = '';
SET v_dropsql = CONCAT('DROP TEMPORARY TABLE IF EXISTS CARS_TEMP_ALL_STATUSES', v_rand);
EXECUTE IMMEDIATE (v_dropsql);

SET v_sql = '';
SET v_sql = CONCAT('
CREATE TEMPORARY TABLE CARS_TEMP_ALL_STATUSES', v_rand, ' 
AS 
SELECT
			HDR_AMEND_ID,
			SUBSECT_ID,
			CASE WHEN MIN_QUES_STATUS = ''AAA'' THEN ''IN PROGRESS'' ##1
				 WHEN MIN_QUES_STATUS = ''NOT STARTED'' AND MAX_QUES_STATUS = ''NOT STARTED'' THEN ''NOT STARTED'' ##2
				 WHEN MIN_QUES_STATUS = ''NOT REQUIRED'' AND MAX_QUES_STATUS = ''NOT STARTED'' THEN ''NOT STARTED'' ##3
				 WHEN MIN_QUES_STATUS <> ''AAA'' AND NOT_STARTED_COUNT > 0 THEN ''IN PROGRESS'' ##4
				 WHEN MIN_QUES_STATUS = ''COMPLETE'' AND MAX_QUES_STATUS = ''COMPLETE'' THEN ''COMPLETE'' ##5
				 WHEN MIN_QUES_STATUS = ''COMPLETE'' AND MAX_QUES_STATUS = ''NOT REQUIRED'' THEN ''COMPLETE'' ##6
				 WHEN MIN_QUES_STATUS = ''NOT REQUIRED'' AND MAX_QUES_STATUS = ''NOT REQUIRED'' THEN ''NOT REQUIRED'' ##7
				 WHEN MAX_QUES_STATUS = ''VALIDATION ERROR'' THEN ''VALIDATION ERROR'' ##8, #9 and #10
			ELSE NULL END AS SUBSECT_STATUS
				FROM 
				(
					SELECT
					S.HDR_AMEND_ID,
					S.SUBSECT_ID,
					SUM(SUBQUES_COMPLETE_COUNT) AS SUBQUES_COMPLETE_COUNT,
					SUM(SUBQUES_TOTAL_COUNT) AS SUBQUES_TOTAL_COUNT,
					MIN(CASE WHEN S.QUES_STATUS = ''IN PROGRESS'' THEN ''AAA'' ELSE S.QUES_STATUS END) AS MIN_QUES_STATUS,
					MAX(CASE WHEN S.QUES_STATUS = ''IN PROGRESS'' THEN ''AAA'' ELSE S.QUES_STATUS END) AS MAX_QUES_STATUS,
					SUM(CASE WHEN S.QUES_STATUS = ''NOT STARTED'' THEN 1 ELSE 0 END) AS NOT_STARTED_COUNT
					FROM VW_CARS_118A_HDR_QUES_STATUS S
					WHERE SECT_ID BETWEEN 2 AND 8
					GROUP BY 1, 2
				) B
'
);
		
EXECUTE IMMEDIATE(v_sql);


SET v_sql = '';
SET v_sql = CONCAT('CREATE INDEX IX1 ON CARS_TEMP_ALL_STATUSES', v_rand, ' (HDR_AMEND_ID)');
EXECUTE IMMEDIATE(v_sql);


SET v_infinite = 0;
SET v_whilecnt = 1;
SET v_sql = '';

b_while:
	WHILE v_whilecnt <= v_iter DO
		SET v_infinite = v_infinite + 1;
	

		SET v_sql = CONCAT(
		'INSERT INTO CARS_TEMP_SUBSECT_STATUS_COLS', v_rand, ' ( ENTITY_NAME, TRIBAL_CODE, STATE_CD, REGION_NAME, REGION_ID, ALLOCATION_SIZE,AMENDMENT_NUMBER, COL', v_whilecnt, 
		') 
		SELECT
		M.ENTITY_NAME, TRIBAL_CODE, STATE_CD, REGION_NAME, REGION_ID, ALLOCATION_SIZE, 
		M.AMENDMENT_NUMBER,
		CASE WHEN S.SUBSECT_STATUS = ''IN PROGRESS'' THEN P.SUBSECT_PCT ELSE S.SUBSECT_STATUS END
		FROM CARS_TEMP_SUBSECT_AMEND_LIST', v_rand, ' M
		LEFT OUTER JOIN CARS_TEMP_ALL_STATUSES', v_rand, '  S
		ON M.HDR_AMEND_ID = S.HDR_AMEND_ID
		JOIN CARS_TEMP_SUBSECT_LIST C
		ON S.SUBSECT_ID = C.SUBSECT_ID
		JOIN CARS_TEMP_SUBSECT_PERCENT', v_rand, '  P
		ON M.HDR_AMEND_ID = P.HDR_AMEND_ID
		AND C.SUBSECT_ID = P.SUBSECT_ID
		WHERE C.LIST_ORDER = ', v_whilecnt, 
		' GROUP BY ENTITY_NAME, TRIBAL_CODE, STATE_CD, REGION_NAME, REGION_ID, ALLOCATION_SIZE, AMENDMENT_NUMBER'
		)
		;
		
		EXECUTE IMMEDIATE (v_sql);
		
		SET v_whilecnt = v_whilecnt + 1;
		
		IF v_infinite = 60 THEN
			LEAVE b_while;
		END IF;

	END WHILE b_while;
	
	
SET v_sql = CONCAT(
		'INSERT INTO CARS_TEMP_SUBSECT_STATUS_COLS', v_rand, ' (ENTITY_NAME, TRIBAL_CODE, STATE_CD, REGION_NAME, REGION_ID, ALLOCATION_SIZE)
		SELECT M.ENTITY_NAME, M.TRIBAL_CODE, M.STATE_CD, M.REGION_NAME, M.REGION_ID, M.ALLOCATION_SIZE
		FROM CARS_TEMP_SUBSECT_AMEND_LIST', v_rand, ' M
		LEFT OUTER JOIN CARS_TEMP_SUBSECT_STATUS_COLS', v_rand, ' A
		ON M.ENTITY_NAME = A.ENTITY_NAME
		WHERE A.ENTITY_NAME IS NULL'
		);
		
	EXECUTE IMMEDIATE (v_sql);


SET v_infinite = 0;
SET v_whilecnt = 1;
SET v_sql = '';

b1_while:
	WHILE v_whilecnt <= v_iter DO
		SET v_infinite = v_infinite + 1;
	

		SET v_sql = CONCAT(
		'INSERT INTO CARS_TEMP_SUBSECT_HEADER_COLS', v_rand, ' ( ENTITY_NAME, TRIBAL_CODE, STATE_CD, REGION_NAME, REGION_ID, ALLOCATION_SIZE,AMENDMENT_NUMBER, HEADER', v_whilecnt, 
		') 
		SELECT
		''HEADER ROW'', NULL, NULL, NULL, NULL, NULL, NULL,  
		SUBSECT_NAV_tEXT
		FROM CARS_TEMP_SUBSECT_LIST   
		WHERE LIST_ORDER = ', v_whilecnt
		)
		;
		
		EXECUTE IMMEDIATE (v_sql);
		
		SET v_whilecnt = v_whilecnt + 1;
		
		IF v_infinite = 50 THEN
			LEAVE b1_while;
		END IF;

	END WHILE b1_while;



SET v_infinite = 0;
SET v_whilecnt = 1;
SET v_comma = ',';


SET v_sqlhdr = CONCAT('INSERT INTO CARS_TEMP_SUBSECT_HEADERS', v_rand, ' SELECT ''Lead Agency'', ''Tribal Code'', ''State'', ''Region'', ''REGION_ID'', ''Allocation'',''Plan Version'', ');
SET v_sqlans = CONCAT('INSERT INTO CARS_TEMP_SUBSECT_STATUS', v_rand,' SELECT ENTITY_NAME, TRIBAL_CODE, STATE_CD, REGION_NAME, REGION_ID, ALLOCATION_SIZE,AMENDMENT_NUMBER, ');


c1_while:
	WHILE v_whilecnt <= v_iter DO
		SET v_infinite = v_infinite + 1;
	
		IF v_whilecnt = v_iter THEN
			SET v_comma = '';
		END IF;
	
		SET v_sqlhdr = CONCAT(v_sqlhdr, ' MAX(HEADER', v_whilecnt, ')', v_comma);
		SET v_sqlans = CONCAT(v_sqlans, ' MAX(COL', v_whilecnt, ')', v_comma);
		
		SET v_whilecnt = v_whilecnt + 1;

		IF v_infinite = 50 THEN
			LEAVE c1_while;
		END IF;
	
	END WHILE c1_while;

SET v_sqlhdr = CONCAT(v_sqlhdr, ' FROM CARS_TEMP_SUBSECT_HEADER_COLS', v_rand, ' GROUP BY ENTITY_NAME, TRIBAL_CODE, STATE_CD, REGION_NAME, REGION_ID, ALLOCATION_SIZE,AMENDMENT_NUMBER');
SET v_sqlans = CONCAT(v_sqlans, ' FROM CARS_TEMP_SUBSECT_STATUS_COLS', v_rand, ' GROUP BY ENTITY_NAME, TRIBAL_CODE, STATE_CD, REGION_NAME, REGION_ID, ALLOCATION_SIZE,AMENDMENT_NUMBER');


EXECUTE IMMEDIATE(v_sqlhdr);

EXECUTE IMMEDIATE(v_sqlans);


SET v_sql = '';
SET v_sql = CONCAT('SELECT * FROM CARS_TEMP_SUBSECT_HEADERS', v_rand);

EXECUTE IMMEDIATE(v_sql);

SET v_sql = '';
SET v_sql = CONCAT('SELECT * FROM CARS_TEMP_SUBSECT_STATUS', v_rand);

EXECUTE IMMEDIATE(v_sql);


UPDATE CARS_SP_LOG
SET SP_STATUS_TEXT= 'Success', END_TS=NOW()
WHERE  SP_LOG_ID=( SELECT MAX(SP_LOG_ID) FROM CARS_SP_LOG WHERE SP_NAME = 'CARS_118A_FULLPLAN_SUBSTATUS_REPORT');
		
	
END$$
DELIMITER ;