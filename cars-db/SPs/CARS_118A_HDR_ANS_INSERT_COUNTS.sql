DELIMITER $$
CREATE OR REPLACE PROCEDURE `CARS_118A_HDR_ANS_INSERT_COUNTS`(
	IN  p_HDR_AMEND_ID INT
	   ,p_PROGRAM_477_FLAG INT
)
p_loop: 
BEGIN

	DECLARE v_total_rows_deleted INTEGER DEFAULT 0 ;
	DECLARE v_total_rows_inserted INTEGER DEFAULT 0 ;
	
	-- process error handle
	DECLARE exit handler for SQLEXCEPTION
	BEGIN
		 GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
		 
		 SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
		  
		 UPDATE CARS_SP_LOG
			SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
		  WHERE SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_SP_LOG WHERE SP_NAME='CARS_118A_HDR_ANS_INSERT_COUNTS');
		 COMMIT; 
	END;
	
	-- insert log record
	INSERT INTO CARS_SP_LOG (`SP_NAME`, `START_TS`, `END_TS`)
		VALUES( 'CARS_118A_HDR_ANS_PROC_FOR_ONE', NOW(), NOW());	
		

-- SP Script Start

IF p_PROGRAM_477_FLAG=1 THEN

## Insert the records into CARS_118A_HDR_ANS table for 102-477 tribes
INSERT INTO CARS_118A_HDR_ANS
(
 HDR_AMEND_ID, 
 SUBQUES_RESP_ID, 
 ANS_STATUS_TEXT
)

SELECT
		A.HDR_AMEND_ID,
		S.SUBQUES_RESP_ID,
		 NULL AS ANS_STATUS_TEXT
		
	FROM
		CARS_MODULE_PERIOD_HDR H
		JOIN CARS_118A_HDR_AMEND A 
		ON H.MODULE_HDR_ID = A.MODULE_HDR_ID
		JOIN CARS_TRIBE_INFO I
		ON H.ENTITY_ID = I.TRIBE_ID
		AND H.PERIOD_ID = I.PERIOD_ID
		JOIN 
		(
			SELECT 
			S5.SUBQUES_RESP_ID, S5.SMALL_ANS_STATUS_TEXT, S5.LGMED_ANS_STATUS_TEXT
			FROM CARS_118A_SECT S1
			JOIN CARS_118A_SUBSECT S2
			ON S1.SECT_ID = S2.SECT_ID
			JOIN CARS_118A_QUES S3
			ON S2.SUBSECT_ID = S3.SUBSECT_ID
			JOIN CARS_118A_SUBQUES S4
			ON S3.QUES_ID = S4.QUES_ID
			JOIN CARS_118A_SUBQUES_RESP S5
			ON S4.SUBQUES_ID = S5.SUBQUES_ID
			AND S5.RESP_TYPE_CD <> 'INFO'
			WHERE S1.SECT_ID IN (10,11)
		) S
		ON 1=1
		
	WHERE A.HDR_AMEND_ID = p_HDR_AMEND_ID
	AND I.PROGRAM_477_FLAG = 1
	;
END IF;


## Insert the records into CARS_118A_HDR_ANS table for NON 102-477 tribes
IF p_PROGRAM_477_FLAG=0 THEN

INSERT INTO CARS_118A_HDR_ANS
(
 HDR_AMEND_ID, 
 SUBQUES_RESP_ID, 
 ANS_STATUS_TEXT
)

SELECT
		A.HDR_AMEND_ID,
		S.SUBQUES_RESP_ID,
		NULL  AS  ANS_STATUS_TEXT
	FROM
		CARS_MODULE_PERIOD_HDR H
		JOIN CARS_118A_HDR_AMEND A 
		ON H.MODULE_HDR_ID = A.MODULE_HDR_ID
		JOIN CARS_TRIBE_INFO I
		ON H.ENTITY_ID = I.TRIBE_ID
		AND H.PERIOD_ID = I.PERIOD_ID
		JOIN 
		(
			SELECT 
			S5.SUBQUES_RESP_ID, S5.SMALL_ANS_STATUS_TEXT, S5.LGMED_ANS_STATUS_TEXT
			FROM CARS_118A_SECT S1
			JOIN CARS_118A_SUBSECT S2
			ON S1.SECT_ID = S2.SECT_ID
			JOIN CARS_118A_QUES S3
			ON S2.SUBSECT_ID = S3.SUBSECT_ID
			JOIN CARS_118A_SUBQUES S4
			ON S3.QUES_ID = S4.QUES_ID
			JOIN CARS_118A_SUBQUES_RESP S5
			ON S4.SUBQUES_ID = S5.SUBQUES_ID
			AND S5.RESP_TYPE_CD <> 'INFO'
			WHERE S1.SECT_ID IN (9,11)
		) S
		ON 1=1
				
	WHERE A.HDR_AMEND_ID = p_HDR_AMEND_ID 
	AND I.PROGRAM_477_FLAG <> 1
	;

END IF;

	UPDATE CARS_118A_HDR_ANS  A SET A.ANS_TEXT = 'No', A.ANS_STATUS_TEXT = 'COMPLETE' 
	WHERE A.HDR_AMEND_ID = p_HDR_AMEND_ID AND A.SUBQUES_RESP_ID=1825;
	
-- SP Script End
		
    -- get count for award tables	
	SET v_total_rows_inserted = ROW_COUNT() ;	
	
	 /*Log success of the SP*/
	UPDATE CARS_SP_LOG
		SET SP_STATUS_TEXT= CONCAT('Success. Rows inserted: ',v_total_rows_inserted,'; Rows deleted before process: ', v_total_rows_deleted), END_TS=NOW()
	WHERE  SP_LOG_ID=( SELECT MAX(SP_LOG_ID) FROM CARS_SP_LOG WHERE SP_NAME='CARS_118A_HDR_ANS_PROC_FOR_ONE');
	COMMIT;
END$$
DELIMITER ;