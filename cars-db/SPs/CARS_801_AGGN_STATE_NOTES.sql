DELIMITER //

CREATE OR REPLACE PROCEDURE CARS_801_AGGN_STATE_NOTES(p_AGGN_REF_ID INT)

BEGIN

   DECLARE v_ENTITY_COUNT INT;
   DECLARE v_TEXTOUT1 TEXT;
   DECLARE v_TEXTOUT2 TEXT;
   DECLARE v_ENTITY_LIST TEXT;
   DECLARE v_FISCAL_YEAR TEXT;

SET v_FISCAL_YEAR=(SELECT FISCAL_YEAR FROM CARS_801_AGGN_REF   WHERE AGGN_REF_ID=p_AGGN_REF_ID);

DROP TEMPORARY TABLE IF EXISTS CARS_801_AGGN_STATE_1;
CREATE TEMPORARY TABLE  CARS_801_AGGN_STATE_1 AS
		(SELECT 
        E.ENTITY_NAME 
        FROM CARS_ENTITY E
        LEFT OUTER JOIN 
        (
        SELECT DISTINCT H.ENTITY_ID
        FROM CARS_MODULE_PERIOD_HDR H
        JOIN CARS_PERIOD P
        ON H.PERIOD_ID = P.PERIOD_ID
        JOIN CARS_801_AGGN_REF R
        ON CAST(SUBSTR(P.PERIOD_DESC, 5, 4) AS INTEGER) = R.FISCAL_YEAR
        AND R.AGGN_REF_ID = p_AGGN_REF_ID
        JOIN CARS_801_REC_COUNTS C
        ON H.MODULE_HDR_ID = C.MODULE_HDR_ID 
        ) H
        ON E.ENTITY_ID = H.ENTITY_ID
        WHERE E.ENTITY_TYPE_CD = 'STATE-TER'
        AND H.ENTITY_ID IS NULL 
        ORDER BY E.ENTITY_NAME
        );

   
SET v_ENTITY_LIST= 
        (SELECT 
        GROUP_CONCAT(ENTITY_NAME ORDER BY ENTITY_NAME  SEPARATOR ', ')
        FROM CARS_801_AGGN_STATE_1); 
		
SET v_TEXTOUT1 =    
     (  SELECT CASE WHEN LOCATE(',',(REVERSE(v_ENTITY_LIST)))>1 THEN
		REVERSE(INSERT(REVERSE(v_ENTITY_LIST),LOCATE(',',(REVERSE(v_ENTITY_LIST))),1,' dna ')) 
		ELSE v_ENTITY_LIST END);

DROP TEMPORARY TABLE IF EXISTS CARS_801_AGGN_STATE_2;
CREATE TEMPORARY TABLE  CARS_801_AGGN_STATE_2 AS
        (SELECT ENTITY_NAME,MONTHS_SUBMITTED
         FROM
		(SELECT H.ENTITY_NAME, count(*) AS MONTHS_SUBMITTED
		FROM CARS_MODULE_PERIOD_HDR H
		JOIN CARS_PERIOD P
		ON H.PERIOD_ID = P.PERIOD_ID
		JOIN CARS_801_AGGN_REF R
		ON CAST(SUBSTR(P.PERIOD_DESC, 5, 4) AS INTEGER) = R.FISCAL_YEAR
		AND R.AGGN_REF_ID = p_AGGN_REF_ID
		JOIN CARS_801_REC_COUNTS C
		ON H.MODULE_HDR_ID = C.MODULE_HDR_ID 
		GROUP BY H.ENTITY_NAME
		) A
		WHERE MONTHS_SUBMITTED < 12
		);


SET v_TEXTOUT2=
(SELECT GROUP_CONCAT(
CONCAT(ENTITY_NAME, 
' submitted ',
(CASE WHEN MONTHS_SUBMITTED=1 THEN 'one'
     WHEN MONTHS_SUBMITTED=2 THEN 'two'
     WHEN MONTHS_SUBMITTED=3 THEN 'three'
     WHEN MONTHS_SUBMITTED=4 THEN 'four'
     WHEN MONTHS_SUBMITTED=5 THEN 'five'
     WHEN MONTHS_SUBMITTED=6 THEN 'six'
     WHEN MONTHS_SUBMITTED=7 THEN 'seven'
     WHEN MONTHS_SUBMITTED=8 THEN 'eight'
     WHEN MONTHS_SUBMITTED=9 THEN 'nine'
     WHEN MONTHS_SUBMITTED=10 THEN 'ten'
     WHEN MONTHS_SUBMITTED=11 THEN 'eleven'
     WHEN MONTHS_SUBMITTED=12 THEN 'twelve' END),
  ' (',
  MONTHS_SUBMITTED,
  ') ',
   CASE WHEN MONTHS_SUBMITTED=1 THEN 'month ' ELSE 'months ' END,
   'of ACF-801 data') ORDER BY ENTITY_NAME SEPARATOR '. ')
FROM 
CARS_801_AGGN_STATE_2);


IF (SELECT COUNT(ENTITY_NAME) FROM CARS_801_AGGN_STATE_1) = 0 THEN
SET v_TEXTOUT1= '';
ELSE
SET v_TEXTOUT1=CONCAT('At the time of publication, ', v_TEXTOUT1 , ' had not yet reported ACF-801 data for FFY ',v_FISCAL_YEAR,'.');
END IF;

IF (SELECT COUNT(ENTITY_NAME) FROM CARS_801_AGGN_STATE_2)=0 THEN
SET v_TEXTOUT2= '';
ELSE
SET v_TEXTOUT2 = CONCAT('At the time of publication, ',v_TEXTOUT2,'.');
END IF;

SELECT  CONCAT(v_TEXTOUT1,v_TEXTOUT2) AS TEXT_OUT;

END; //

DELIMITER ;