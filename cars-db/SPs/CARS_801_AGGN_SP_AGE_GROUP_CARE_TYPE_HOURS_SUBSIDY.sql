	DELIMITER $$
	CREATE OR REPLACE PROCEDURE CARS_801_AGGN_SP_AGE_GROUP_CARE_TYPE_HOURS_SUBSIDY( IN i_aggn_ref_id INT)
	BEGIN

	DECLARE v_rec_cnt INTEGER DEFAULT 0 ;
	DECLARE v_total_rows_deleted INTEGER DEFAULT 0; 
	DECLARE v_total_rows_inserted INTEGER DEFAULT 0; 
			DECLARE EXIT HANDLER FOR SQLEXCEPTION
			BEGIN
				GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
				SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
				 
				UPDATE CARS_801_SP_LOG
					SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
				WHERE SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_801_SP_LOG WHERE SP_NAME='CARS_801_AGGN_SP_AGE_GROUP_CARE_TYPE_HOURS_SUBSIDY' );
				COMMIT;
			END;	
			
		INSERT INTO CARS_801_SP_LOG ( SP_NAME, START_TS)
			VALUES( 'CARS_801_AGGN_SP_AGE_GROUP_CARE_TYPE_HOURS_SUBSIDY', NOW());	
		
			
			
		SELECT COUNT(*) INTO v_rec_cnt FROM CARS_801_AGGN_AGE_GROUP_CARE_TYPE_HOURS_SUBSIDY WHERE  AGGN_REF_ID = i_aggn_ref_id;
	 
			DELETE FROM CARS_801_AGGN_AGE_GROUP_CARE_TYPE_HOURS_SUBSIDY
			WHERE AGGN_REF_ID = i_aggn_ref_id;
			
			SET v_total_rows_deleted = ROW_COUNT();

	DROP TEMPORARY TABLE IF EXISTS CARS_TMP_423_CATEGORIES_AGE;
	CREATE TEMPORARY TABLE CARS_TMP_423_CATEGORIES_AGE AS  
	SELECT '0 to < 1 yr' AS AGE_GROUP_TEXT
	UNION ALL 
	SELECT '1 to < 2 yrs' AS AGE_GROUP_TEXT
	UNION ALL 
	SELECT '2 to < 3 yrs' AS AGE_GROUP_TEXT
	UNION ALL 
	SELECT '3 to < 4 yrs' AS AGE_GROUP_TEXT
	UNION ALL 
	SELECT '4 to < 5 yrs' AS AGE_GROUP_TEXT
	UNION ALL 
	SELECT '5 to < 6 yrs' AS AGE_GROUP_TEXT
	UNION ALL 
	SELECT '6 to < 13 yrs' AS AGE_GROUP_TEXT
	UNION ALL
	SELECT '13+ yrs' AS AGE_GROUP_TEXT
	UNION ALL 
	SELECT 'All Ages' AS AGE_GROUP_TEXT
	;

	DROP TEMPORARY TABLE IF EXISTS CARS_TMP_423_REPROWS;
	CREATE TEMPORARY TABLE CARS_TMP_423_REPROWS AS 
	SELECT 
	E.ENTITY_ID, ENTITY_NAME, AGE_GROUP_TEXT
	FROM 
	(
	SELECT
	ENTITY_ID, ENTITY_NAME
	FROM CARS_ENTITY
	WHERE ENTITY_TYPE_CD = 'STATE-TER'
	UNION ALL
	SELECT 0 AS ENTITY_ID, 'National' AS ENTITY_NAME
	) E
	JOIN CARS_TMP_423_CATEGORIES_AGE A
	ON 1 = 1
	;

	DROP TEMPORARY TABLE IF EXISTS CARS_TMP_423_BASE;
	CREATE TEMPORARY TABLE CARS_TMP_423_BASE AS  
	SELECT
	MODULE_HDR_ID, ENTITY_ID, ENTITY_NAME, CHILD_ID, SETTING_ID, CHILD_CARE_TYPE_CD, CHILD_CARE_HOURS, MONTHLY_AMOUNT, AGE_CALC, REP_YYYYMM, BIRTH_YYYYMM
	FROM 
	(
			SELECT H.MODULE_HDR_ID, H.ENTITY_ID, H.ENTITY_NAME, C.CHILD_ID, S.SETTING_ID, S.CHILD_CARE_TYPE_CD, S.CHILD_CARE_HOURS, S.MONTHLY_AMOUNT, C.BIRTH_YYYYMM, F.REP_YYYYMM,
			((SUBSTRING(F.REP_YYYYMM, 1, 4) * 12) + SUBSTRING(F.REP_YYYYMM,5,2)) - ((SUBSTRING(C.BIRTH_YYYYMM, 1, 4) * 12) + SUBSTRING(C.BIRTH_YYYYMM,5,2)) AS AGE_CALC
			FROM CARS_MODULE_PERIOD_HDR H
			JOIN CARS_PERIOD P
			ON H.PERIOD_ID = P.PERIOD_ID
			AND 801_FLAG = 1
			JOIN CARS_801_AGGN_REF R
			ON CAST(SUBSTR(P.PERIOD_DESC, 5, 4) AS INTEGER) = R.FISCAL_YEAR
			AND R.AGGN_REF_ID = i_aggn_ref_id
			JOIN CARS_801_REC_COUNTS RC
			ON H.MODULE_HDR_ID = RC.MODULE_HDR_ID
			JOIN CARS_801_FAMILY F
			ON H.MODULE_HDR_ID = F.MODULE_HDR_ID
			JOIN CARS_801_CHILD C
			ON H.MODULE_HDR_ID = C.MODULE_HDR_ID
			AND F.FAMILY_ID = C.FAMILY_ID
			JOIN CARS_801_SETTING S
			ON C.CHILD_ID = S.CHILD_ID
			AND H.MODULE_HDR_ID = S.MODULE_HDR_ID
	) A
	;


	CREATE INDEX IX1 ON CARS_TMP_423_BASE (CHILD_ID);


DROP TEMPORARY TABLE IF EXISTS CARS_TMP_423_INVALID;  	
CREATE TEMPORARY TABLE CARS_TMP_423_INVALID AS  
SELECT
DISTINCT CHILD_ID
FROM 
	(
		SELECT
		MODULE_HDR_ID, ENTITY_NAME, ENTITY_ID, CHILD_ID, AGE_CALC, REP_YYYYMM, BIRTH_YYYYMM,
		MAX(CASE WHEN CHILD_CARE_HOURS IS NULL THEN 1 ELSE 0 END) AS INVALID_CHILD_CARE_HOURS, MAX(CASE WHEN MONTHLY_AMOUNT IS NULL THEN 1 ELSE 0 END) AS INVALID_MONTHLY_AMOUNT,
		MAX(CASE WHEN CHILD_CARE_TYPE_CD IS NULL THEN 1 ELSE 0 END) AS INVALID_CARE_TYPE
		FROM CARS_TMP_423_BASE
		GROUP BY MODULE_HDR_ID, ENTITY_NAME, ENTITY_ID, CHILD_ID, AGE_CALC, REP_YYYYMM, BIRTH_YYYYMM
	) A
WHERE AGE_CALC < 0 OR AGE_CALC IS NULL OR BIRTH_YYYYMM IS NULL OR REP_YYYYMM IS NULL 
OR INVALID_CHILD_CARE_HOURS = 1 OR INVALID_MONTHLY_AMOUNT = 1 OR INVALID_CARE_TYPE = 1
;

	CREATE INDEX IX1 ON CARS_TMP_423_INVALID (CHILD_ID);

	DROP TEMPORARY TABLE IF EXISTS CARS_TMP_423_VALID;
	CREATE TEMPORARY TABLE CARS_TMP_423_VALID AS  
	SELECT
	MODULE_HDR_ID, ENTITY_ID, ENTITY_NAME, B.CHILD_ID, SETTING_ID, CHILD_CARE_TYPE_CD, CHILD_CARE_HOURS, MONTHLY_AMOUNT, AGE_CALC
	FROM CARS_TMP_423_BASE B
	LEFT OUTER JOIN CARS_TMP_423_INVALID I
	ON B.CHILD_ID = I.CHILD_ID
	WHERE I.CHILD_ID IS NULL
	;

	CREATE INDEX IX1 ON CARS_TMP_423_VALID (CHILD_ID);

	DROP TEMPORARY TABLE IF EXISTS CARS_TMP_423_FINAL_BASE;
	CREATE TEMPORARY TABLE CARS_TMP_423_FINAL_BASE AS 
	SELECT 
	MODULE_HDR_ID, ENTITY_ID, ENTITY_NAME, C.CHILD_ID, SETTING_ID, CHILD_CARE_TYPE_CD, CHILD_CARE_HOURS, MONTHLY_AMOUNT, AGE_CALC,
	ROUND(CHILD_CARE_HOURS / TOT_CHILD_CARE_HOURS, 2) AS CALC_CHILD_HRS_PCT
	FROM 
	(
		SELECT
		MODULE_HDR_ID, ENTITY_ID, ENTITY_NAME, CHILD_ID, SETTING_ID, CHILD_CARE_TYPE_CD, CHILD_CARE_HOURS, MONTHLY_AMOUNT, AGE_CALC
		FROM CARS_TMP_423_VALID
	) C
	JOIN 
	(
		SELECT
		CHILD_ID, SUM(CHILD_CARE_HOURS) AS TOT_CHILD_CARE_HOURS
		FROM CARS_TMP_423_VALID
		GROUP BY CHILD_ID
	) S
	ON C.CHILD_ID = S.CHILD_ID
	;


	DROP TEMPORARY TABLE IF EXISTS CARS_TMP_423_INTERIM;
	CREATE TEMPORARY TABLE CARS_TMP_423_INTERIM AS 
	SELECT 
	MODULE_HDR_ID, ENTITY_ID, ENTITY_NAME, CHILD_ID, SETTING_ID, CHILD_CARE_HOURS, MONTHLY_AMOUNT, 
	CASE WHEN CAST(CHILD_CARE_TYPE_CD AS INTEGER) IN (1,5,6) THEN CALC_CHILD_HRS_PCT ELSE NULL END AS CHILD_HOME,
	CASE WHEN CAST(CHILD_CARE_TYPE_CD AS INTEGER) IN (2,7,8) THEN CALC_CHILD_HRS_PCT ELSE NULL END AS FAMILY_HOME,
	CASE WHEN CAST(CHILD_CARE_TYPE_CD AS INTEGER) IN (3,9,10) THEN CALC_CHILD_HRS_PCT ELSE NULL END AS GROUP_HOME,
	CASE WHEN CAST(CHILD_CARE_TYPE_CD AS INTEGER) IN (4,11) THEN CALC_CHILD_HRS_PCT ELSE NULL END AS CENTER,
	CASE WHEN CAST(CHILD_CARE_TYPE_CD AS INTEGER) IN (1,2,3,4,5,6,7,8,9,10,11) THEN CALC_CHILD_HRS_PCT ELSE NULL END AS ALL_CARE,

	CASE WHEN CAST(CHILD_CARE_TYPE_CD AS INTEGER) IN (1,5,6) THEN CHILD_CARE_HOURS ELSE NULL END AS CHILD_HOME_HOURS,
	CASE WHEN CAST(CHILD_CARE_TYPE_CD AS INTEGER) IN (2,7,8) THEN CHILD_CARE_HOURS ELSE NULL END AS FAMILY_HOME_HOURS,
	CASE WHEN CAST(CHILD_CARE_TYPE_CD AS INTEGER) IN (3,9,10) THEN CHILD_CARE_HOURS ELSE NULL END AS GROUP_HOME_HOURS,
	CASE WHEN CAST(CHILD_CARE_TYPE_CD AS INTEGER) IN (4,11) THEN CHILD_CARE_HOURS ELSE NULL END AS CENTER_HOURS,
	CASE WHEN CAST(CHILD_CARE_TYPE_CD AS INTEGER) IN (1,2,3,4,5,6,7,8,9,10,11) THEN CHILD_CARE_HOURS ELSE NULL END AS ALL_CARE_HOURS,

	CASE WHEN CAST(CHILD_CARE_TYPE_CD AS INTEGER) IN (1,5,6) THEN MONTHLY_AMOUNT ELSE NULL END AS CHILD_HOME_SUBSIDY,
	CASE WHEN CAST(CHILD_CARE_TYPE_CD AS INTEGER) IN (2,7,8) THEN MONTHLY_AMOUNT ELSE NULL END AS FAMILY_HOME_SUBSIDY,
	CASE WHEN CAST(CHILD_CARE_TYPE_CD AS INTEGER) IN (3,9,10) THEN MONTHLY_AMOUNT ELSE NULL END AS GROUP_HOME_SUBSIDY,
	CASE WHEN CAST(CHILD_CARE_TYPE_CD AS INTEGER) IN (4,11) THEN MONTHLY_AMOUNT ELSE NULL END AS CENTER_SUBSIDY,
	CASE WHEN CAST(CHILD_CARE_TYPE_CD AS INTEGER) IN (1,2,3,4,5,6,7,8,9,10,11) THEN MONTHLY_AMOUNT ELSE NULL END AS ALL_CARE_SUBSIDY,

	CASE 
		WHEN AGE_CALC BETWEEN 0 AND 11 THEN '0 to < 1 yr'
		WHEN AGE_CALC BETWEEN 12 AND 23 THEN '1 to < 2 yrs'
		WHEN AGE_CALC BETWEEN 24 AND 35 THEN '2 to < 3 yrs'
		WHEN AGE_CALC BETWEEN 36 AND 47 THEN '3 to < 4 yrs'
		WHEN AGE_CALC BETWEEN 48 AND 59 THEN '4 to < 5 yrs'
		WHEN AGE_CALC BETWEEN 60 AND 71 THEN '5 to < 6 yrs'
		WHEN AGE_CALC BETWEEN 72 AND 155 THEN '6 to < 13 yrs'
		WHEN AGE_CALC >= 156 THEN '13+ yrs'
		ELSE 'INVALID' END AS AGE_GROUP_TEXT
	FROM CARS_TMP_423_FINAL_BASE
	;



	DROP TEMPORARY TABLE IF EXISTS CARS_TMP_423;
	CREATE TEMPORARY TABLE CARS_TMP_423 AS 
	SELECT
	ENTITY_ID, ENTITY_NAME, AGE_GROUP_TEXT,
	ROUND(SUM(CHILD_HOME_HOURS) / SUM(CHILD_HOME), 0) AS CHILD_HOME_HOURS,
	ROUND(SUM(CHILD_HOME_SUBSIDY) / SUM(CHILD_HOME), 0) AS CHILD_HOME_SUBSIDY,

	ROUND(SUM(FAMILY_HOME_HOURS) / SUM(FAMILY_HOME), 0) AS FAMILY_HOME_HOURS,
	ROUND(SUM(FAMILY_HOME_SUBSIDY) / SUM(FAMILY_HOME), 0) AS FAMILY_HOME_SUBSIDY,

	ROUND(SUM(GROUP_HOME_HOURS) / SUM(GROUP_HOME), 0) AS GROUP_HOME_HOURS,
	ROUND(SUM(GROUP_HOME_SUBSIDY) / SUM(GROUP_HOME), 0) AS GROUP_HOME_SUBSIDY,

	ROUND(SUM(CENTER_HOURS) / SUM(CENTER), 0) AS CENTER_HOURS,
	ROUND(SUM(CENTER_SUBSIDY) / SUM(CENTER), 0) AS CENTER_SUBSIDY,

	ROUND(SUM(ALL_CARE_HOURS) / SUM(ALL_CARE), 0) AS ALL_CARE_HOURS,
	ROUND(SUM(ALL_CARE_SUBSIDY) / SUM(ALL_CARE), 0) AS ALL_CARE_SUBSIDY

	FROM CARS_TMP_423_INTERIM
	GROUP BY ENTITY_ID, ENTITY_NAME, AGE_GROUP_TEXT
	
	UNION ALL 
	
	SELECT
	ENTITY_ID, ENTITY_NAME, 'All Ages',
	ROUND(SUM(CHILD_HOME_HOURS) / SUM(CHILD_HOME), 0) AS CHILD_HOME_HOURS,
	ROUND(SUM(CHILD_HOME_SUBSIDY) / SUM(CHILD_HOME), 0) AS CHILD_HOME_SUBSIDY,

	ROUND(SUM(FAMILY_HOME_HOURS) / SUM(FAMILY_HOME), 0) AS FAMILY_HOME_HOURS,
	ROUND(SUM(FAMILY_HOME_SUBSIDY) / SUM(FAMILY_HOME), 0) AS FAMILY_HOME_SUBSIDY,

	ROUND(SUM(GROUP_HOME_HOURS) / SUM(GROUP_HOME), 0) AS GROUP_HOME_HOURS,
	ROUND(SUM(GROUP_HOME_SUBSIDY) / SUM(GROUP_HOME), 0) AS GROUP_HOME_SUBSIDY,

	ROUND(SUM(CENTER_HOURS) / SUM(CENTER), 0) AS CENTER_HOURS,
	ROUND(SUM(CENTER_SUBSIDY) / SUM(CENTER), 0) AS CENTER_SUBSIDY,

	ROUND(SUM(ALL_CARE_HOURS) / SUM(ALL_CARE), 0) AS ALL_CARE_HOURS,
	ROUND(SUM(ALL_CARE_SUBSIDY) / SUM(ALL_CARE), 0) AS ALL_CARE_SUBSIDY

	FROM CARS_TMP_423_INTERIM
	GROUP BY ENTITY_ID, ENTITY_NAME, 'All Ages'
	
	UNION ALL 
	
	SELECT
	0 AS ENTITY_ID, 'National' as ENTITY_NAME, AGE_GROUP_TEXT,
	ROUND(SUM(CHILD_HOME_HOURS) / SUM(CHILD_HOME), 0) AS CHILD_HOME_HOURS,
	ROUND(SUM(CHILD_HOME_SUBSIDY) / SUM(CHILD_HOME), 0) AS CHILD_HOME_SUBSIDY,

	ROUND(SUM(FAMILY_HOME_HOURS) / SUM(FAMILY_HOME), 0) AS FAMILY_HOME_HOURS,
	ROUND(SUM(FAMILY_HOME_SUBSIDY) / SUM(FAMILY_HOME), 0) AS FAMILY_HOME_SUBSIDY,

	ROUND(SUM(GROUP_HOME_HOURS) / SUM(GROUP_HOME), 0) AS GROUP_HOME_HOURS,
	ROUND(SUM(GROUP_HOME_SUBSIDY) / SUM(GROUP_HOME), 0) AS GROUP_HOME_SUBSIDY,

	ROUND(SUM(CENTER_HOURS) / SUM(CENTER), 0) AS CENTER_HOURS,
	ROUND(SUM(CENTER_SUBSIDY) / SUM(CENTER), 0) AS CENTER_SUBSIDY,

	ROUND(SUM(ALL_CARE_HOURS) / SUM(ALL_CARE), 0) AS ALL_CARE_HOURS,
	ROUND(SUM(ALL_CARE_SUBSIDY) / SUM(ALL_CARE), 0) AS ALL_CARE_SUBSIDY

	FROM CARS_TMP_423_INTERIM
	GROUP BY 1,2,3

	UNION ALL

	SELECT
	0 AS ENTITY_ID, 'National' as ENTITY_NAME, 'All Ages',
	ROUND(SUM(CHILD_HOME_HOURS) / SUM(CHILD_HOME), 0) AS CHILD_HOME_HOURS,
	ROUND(SUM(CHILD_HOME_SUBSIDY) / SUM(CHILD_HOME), 0) AS CHILD_HOME_SUBSIDY,

	ROUND(SUM(FAMILY_HOME_HOURS) / SUM(FAMILY_HOME), 0) AS FAMILY_HOME_HOURS,
	ROUND(SUM(FAMILY_HOME_SUBSIDY) / SUM(FAMILY_HOME), 0) AS FAMILY_HOME_SUBSIDY,

	ROUND(SUM(GROUP_HOME_HOURS) / SUM(GROUP_HOME), 0) AS GROUP_HOME_HOURS,
	ROUND(SUM(GROUP_HOME_SUBSIDY) / SUM(GROUP_HOME), 0) AS GROUP_HOME_SUBSIDY,

	ROUND(SUM(CENTER_HOURS) / SUM(CENTER), 0) AS CENTER_HOURS,
	ROUND(SUM(CENTER_SUBSIDY) / SUM(CENTER), 0) AS CENTER_SUBSIDY,

	ROUND(SUM(ALL_CARE_HOURS) / SUM(ALL_CARE), 0) AS ALL_CARE_HOURS,
	ROUND(SUM(ALL_CARE_SUBSIDY) / SUM(ALL_CARE), 0) AS ALL_CARE_SUBSIDY

	FROM CARS_TMP_423_INTERIM
	GROUP BY 1,2,3
	;

	INSERT INTO CARS_801_AGGN_AGE_GROUP_CARE_TYPE_HOURS_SUBSIDY
	(
	AGGN_REF_ID, 
	ENTITY_ID,
	AGE_GROUP_TEXT, 
	ENTITY_NAME,
	CHILD_HOME_HOURS, 
	CHILD_HOME_SUBSIDY, 
	FAMILY_HOME_HOURS, 
	FAMILY_HOME_SUBSIDY, 
	GROUP_HOME_HOURS, 
	GROUP_HOME_SUBSIDY, 
	CENTER_HOURS, 
	CENTER_SUBSIDY, 
	ALL_HOURS, 
	ALL_SUBSIDY
	) 
	SELECT
	i_aggn_ref_id,
	C.ENTITY_ID,
	C.AGE_GROUP_TEXT,
	C.ENTITY_NAME,
	CASE WHEN D.ENTITY_ID IS NULL THEN NULL
		 WHEN I.AGE_GROUP_TEXT IS NULL THEN 0
	ELSE COALESCE(CHILD_HOME_HOURS, 0) END,
	CASE WHEN D.ENTITY_ID IS NULL THEN NULL
		 WHEN I.AGE_GROUP_TEXT IS NULL THEN 0
	ELSE COALESCE(CHILD_HOME_SUBSIDY, 0) END,
	CASE WHEN D.ENTITY_ID IS NULL THEN NULL
		 WHEN I.AGE_GROUP_TEXT IS NULL THEN 0
	ELSE COALESCE(FAMILY_HOME_HOURS, 0) END,
	CASE WHEN D.ENTITY_ID IS NULL THEN NULL
		 WHEN I.AGE_GROUP_TEXT IS NULL THEN 0 
	ELSE COALESCE(FAMILY_HOME_SUBSIDY, 0) END,
	CASE WHEN D.ENTITY_ID IS NULL THEN NULL
		 WHEN I.AGE_GROUP_TEXT IS NULL THEN 0 
	ELSE COALESCE(GROUP_HOME_HOURS, 0) END,
	CASE WHEN D.ENTITY_ID IS NULL THEN NULL
		 WHEN I.AGE_GROUP_TEXT IS NULL THEN 0 
	ELSE COALESCE(GROUP_HOME_SUBSIDY, 0) END,
	CASE WHEN D.ENTITY_ID IS NULL THEN NULL
		 WHEN I.AGE_GROUP_TEXT IS NULL THEN 0 
	ELSE COALESCE(CENTER_HOURS, 0) END,
	CASE WHEN D.ENTITY_ID IS NULL THEN NULL
		 WHEN I.AGE_GROUP_TEXT IS NULL THEN 0
	ELSE COALESCE(CENTER_SUBSIDY, 0) END,
	CASE WHEN D.ENTITY_ID IS NULL THEN NULL
		 WHEN I.AGE_GROUP_TEXT IS NULL THEN 0 
	ELSE COALESCE(ALL_CARE_HOURS, 0) END,
	CASE WHEN D.ENTITY_ID IS NULL THEN NULL
		 WHEN I.AGE_GROUP_TEXT IS NULL THEN 0 
	ELSE COALESCE(ALL_CARE_SUBSIDY, 0) END
	FROM CARS_TMP_423_REPROWS C
	LEFT OUTER JOIN (SELECT DISTINCT ENTITY_ID FROM CARS_TMP_423) D
	ON C.ENTITY_ID = D.ENTITY_ID
	LEFT OUTER JOIN CARS_TMP_423 I
	ON C.ENTITY_ID = I.ENTITY_ID
	AND C.AGE_GROUP_TEXT = I.AGE_GROUP_TEXT
	
	
	;




			SET v_total_rows_inserted = ROW_COUNT();
			
DROP TEMPORARY TABLE IF EXISTS CARS_TMP_423_CATEGORIES_AGE;
DROP TEMPORARY TABLE IF EXISTS CARS_TMP_423_BASE;
DROP TEMPORARY TABLE IF EXISTS CARS_TMP_423_INVALID;
DROP TEMPORARY TABLE IF EXISTS CARS_TMP_423_VALID;
DROP TEMPORARY TABLE IF EXISTS CARS_TMP_423_FINAL_BASE;
DROP TEMPORARY TABLE IF EXISTS CARS_TMP_423_INTERIM;
DROP TEMPORARY TABLE IF EXISTS CARS_TMP_423_REPROWS;
DROP TEMPORARY TABLE IF EXISTS CARS_TMP_423;


	UPDATE CARS_801_SP_LOG
	SET SP_STATUS_TEXT= CONCAT('Success. Rows inserted: ',v_total_rows_inserted, ' Rows Deleted :', v_total_rows_deleted), END_TS=NOW()
	WHERE  SP_LOG_ID=( SELECT MAX(SP_LOG_ID) FROM CARS_801_SP_LOG WHERE SP_NAME ='CARS_801_AGGN_SP_AGE_GROUP_CARE_TYPE_HOURS_SUBSIDY');
	COMMIT;		
		
	END$$
	DELIMITER ;