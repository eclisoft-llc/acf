DELIMITER $$
CREATE OR REPLACE PROCEDURE CARS_118_LEGACY_CERT_AND_APPROVAL_SUMMARY_PROC(IN i_period_id INTEGER,IN i_entity_id TEXT)
BEGIN
DECLARE v_sql TEXT DEFAULT NULL ; 
DECLARE v_entities TEXT DEFAULT NULL;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
		SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
		
		UPDATE CARS_SP_LOG
			SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
		WHERE SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_SP_LOG WHERE SP_NAME='CARS_118_LEGACY_AMEND_REV_SUMMARY_PROC');
			
		
	END;
	
		INSERT INTO CARS_SP_LOG (SP_NAME, SP_STATUS_TEXT, START_TS)
		VALUES('CARS_118_LEGACY_AMEND_REV_SUMMARY_PROC', 'Started', NOW());	

IF TRIM(i_entity_id)!='' THEN

SELECT
E.ENTITY_NAME AS 'State_Territory', 
R.ENTITY_NAME AS 'Region',
R.ENTITY_ID AS 'REGION_ID',
A.INI AS 'Initial_Certified_Date', 
A.FIN AS 'Last_Certified_Date',
/*
C.R_DATE AS REG_DATE,
D.R_DATE AS RPM_DATE,
E.R_DATE AS CENT_DATE,
*/
B.APP AS 'Approval_Date'

FROM CARS_LEGACY_118_STPLAN_STATE_INFO_REF S
JOIN CARS_ENTITY E
ON S.STATE_NAME = E.ENTITY_NAME
AND E.ENTITY_TYPE_CD = 'STATE-TER'
JOIN CARS_ENTITY R
ON E.REGION_ID = R.ENTITY_ID
AND R.ENTITY_TYPE_CD = 'REGION'

LEFT OUTER JOIN 
(
	SELECT A.STPLAN_STATE_CODE AS STATE_CODE, A.STPLAN_AMDMT_DATE AS INI, 
	A.STPLAN_CERT_DATE AS FIN
	FROM CARS_LEGACY_118_STPLAN_CERT_APRVL_STATUS A
	JOIN CARS_PERIOD P
	ON A.STPLAN_YEAR = SUBSTR(P.PERIOD_DESC, 4, 4)
	AND P.PERIOD_ID = i_period_id
	WHERE A.STPLAN_RESP_VERSION = 1
)A
ON A.STATE_CODE = S.STATE_CODE

LEFT OUTER JOIN 
(
SELECT A.STPLAN_STATE_CODE AS STATE_CODE, A.STPLAN_APRVL_DATE APP
FROM CARS_LEGACY_118_STPLAN_CERT_APRVL_STATUS A
JOIN CARS_PERIOD P
ON A.STPLAN_YEAR = SUBSTR(P.PERIOD_DESC, 4, 4)
AND P.PERIOD_ID = i_period_id
WHERE A.STPLAN_RESP_VERSION = 1
AND A.STPLAN_STATUS IN ('a', 'n')
) B
ON B.STATE_CODE = S.STATE_CODE
/*
LEFT OUTER JOIN 
(
    SELECT DISTINCT A.STPLAN_VALID_STATE_CODE AS STATE_CODE, A.STPLAN_VALID_DATE R_DATE 
	FROM  CARS_LEGACY_118_STPLAN_VALIDATION_RESP A
	JOIN CARS_PERIOD P
	ON A.STPLAN_VALID_YEAR = SUBSTR(P.PERIOD_DESC, 4, 4)
	AND P.PERIOD_ID = i_period_id
	WHERE A.STPLAN_GROUP_ID = 3 
	AND A.STPLAN_VALID_USER_TITLE = 'R' 
) C
ON S.STATE_CODE = C.STATE_CODE

LEFT OUTER JOIN 
(
	SELECT DISTINCT A.STPLAN_VALID_STATE_CODE STATE_CODE,A.STPLAN_VALID_DATE R_DATE 
	FROM  CARS_LEGACY_118_STPLAN_VALIDATION_RESP A
	JOIN CARS_PERIOD P
	ON A.STPLAN_VALID_YEAR = SUBSTR(P.PERIOD_DESC, 4, 4)
	AND P.PERIOD_ID = i_period_id
	WHERE A.STPLAN_GROUP_ID = 3 
	AND A.STPLAN_VALID_USER_TITLE = 'RPM'
) D
ON S.STATE_CODE = D.STATE_CODE

LEFT OUTER JOIN 
(
	SELECT DISTINCT A.STPLAN_VALID_STATE_CODE STATE_CODE,A.STPLAN_VALID_DATE R_DATE 
	FROM  CARS_LEGACY_118_STPLAN_VALIDATION_RESP A
	JOIN CARS_PERIOD P
	ON A.STPLAN_VALID_YEAR = SUBSTR(P.PERIOD_DESC, 4, 4)
	AND P.PERIOD_ID = i_period_id
	WHERE A.STPLAN_GROUP_ID = 2
	AND A.STPLAN_VALID_USER_TITLE = 'C'
) E
ON S.STATE_CODE = E.STATE_CODE
*/
WHERE E.ENTITY_ID IN ((select TRIM(j.name) AS ENTITY_ID
	from json_table(
	  replace(json_array(i_entity_id), ',', '","'),
	  '$[*]' columns (name varchar(10) path '$')
	) j))

ORDER BY E.ENTITY_NAME
;

	SELECT 'State/Territory' AS 'State/Territory','Region' AS 'Region','Region_ID' AS 'Region_ID', 'Initial Certified Date' AS 'Initial_Certified_Date',
	'Last Certified Date' AS 'Last_Certified_Date','Approval Date' AS 'Approval_Date';

ELSE

SELECT
E.ENTITY_NAME AS 'State_Territory', 
R.ENTITY_NAME AS 'Region',
R.ENTITY_ID AS 'REGION_ID',
A.INI AS 'Initial_Certified_Date', 
A.FIN AS 'Last_Certified_Date',
/*
C.R_DATE AS REG_DATE,
D.R_DATE AS RPM_DATE,
E.R_DATE AS CENT_DATE,
*/
B.APP AS 'Approval_Date'

FROM CARS_LEGACY_118_STPLAN_STATE_INFO_REF S
JOIN CARS_ENTITY E
ON S.STATE_NAME = E.ENTITY_NAME
AND E.ENTITY_TYPE_CD = 'STATE-TER'
JOIN CARS_ENTITY R
ON E.REGION_ID = R.ENTITY_ID
AND R.ENTITY_TYPE_CD = 'REGION'

LEFT OUTER JOIN 
(
	SELECT A.STPLAN_STATE_CODE AS STATE_CODE, A.STPLAN_AMDMT_DATE AS INI, 
	A.STPLAN_CERT_DATE AS FIN
	FROM CARS_LEGACY_118_STPLAN_CERT_APRVL_STATUS A
	JOIN CARS_PERIOD P
	ON A.STPLAN_YEAR = SUBSTR(P.PERIOD_DESC, 4, 4)
	AND P.PERIOD_ID = i_period_id
	WHERE A.STPLAN_RESP_VERSION = 1
)A
ON A.STATE_CODE = S.STATE_CODE

LEFT OUTER JOIN 
(
SELECT A.STPLAN_STATE_CODE AS STATE_CODE, A.STPLAN_APRVL_DATE APP
FROM CARS_LEGACY_118_STPLAN_CERT_APRVL_STATUS A
JOIN CARS_PERIOD P
ON A.STPLAN_YEAR = SUBSTR(P.PERIOD_DESC, 4, 4)
AND P.PERIOD_ID = i_period_id
WHERE A.STPLAN_RESP_VERSION = 1
AND A.STPLAN_STATUS IN ('a', 'n')
) B
ON B.STATE_CODE = S.STATE_CODE
/*
LEFT OUTER JOIN 
(
    SELECT DISTINCT A.STPLAN_VALID_STATE_CODE AS STATE_CODE, A.STPLAN_VALID_DATE R_DATE 
	FROM  CARS_LEGACY_118_STPLAN_VALIDATION_RESP A
	JOIN CARS_PERIOD P
	ON A.STPLAN_VALID_YEAR = SUBSTR(P.PERIOD_DESC, 4, 4)
	AND P.PERIOD_ID = i_period_id
	WHERE A.STPLAN_GROUP_ID = 3 
	AND A.STPLAN_VALID_USER_TITLE = 'R' 
) C
ON S.STATE_CODE = C.STATE_CODE

LEFT OUTER JOIN 
(
	SELECT DISTINCT A.STPLAN_VALID_STATE_CODE STATE_CODE,A.STPLAN_VALID_DATE R_DATE 
	FROM  CARS_LEGACY_118_STPLAN_VALIDATION_RESP A
	JOIN CARS_PERIOD P
	ON A.STPLAN_VALID_YEAR = SUBSTR(P.PERIOD_DESC, 4, 4)
	AND P.PERIOD_ID = i_period_id
	WHERE A.STPLAN_GROUP_ID = 3 
	AND A.STPLAN_VALID_USER_TITLE = 'RPM'
) D
ON S.STATE_CODE = D.STATE_CODE

LEFT OUTER JOIN 
(
	SELECT DISTINCT A.STPLAN_VALID_STATE_CODE STATE_CODE,A.STPLAN_VALID_DATE R_DATE 
	FROM  CARS_LEGACY_118_STPLAN_VALIDATION_RESP A
	JOIN CARS_PERIOD P
	ON A.STPLAN_VALID_YEAR = SUBSTR(P.PERIOD_DESC, 4, 4)
	AND P.PERIOD_ID = i_period_id
	WHERE A.STPLAN_GROUP_ID = 2
	AND A.STPLAN_VALID_USER_TITLE = 'C'
) E
ON S.STATE_CODE = E.STATE_CODE
*/

ORDER BY E.ENTITY_NAME
;

	SELECT 'State/Territory' AS 'State/Territory','Region' AS 'Region','Region_ID' AS 'Region_ID', 'Initial Certified Date' AS 'Initial_Certified_Date',
	'Last Certified Date' AS 'Last_Certified_Date','Approval Date' AS 'Approval_Date';

END IF;


UPDATE CARS_SP_LOG
SET SP_STATUS_TEXT= 'Success', END_TS=NOW()
WHERE  SP_LOG_ID=( SELECT MAX(SP_LOG_ID) FROM CARS_SP_LOG WHERE SP_NAME = 'CARS_118_LEGACY_AMEND_REV_SUMMARY_PROC');
		
END$$
DELIMITER ;