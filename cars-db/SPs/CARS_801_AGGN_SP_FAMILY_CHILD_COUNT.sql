DELIMITER $$
CREATE OR REPLACE PROCEDURE CARS_801_AGGN_SP_FAMILY_CHILD_COUNT( IN i_aggn_ref_id INT)
BEGIN
/******************************************************
 * Author: Zohreh Torabian
 * Report Name: Average Number of Families and Children
 * Report Number: 101
 * Desc: It populates data for table, 
 *		 CARS_801_AGGN_FAMILY_CHILD_COUNT.
 ******************************************************/
DECLARE v_rec_cnt INTEGER DEFAULT 0 ;
DECLARE v_total_rows_deleted INTEGER DEFAULT 0; 
DECLARE v_total_rows_inserted INTEGER DEFAULT 0; 
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
			SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
			 
			UPDATE CARS_801_SP_LOG
				SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
			WHERE SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_801_SP_LOG WHERE SP_NAME='CARS_801_AGGN_SP_FAMILY_CHILD_COUNT' );
			COMMIT;
		END;	
		
	INSERT INTO CARS_801_SP_LOG ( SP_NAME, START_TS)
		VALUES( 'CARS_801_AGGN_SP_FAMILY_CHILD_COUNT',  NOW());	
		
		
	SELECT COUNT(*) INTO v_rec_cnt FROM CARS_801_AGGN_FAMILY_CHILD_COUNT WHERE  AGGN_REF_ID = i_aggn_ref_id;
 
		DELETE FROM CARS_801_AGGN_FAMILY_CHILD_COUNT
		WHERE AGGN_REF_ID = i_aggn_ref_id;
        
		SET v_total_rows_deleted = ROW_COUNT();

	 
DROP TEMPORARY TABLE IF EXISTS TMP_CARS_FAM_CHLD1;
CREATE TEMPORARY TABLE TMP_CARS_FAM_CHLD1 AS  
SELECT
    
	H.ENTITY_NAME, 
	H.ENTITY_ID,
	
    F.POOLING_FACTOR,
    R.FISCAL_YEAR, 
   
	ROUND(AVG(H.FAMILY_COUNT),-2) AS FAMILY_UNADJ_AVG_COUNT, 
	ROUND(AVG(C.POP_SAM_CHILD_COUNT),-2) AS CHILD_UNADJ_AVG_COUNT,
	 
	CASE WHEN F.POOLING_FACTOR IS NULL THEN NULL ELSE ROUND(F.POOLING_FACTOR *.01 * AVG(H.FAMILY_COUNT),-2) END AS FAMILY_ADJ_AVG_COUNT,
	CASE WHEN F.POOLING_FACTOR IS NULL THEN NULL ELSE ROUND(F.POOLING_FACTOR *.01 * AVG(C.POP_SAM_CHILD_COUNT),-2) END AS CHILD_ADJ_AVG_COUNT
	 
FROM CARS_MODULE_PERIOD_HDR H
	JOIN CARS_PERIOD P
ON H.PERIOD_ID = P.PERIOD_ID
	JOIN CARS_801_AGGN_REF R
ON CAST(SUBSTR(P.PERIOD_DESC, 5, 4) AS INTEGER) = R.FISCAL_YEAR
AND R.AGGN_REF_ID = i_aggn_ref_id
	JOIN CARS_801_REC_COUNTS C
ON H.MODULE_HDR_ID = C.MODULE_HDR_ID
 
	JOIN VW_CARS_801_POOLING_FACTOR F
ON SUBSTR(P.PERIOD_DESC, 2, 7) = F.PERIOD_DESC
AND H.ENTITY_ID = F.ENTITY_ID
GROUP BY 1, 2, 3
;

DROP TEMPORARY TABLE IF EXISTS TMP_CARS_FAM_CHLD2;
CREATE TEMPORARY TABLE TMP_CARS_FAM_CHLD2 AS
SELECT
    
	'National' AS ENTITY_NAME,
	0 AS ENTITY_ID,
	SUM(FAMILY_UNADJ_AVG_COUNT) AS FAMILY_UNADJ_AVG_COUNT, 
	SUM(CHILD_UNADJ_AVG_COUNT) AS CHILD_UNADJ_AVG_COUNT,
	SUM(FAMILY_ADJ_AVG_COUNT) AS FAMILY_ADJ_AVG_COUNT, 
	SUM(CHILD_ADJ_AVG_COUNT) AS CHILD_ADJ_AVG_COUNT
FROM TMP_CARS_FAM_CHLD1 ;
 INSERT INTO CARS_801_AGGN_FAMILY_CHILD_COUNT
(
 AGGN_REF_ID
 ,ENTITY_ID
 ,ENTITY_NAME
 ,FAMILES_UNADJ_COUNT
 ,CHILDREN_UNADJ_COUNT
 ,POOLING_FACTOR_PERCENT
 ,FAMILIES_ADJ_COUNT
 ,CHILD_ADJ_COUNT
 )
        SELECT
           i_aggn_ref_id
            , ENTITY_ID
            , ENTITY_NAME
            , FAMILY_UNADJ_AVG_COUNT
            , CHILD_UNADJ_AVG_COUNT
			, POOLING_FACTOR
            , FAMILY_ADJ_AVG_COUNT
            , CHILD_ADJ_AVG_COUNT
        FROM TMP_CARS_FAM_CHLD1

        UNION ALL
	
        SELECT
           i_aggn_ref_id
            , ENTITY_ID
            , ENTITY_NAME
            , FAMILY_UNADJ_AVG_COUNT
            , CHILD_UNADJ_AVG_COUNT
			, NULL AS POOLING_FACTOR
            , FAMILY_ADJ_AVG_COUNT
            , CHILD_ADJ_AVG_COUNT
        FROM TMP_CARS_FAM_CHLD2
        
		UNION ALL
        
		SELECT 
           i_aggn_ref_id 
           ,E.ENTITY_ID		   
           ,E.ENTITY_NAME
           ,NULL
		   ,NULL
           ,NULL
           ,NULL
           ,NULL
            FROM CARS_ENTITY E
                LEFT OUTER JOIN TMP_CARS_FAM_CHLD1 C
            ON E.ENTITY_ID = C.ENTITY_ID
            WHERE E.ENTITY_TYPE_CD = 'STATE-TER'
            AND C.ENTITY_ID IS NULL ;

     
SET v_total_rows_inserted = ROW_COUNT();

DROP TEMPORARY TABLE IF EXISTS TMP_CARS_FAM_CHLD2;
DROP TEMPORARY TABLE IF EXISTS TMP_CARS_FAM_CHLD1;

UPDATE CARS_801_SP_LOG
SET SP_STATUS_TEXT= CONCAT('Success. Rows inserted: ',v_total_rows_inserted, ' Rows Deleted :', v_total_rows_deleted), END_TS=NOW()
 
WHERE  SP_LOG_ID=( SELECT MAX(SP_LOG_ID) FROM CARS_801_SP_LOG WHERE SP_NAME ='CARS_801_AGGN_SP_FAMILY_CHILD_COUNT');
COMMIT;		
	
END$$
DELIMITER ;