DROP PROCEDURE CARS_118_CLONE_AMENDMENT;

DELIMITER $$
CREATE PROCEDURE `CARS_118_CLONE_AMENDMENT`(
	IN i_hdramend_id INT(11))

BEGIN
	DECLARE v_hdramend_id INTEGER DEFAULT 0 ; 
	DECLARE v_seq_num INTEGER DEFAULT 0 ;
	DECLARE v_seq_nums INTEGER DEFAULT 0 ;
	DECLARE v_modhdr_id INTEGER DEFAULT 0 ;
	DECLARE v_modmeta_id INTEGER DEFAULT 0 ;
	
	-- process error handle
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
		SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
		 
		UPDATE CARS_SP_LOG
			SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
		WHERE SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_SP_LOG WHERE SP_NAME='CARS_118_CLONE_AMENDMENT');
		COMMIT; 

	END;	
	
	-- insert log record
	INSERT INTO CARS_SP_LOG (`SP_NAME`, `START_TS`, `END_TS`)
		VALUES( 'CARS_118_CLONE_AMENDMENT', NOW(), NOW());
		
	SELECT MODULE_HDR_ID INTO v_modhdr_id FROM CARS_118_HDR_AMEND WHERE HDR_AMEND_ID =i_hdramend_id LIMIT 1;
	SELECT MAX(AMEND_SEQ_NUM) INTO v_seq_num FROM CARS_118_HDR_AMEND WHERE MODULE_HDR_ID=v_modhdr_id;
	SELECT MODULE_META_ID INTO v_modmeta_id FROM CARS_MODULE_PERIOD_HDR WHERE MODULE_HDR_ID = v_modhdr_id;
		
		IF (v_seq_num IS NULL) THEN
	    SET v_seq_num=1;
	ELSE
	    SET v_seq_num=v_seq_num+1;
	END IF;
	
	
	INSERT INTO CARS_118_HDR_AMEND(MODULE_HDR_ID,AMEND_SEQ_NUM)	
	SELECT v_modhdr_id,v_seq_num;	
	
	SELECT LAST_INSERT_ID() INTO v_hdramend_id;	

	UPDATE CARS_MODULE_PERIOD_HDR
	SET STATUS_TEXT='Work in Progress'
	WHERE MODULE_HDR_ID = v_modhdr_id;
	
	CREATE OR REPLACE TEMPORARY TABLE CARS_118_CLONE_AMENDMENT_TEMP AS
	SELECT v_hdramend_id AS 'vhdramendid',SUBQUES_ID,'Recommendation Review' AS RR,'Recommend' AS R,'SYSTEM' AS S,now() AS 'now',v_modmeta_id AS MODULE_META_ID
	FROM  VW_CARS_118_SUBQUES_ID VSQ  WHERE VSQ.MODULE_META_ID=v_modmeta_id;
	UNION ALL
	SELECT v_hdramend_id,SUBQUES_ID,'Validation Review','Agree','SYSTEM',now(),v_modmeta_id AS MODULE_META_ID
	FROM VW_CARS_118_SUBQUES_ID VSQ  WHERE VSQ.MODULE_META_ID=v_modmeta_id;
	
	CREATE OR REPLACE TEMPORARY TABLE  CARS_118_HDR_SUBQUES_REVIEW_TEMP AS 
	SELECT v_hdramend_id AS HDR_AMEND_ID, SUBQUES_ID, REVIEW_STATUS_TEXT,  'SYSTEM' AS LAST_UPD_BY, NOW() AS LAST_UPD_TS,REVIEW_DECISION_TEXT
	,REVIEW_COMPONENTS_ID_LIST,COMPLIANCE_STATUS_TEXT,WAIVER_TEXT,RECOMMENDATION_FINAL_FLAG,v_modmeta_id AS MODULE_META_ID
	 FROM CARS_118_HDR_SUBQUES_REVIEW WHERE HDR_AMEND_ID=i_hdramend_id;
	 
	# for the old plan
	INSERT INTO CARS_118_HDR_SUBQUES_REVIEW(HDR_AMEND_ID,SUBQUES_ID,REVIEW_STATUS_TEXT,REVIEW_DECISION_TEXT,LAST_UPD_BY,LAST_UPD_TS,READY_VALIDATION_FLAG)
	SELECT vhdramendid,SUBQUES_ID,RR,R,S,now, CASE WHEN RR='Recommendation Review' THEN 1 ELSE NULL END FROM CARS_118_CLONE_AMENDMENT_TEMP WHERE  MODULE_META_ID=12;
	# for new plan and onwards 
	INSERT INTO CARS_118_HDR_SUBQUES_REVIEW(HDR_AMEND_ID, SUBQUES_ID, REVIEW_STATUS_TEXT, LAST_UPD_BY, LAST_UPD_TS,REVIEW_DECISION_TEXT,REVIEW_COMPONENTS_ID_LIST,COMPLIANCE_STATUS_TEXT,WAIVER_TEXT,RECOMMENDATION_FINAL_FLAG)
	SELECT HDR_AMEND_ID, SUBQUES_ID, REVIEW_STATUS_TEXT, LAST_UPD_BY, LAST_UPD_TS
	, CASE WHEN REVIEW_STATUS_TEXT= 'Validation Review' AND REVIEW_DECISION_TEXT <> 'N/A' THEN 'Agree' ELSE REVIEW_DECISION_TEXT END AS REVIEW_DECISION_TEXT
	,REVIEW_COMPONENTS_ID_LIST,COMPLIANCE_STATUS_TEXT,WAIVER_TEXT,RECOMMENDATION_FINAL_FLAG FROM CARS_118_HDR_SUBQUES_REVIEW_TEMP WHERE  MODULE_META_ID<>12;
	
	
	INSERT INTO CARS_118_SUBQUES_AMENDMENT(HDR_AMEND_ID,SUBQUES_ID,IS_AMENDED,AMENDMENT_DUE_TO_COMPLIANCE,EFFECTIVE_DATE,DESCRIPTION,
	LAST_UPD_BY,LAST_UPD_TS)
	SELECT DISTINCT vhdramendid,SUBQUES_ID,0,0,NULL,NULL,
	S,NOW() FROM CARS_118_CLONE_AMENDMENT_TEMP;	
		
	INSERT INTO CARS_118_HDR_ANS(
    HDR_AMEND_ID,
    SUBQUES_RESP_ID,
    ANS_BOOL,
    ANS_INTEGER,
    ANS_DEC,
    ANS_TEXT,
    ANS_DATE,
    ANS_STATUS_TEXT
)

SELECT 
    v_hdramend_id,
    SUBQUES_RESP_ID,
    ANS_BOOL,
    ANS_INTEGER,
    ANS_DEC,
    ANS_TEXT,
    ANS_DATE,
    ANS_STATUS_TEXT
	FROM CARS_118_HDR_ANS
	WHERE HDR_AMEND_ID=i_hdramend_id;
	
	SELECT v_hdramend_id AS 'o_newhdramend_id';

	UPDATE CARS_SP_LOG
		SET SP_STATUS_TEXT= CONCAT('Success. Locks released: ',0), END_TS=NOW()
	WHERE  SP_LOG_ID=( SELECT MAX(SP_LOG_ID) FROM CARS_SP_LOG WHERE SP_NAME='CARS_118_CLONE_AMENDMENT');
	COMMIT;	
	
	

END$$
DELIMITER ;