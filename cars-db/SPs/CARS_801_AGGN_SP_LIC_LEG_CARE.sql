DELIMITER $$
CREATE OR REPLACE PROCEDURE `CARS_801_AGGN_SP_LIC_LEG_CARE`(IN i_aggn_ref_id INTEGER)
proc_label: BEGIN
DECLARE v_rec_cnt INTEGER DEFAULT 0 ;
DECLARE v_total_rows_deleted INTEGER DEFAULT 0; 
DECLARE v_total_rows_inserted INTEGER DEFAULT 0; 
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	    
		GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
		SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
		
		UPDATE CARS_801_SP_LOG
			SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
		WHERE SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_801_SP_LOG WHERE SP_NAME='CARS_801_AGGN_SP_LIC_LEG_CARE');
			
		
	END;
	
		INSERT INTO CARS_801_SP_LOG (SP_NAME, SP_STATUS_TEXT, START_TS)
		VALUES('CARS_801_AGGN_SP_LIC_LEG_CARE', 'Started', NOW());	
		

	SELECT COUNT(*) INTO v_rec_cnt FROM CARS_801_AGGN_REF WHERE  AGGN_REF_ID = i_aggn_ref_id;
 
    
    DELETE FROM CARS_801_AGGN_LIC_LEG_CARE WHERE AGGN_REF_ID=i_aggn_ref_id;
	SET v_total_rows_deleted = ROW_COUNT();

DROP TEMPORARY TABLE IF EXISTS CARS_801_AGGN_SP_LIC_LEG_CARE_TEMP;

CREATE TEMPORARY TABLE CARS_801_AGGN_SP_LIC_LEG_CARE_TEMP AS
SELECT * FROM CARS_801_AGGN_LIC_LEG_CARE LIMIT 0;

ALTER TABLE CARS_801_AGGN_SP_LIC_LEG_CARE_TEMP ADD TOTAL_UNADJ_CHILD_COUNT INTEGER;
ALTER TABLE CARS_801_AGGN_SP_LIC_LEG_CARE_TEMP ADD TOTAL_ADJ_CHILD_COUNT INTEGER;

CREATE OR REPLACE TEMPORARY TABLE PFACTOR AS(SELECT DISTINCT H.ENTITY_ID,R.FISCAL_YEAR,
H.MODULE_HDR_ID,
F.POOLING_FACTOR*.01 AS PFACTOR,
C.CHILD_COUNT,SR.POPULATION_SAMPLE_CODE,
C.POP_SAM_CHILD_COUNT AS CHILD_MO_UNADJ_CNT
FROM CARS_MODULE_PERIOD_HDR H
JOIN CARS_PERIOD P
ON H.PERIOD_ID = P.PERIOD_ID
AND P.801_FLAG=1
JOIN CARS_801_AGGN_REF R
ON CAST(SUBSTR(P.PERIOD_DESC, 5, 4) AS INTEGER) = R.FISCAL_YEAR
AND R.AGGN_REF_ID = i_aggn_ref_id
JOIN CARS_801_REC_COUNTS C
ON H.MODULE_HDR_ID = C.MODULE_HDR_ID
LEFT JOIN VW_CARS_801_POOLING_FACTOR F
ON SUBSTR(P.PERIOD_DESC, 2, 7) = F.PERIOD_DESC
AND H.ENTITY_ID = F.ENTITY_ID
JOIN CARS_801_STATE_REF SR
							ON H.ENTITY_ID = SR.ENTITY_ID
							AND SUBSTR(P.PERIOD_DESC, 5, 4) = SR.FISCAL_YEAR
AND H.ENTITY_ID = F.ENTITY_ID);


CREATE OR REPLACE TEMPORARY TABLE  STATE_COUNT_FISCAL AS(SELECT ENTITY_ID,COUNT(1) AS CNT
FROM PFACTOR
GROUP BY ENTITY_ID);

CREATE OR REPLACE TEMPORARY TABLE BASETBL AS
SELECT 
    H.ENTITY_ID,
    S.CHILD_ID,
	S.CHILD_CARE_TYPE_CD ,
    S.CHILD_CARE_HOURS,
	C.BIRTH_YYYYMM,
	S.MONTHLY_AMOUNT 
FROM PFACTOR H
JOIN CARS_801_CHILD C ON H.MODULE_HDR_ID = C.MODULE_HDR_ID
JOIN `CARS_801_SETTING` S ON C.CHILD_ID=S.CHILD_ID;

CREATE OR REPLACE TEMPORARY TABLE INVALTBL
AS
SELECT
DISTINCT ENTITY_ID,CHILD_ID
FROM BASETBL AS S
WHERE S.CHILD_CARE_TYPE_CD IS NULL OR
		S.CHILD_CARE_TYPE_CD NOT IN('01','02','03','04','05','06','07','08','09','10','11')
        OR S.CHILD_CARE_HOURS IS NULL OR S.MONTHLY_AMOUNT IS NULL;
		
CREATE INDEX IXD ON BASETBL(CHILD_ID);
CREATE INDEX IXT ON INVALTBL(CHILD_ID);

CREATE OR REPLACE TEMPORARY TABLE CTYPES AS
SELECT 
    S.ENTITY_ID,
    S.CHILD_ID,
	S.CHILD_CARE_TYPE_CD ,
    S.CHILD_CARE_HOURS,
	S.BIRTH_YYYYMM,
	S.MONTHLY_AMOUNT
FROM BASETBL S
LEFT JOIN INVALTBL C ON C.CHILD_ID=S.CHILD_ID AND C.CHILD_ID IS NULL;


CREATE OR REPLACE TEMPORARY TABLE INVAL_TBL AS
SELECT A.ENTITY_ID,SUM(A.CNT/B.CNT) AS UNADJ_CNT FROM 
(
SELECT A.ENTITY_ID,CASE WHEN T.POPULATION_SAMPLE_CODE = 'S' THEN (A.CNT/T.CHILD_COUNT) * T.CHILD_MO_UNADJ_CNT ELSE A.CNT END AS CNT
FROM (SELECT 

ENTITY_ID,COUNT(DISTINCT CHILD_ID) AS CNT
FROM INVALTBL
GROUP BY ENTITY_ID
) AS A
         
JOIN PFACTOR AS T ON T.ENTITY_ID=A.ENTITY_ID           
GROUP BY A.ENTITY_ID) AS A
JOIN STATE_COUNT_FISCAL AS B ON A.ENTITY_ID=B.ENTITY_ID  
GROUP BY A.ENTITY_ID;

CREATE OR REPLACE TEMPORARY TABLE UNADJ_TBL AS
SELECT A.ENTITY_ID,A.CHILD_CARE_TYPE_CD,SUM(ROUND(A.CNT/B.CNT,0)) AS UNADJ_CNT 
FROM(
SELECT A.ENTITY_ID,A.CHILD_CARE_TYPE_CD,CASE WHEN T.POPULATION_SAMPLE_CODE = 'S' THEN (A.CNT/T.CHILD_COUNT) * T.CHILD_MO_UNADJ_CNT ELSE A.CNT END AS CNT
FROM(	
SELECT A.ENTITY_ID,B.CHILD_CARE_TYPE_CD,SUM(B.CHILD_CARE_HOURS/A.CC) AS CNT

FROM(
SELECT
    ENTITY_ID,
    CHILD_ID,
    SUM(CHILD_CARE_HOURS) AS CC
FROM CTYPES
GROUP BY ENTITY_ID,CHILD_ID) AS A

    JOIN CTYPES B ON A.CHILD_ID=B.CHILD_ID
    GROUP BY A.ENTITY_ID,B.CHILD_CARE_TYPE_CD) AS A
	 
	JOIN PFACTOR AS T ON T.ENTITY_ID=A.ENTITY_ID
 GROUP BY A.ENTITY_ID,A.CHILD_CARE_TYPE_CD) AS A
 JOIN STATE_COUNT_FISCAL AS B ON A.ENTITY_ID=B.ENTITY_ID
 GROUP BY A.ENTITY_ID,A.CHILD_CARE_TYPE_CD;
 
CREATE OR REPLACE TEMPORARY TABLE ADJCNT AS(SELECT A.ENTITY_ID,CASE WHEN B.PFACTOR IS NOT NULL THEN INV.UNADJ_CNT*B.PFACTOR ELSE NULL END AS INVALID_ADJ_CNT
,CASE WHEN B.PFACTOR IS NOT NULL THEN (IFNULL(R2.UNADJ_CNT,0)+ IFNULL(R3.UNADJ_CNT,0)+IFNULL(R4.UNADJ_CNT,0)+IFNULL(R5.UNADJ_CNT,0)+
IFNULL(R6.UNADJ_CNT,0)+IFNULL(R7.UNADJ_CNT,0)+IFNULL(R8.UNADJ_CNT,0))*B.PFACTOR ELSE NULL END 
AS LEG_CARE_TYPE_ADJ_CNT
,CASE WHEN B.PFACTOR IS NOT NULL THEN (IFNULL(R9.UNADJ_CNT,0) + IFNULL(R10.UNADJ_CNT,0)+ IFNULL(R11.UNADJ_CNT,0)+ 
IFNULL(R12.UNADJ_CNT,0))*B.PFACTOR ELSE NULL END AS LIC_CARE_TYPE_ADJ_CNT
,INV.UNADJ_CNT AS INVALID_UNADJ_CNT
,IFNULL(R2.UNADJ_CNT,0)+ IFNULL(R3.UNADJ_CNT,0)+IFNULL(R4.UNADJ_CNT,0)+IFNULL(R5.UNADJ_CNT,0)+
IFNULL(R6.UNADJ_CNT,0)+IFNULL(R7.UNADJ_CNT,0)+IFNULL(R8.UNADJ_CNT,0) AS LEG_CARE_TYPE_UNADJ_CNT
,IFNULL(R9.UNADJ_CNT,0) + IFNULL(R10.UNADJ_CNT,0)+ IFNULL(R11.UNADJ_CNT,0)+ 
IFNULL(R12.UNADJ_CNT,0) AS LIC_CARE_TYPE_UNADJ_CNT

FROM STATE_COUNT_FISCAL A LEFT JOIN PFACTOR B ON A.ENTITY_ID=B.ENTITY_ID
LEFT JOIN UNADJ_TBL R2 ON R2.ENTITY_ID=A.ENTITY_ID AND R2.CHILD_CARE_TYPE_CD='11'
LEFT JOIN UNADJ_TBL R3 ON R3.ENTITY_ID=A.ENTITY_ID AND R3.CHILD_CARE_TYPE_CD='09'

LEFT JOIN UNADJ_TBL R4 ON R4.ENTITY_ID=A.ENTITY_ID AND R4.CHILD_CARE_TYPE_CD='10'
LEFT JOIN UNADJ_TBL R5 ON R5.ENTITY_ID=A.ENTITY_ID AND R5.CHILD_CARE_TYPE_CD='07'
LEFT JOIN UNADJ_TBL R6 ON R6.ENTITY_ID=A.ENTITY_ID AND R6.CHILD_CARE_TYPE_CD='08'

LEFT JOIN UNADJ_TBL R7 ON R7.ENTITY_ID=A.ENTITY_ID AND R7.CHILD_CARE_TYPE_CD='05'
LEFT JOIN UNADJ_TBL R8 ON R8.ENTITY_ID=A.ENTITY_ID AND R8.CHILD_CARE_TYPE_CD='06'
LEFT JOIN UNADJ_TBL R9 ON R9.ENTITY_ID=A.ENTITY_ID AND R9.CHILD_CARE_TYPE_CD='01'

LEFT JOIN UNADJ_TBL R10 ON R10.ENTITY_ID=A.ENTITY_ID AND R10.CHILD_CARE_TYPE_CD='02'
LEFT JOIN UNADJ_TBL R11 ON R11.ENTITY_ID=A.ENTITY_ID AND R11.CHILD_CARE_TYPE_CD='03'
LEFT JOIN UNADJ_TBL R12 ON R12.ENTITY_ID=A.ENTITY_ID AND R12.CHILD_CARE_TYPE_CD='04'
LEFT JOIN INVAL_TBL INV ON INV.ENTITY_ID=A.ENTITY_ID
GROUP BY A.ENTITY_ID);


INSERT INTO CARS_801_AGGN_SP_LIC_LEG_CARE_TEMP(
    `AGGN_REF_ID`,
    `ENTITY_ID`,
    `ENTITY_NAME`,
    `INVALID_CARE_CHILD_UNADJ_COUNT`,
    `INVALID_CARE_CHILD_ADJ_COUNT`,
    `INVALID_CARE_CHILD_PERCENT`,
    `LICENSED_CARE_CHILD_UNADJ_COUNT`,
    `LICENSED_CARE_CHILD_ADJ_COUNT`,
    `LICENSED_CARE_CHILD_PERCENT`,
    `LEGAL_CARE_CHILD_UNADJ_COUNT`,
    `LEGAL_CARE_CHILD_ADJ_COUNT`,
    `LEGAL_CARE_CHILD_PERCENT`,
	`TOTAL_UNADJ_CHILD_COUNT`,
    `TOTAL_ADJ_CHILD_COUNT`
)	
SELECT i_aggn_ref_id AS AGGN_REF_ID,
A.ENTITY_ID,
E.ENTITY_NAME,
ROUND(A.INVALID_UNADJ_CNT) AS INVALID_CARE_CHILD_UNADJ_COUNT,
ROUND(A.INVALID_ADJ_CNT) AS INVALID_CARE_CHILD_ADJ_COUNT,
NULL AS INVALID_CARE_CHILD_PERCENT,
ROUND(A.LIC_CARE_TYPE_UNADJ_CNT) AS LICENSED_CARE_CHILD_UNADJ_COUNT,
ROUND(A.LIC_CARE_TYPE_ADJ_CNT) AS LICENSED_CARE_CHILD_ADJ_COUNT,
NULL AS LICENSED_CARE_CHILD_PERCENT,
ROUND(A.LEG_CARE_TYPE_UNADJ_CNT) AS LEGAL_CARE_CHILD_UNADJ_COUNT,
ROUND(A.LEG_CARE_TYPE_ADJ_CNT) AS LEGAL_CARE_CHILD_ADJ_COUNT,
NULL AS LEGAL_CARE_CHILD_PERCENT,
IFNULL(INVALID_UNADJ_CNT,0)+IFNULL(LIC_CARE_TYPE_UNADJ_CNT,0)+IFNULL(LEG_CARE_TYPE_UNADJ_CNT,0) AS TOTAL_UNADJ_CHILD_COUNT,
IFNULL(INVALID_ADJ_CNT,0)+IFNULL(LIC_CARE_TYPE_ADJ_CNT,0)+IFNULL(LEG_CARE_TYPE_ADJ_CNT,0) AS TOTAL_ADJ_CHILD_COUNT
FROM ADJCNT AS A
JOIN CARS_ENTITY E
ON A.ENTITY_ID = E.ENTITY_ID AND E.ENTITY_TYPE_CD = 'STATE-TER'
UNION ALL
SELECT
    `AGGN_REF_ID`,
    `ENTITY_ID`,
    `ENTITY_NAME`,
    `INVALID_CARE_CHILD_UNADJ_COUNT`,
    `INVALID_CARE_CHILD_ADJ_COUNT`,
    `INVALID_CARE_CHILD_PERCENT`,
    `LICENSED_CARE_CHILD_UNADJ_COUNT`,
    `LICENSED_CARE_CHILD_ADJ_COUNT`,
    `LICENSED_CARE_CHILD_PERCENT`,
    `LEGAL_CARE_CHILD_UNADJ_COUNT`,
    `LEGAL_CARE_CHILD_ADJ_COUNT`,
    `LEGAL_CARE_CHILD_PERCENT`,
	 NULL AS TOTAL_UNADJ_CHILD_COUNT,
	 NULL AS TOTAL_ADJ_CHILD_COUNT
	FROM
(SELECT i_aggn_ref_id AS AGGN_REF_ID,
0 AS ENTITY_ID,
'National' AS ENTITY_NAME,
ROUND(SUM(COALESCE(INVALID_UNADJ_CNT,0))) AS INVALID_CARE_CHILD_UNADJ_COUNT,
ROUND(SUM(COALESCE(INVALID_ADJ_CNT,0))) AS INVALID_CARE_CHILD_ADJ_COUNT,
NULL AS INVALID_CARE_CHILD_PERCENT,
ROUND(SUM(COALESCE(LIC_CARE_TYPE_UNADJ_CNT,0))) AS LICENSED_CARE_CHILD_UNADJ_COUNT,
ROUND(SUM(COALESCE(LIC_CARE_TYPE_ADJ_CNT,0))) AS LICENSED_CARE_CHILD_ADJ_COUNT,
NULL AS LICENSED_CARE_CHILD_PERCENT,
ROUND(SUM(COALESCE(LEG_CARE_TYPE_UNADJ_CNT,0))) AS LEGAL_CARE_CHILD_UNADJ_COUNT,
ROUND(SUM(COALESCE(LEG_CARE_TYPE_ADJ_CNT,0))) AS LEGAL_CARE_CHILD_ADJ_COUNT,
NULL AS LEGAL_CARE_CHILD_PERCENT,
NULL AS TOTAL_UNADJ_CHILD_COUNT,
NULL AS TOTAL_ADJ_CHILD_COUNT
FROM ADJCNT) AS N;


UPDATE CARS_801_AGGN_SP_LIC_LEG_CARE_TEMP
SET TOTAL_UNADJ_CHILD_COUNT=(SELECT ROUND(SUM(TOTAL_UNADJ_CHILD_COUNT)) FROM CARS_801_AGGN_SP_LIC_LEG_CARE_TEMP WHERE ENTITY_ID!=0),
TOTAL_ADJ_CHILD_COUNT=(SELECT ROUND(SUM(TOTAL_ADJ_CHILD_COUNT)) FROM CARS_801_AGGN_SP_LIC_LEG_CARE_TEMP WHERE ENTITY_ID!=0)
WHERE ENTITY_ID=0;

UPDATE CARS_801_AGGN_SP_LIC_LEG_CARE_TEMP
SET INVALID_CARE_CHILD_PERCENT=CONCAT(ROUND((INVALID_CARE_CHILD_ADJ_COUNT/TOTAL_ADJ_CHILD_COUNT)*100,2),'%'),
LICENSED_CARE_CHILD_PERCENT=CONCAT(ROUND((LICENSED_CARE_CHILD_ADJ_COUNT/TOTAL_ADJ_CHILD_COUNT)*100,2),'%'),
LEGAL_CARE_CHILD_PERCENT=CONCAT(ROUND((LEGAL_CARE_CHILD_ADJ_COUNT/TOTAL_ADJ_CHILD_COUNT)*100,2),'%');

INSERT INTO `CARS_801_AGGN_LIC_LEG_CARE`(
    `AGGN_REF_ID`,
    `ENTITY_ID`,
    `ENTITY_NAME`,
    `INVALID_CARE_CHILD_UNADJ_COUNT`,
    `INVALID_CARE_CHILD_ADJ_COUNT`,
    `INVALID_CARE_CHILD_PERCENT`,
    `LICENSED_CARE_CHILD_UNADJ_COUNT`,
    `LICENSED_CARE_CHILD_ADJ_COUNT`,
    `LICENSED_CARE_CHILD_PERCENT`,
    `LEGAL_CARE_CHILD_UNADJ_COUNT`,
    `LEGAL_CARE_CHILD_ADJ_COUNT`,
    `LEGAL_CARE_CHILD_PERCENT`
)
SELECT
    `AGGN_REF_ID`,
    `ENTITY_ID`,
    `ENTITY_NAME`,
    IFNULL(`INVALID_CARE_CHILD_UNADJ_COUNT`,0),
    IFNULL(`INVALID_CARE_CHILD_ADJ_COUNT`,0),
    `INVALID_CARE_CHILD_PERCENT`,
    IFNULL(`LICENSED_CARE_CHILD_UNADJ_COUNT`,0),
    IFNULL(`LICENSED_CARE_CHILD_ADJ_COUNT`,0),
    `LICENSED_CARE_CHILD_PERCENT`,
    IFNULL(`LEGAL_CARE_CHILD_UNADJ_COUNT`,0),
    IFNULL(`LEGAL_CARE_CHILD_ADJ_COUNT`,0),
    `LEGAL_CARE_CHILD_PERCENT`
FROM CARS_801_AGGN_SP_LIC_LEG_CARE_TEMP
UNION ALL 		SELECT 
           i_aggn_ref_id 
           ,E.ENTITY_ID		   
           ,E.ENTITY_NAME
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL


            FROM CARS_ENTITY E
                LEFT OUTER JOIN CARS_801_AGGN_SP_LIC_LEG_CARE_TEMP C
            ON E.ENTITY_ID = C.ENTITY_ID
            WHERE E.ENTITY_TYPE_CD = 'STATE-TER'
            AND C.ENTITY_ID IS NULL ;


SET v_total_rows_inserted = ROW_COUNT();

DROP TEMPORARY TABLE IF EXISTS CARS_801_AGGN_SP_LIC_LEG_CARE_TEMP;
DROP TEMPORARY TABLE IF EXISTS PFACTOR;
DROP TEMPORARY TABLE IF EXISTS STATE_COUNT_FISCAL;
DROP TEMPORARY TABLE IF EXISTS CTYPES;
DROP TEMPORARY TABLE IF EXISTS INVAL_TBL;
DROP TEMPORARY TABLE IF EXISTS UNADJ_TBL;
DROP TEMPORARY TABLE IF EXISTS ADJCNT;

UPDATE CARS_801_SP_LOG
SET SP_STATUS_TEXT= CONCAT('Success. Rows inserted: ',v_total_rows_inserted, ' Rows Deleted :', v_total_rows_deleted), END_TS=NOW() 
WHERE  SP_LOG_ID=( SELECT MAX(SP_LOG_ID) FROM CARS_801_SP_LOG WHERE SP_NAME ='CARS_801_AGGN_SP_LIC_LEG_CARE');

		
END$$
DELIMITER ;
