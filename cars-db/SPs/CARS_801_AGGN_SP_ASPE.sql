	DROP PROCEDURE IF EXISTS CARS_801_AGGN_SP_ASPE;
	
	DELIMITER $$
	CREATE PROCEDURE CARS_801_AGGN_SP_ASPE( IN i_aggn_ref_id INT)
	BEGIN

	DECLARE v_rec_cnt INTEGER DEFAULT 0 ;
	DECLARE v_total_rows_deleted INTEGER DEFAULT 0; 
	DECLARE v_total_rows_inserted INTEGER DEFAULT 0; 
	DECLARE v_total_national INTEGER DEFAULT 0; 
			DECLARE EXIT HANDLER FOR SQLEXCEPTION
			BEGIN
				GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
				SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
				 
				UPDATE CARS_801_SP_LOG
					SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
				WHERE SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_801_SP_LOG WHERE SP_NAME='CARS_801_AGGN_SP_ASPE' );
				COMMIT;
			END;	
			
		INSERT INTO CARS_801_SP_LOG ( SP_NAME, START_TS)
			VALUES( 'CARS_801_AGGN_SP_ASPE', NOW());	
		
			
			
		SELECT COUNT(*) INTO v_rec_cnt FROM CARS_801_AGGN_ASPE WHERE  AGGN_REF_ID = i_aggn_ref_id;
	 
			DELETE FROM CARS_801_AGGN_ASPE
			WHERE AGGN_REF_ID = i_aggn_ref_id;
			
			SET v_total_rows_deleted = ROW_COUNT();
			
		

DROP TEMPORARY TABLE IF EXISTS CARS_801_AGGN_SP_ASPE_INIT;
CREATE TEMPORARY TABLE CARS_801_AGGN_SP_ASPE_INIT AS  
SELECT
    H.MODULE_HDR_ID, 
	H.ENTITY_NAME, 
	H.ENTITY_ID,
	F.POOLING_FACTOR*.01 AS POOLING_FACTOR,
	R.FISCAL_YEAR, 
	H.FAMILY_COUNT AS FAMILY_HDR_COUNT, 
	C.FAMILY_COUNT AS FAMILY_REC_COUNT,
	SR.POPULATION_SAMPLE_CODE,	
	C.CHILD_COUNT,
C.POP_SAM_CHILD_COUNT AS CHILD_MO_UNADJ_CNT

FROM CARS_MODULE_PERIOD_HDR H
JOIN CARS_PERIOD P
ON H.PERIOD_ID = P.PERIOD_ID
AND 801_FLAG = 1
JOIN CARS_801_AGGN_REF R
ON CAST(SUBSTR(P.PERIOD_DESC, 5, 4) AS INTEGER) = R.FISCAL_YEAR
AND R.AGGN_REF_ID = i_aggn_ref_id
JOIN CARS_801_REC_COUNTS C
ON H.MODULE_HDR_ID = C.MODULE_HDR_ID
JOIN VW_CARS_801_POOLING_FACTOR F
ON SUBSTR(P.PERIOD_DESC, 2, 7) = F.PERIOD_DESC
AND H.ENTITY_ID = F.ENTITY_ID
JOIN CARS_801_STATE_REF SR
ON H.ENTITY_ID = SR.ENTITY_ID
AND SUBSTR(P.PERIOD_DESC, 5, 4) = SR.FISCAL_YEAR
JOIN CARS_ENTITY E
ON H.ENTITY_ID = E.ENTITY_ID
AND E.ENTITY_TYPE_CD = 'STATE-TER' AND E.TER_FLAG <> 1 
;

CREATE OR REPLACE TEMPORARY TABLE  STATE_COUNT_FISCAL AS(SELECT ENTITY_ID,ENTITY_NAME,POPULATION_SAMPLE_CODE,CHILD_MO_UNADJ_CNT,CHILD_COUNT,POOLING_FACTOR,COUNT(1) AS CNT
FROM CARS_801_AGGN_SP_ASPE_INIT
GROUP BY ENTITY_ID);

CREATE OR REPLACE TEMPORARY TABLE CARS_801_AGGN_SP_ASPE_BASE AS
SELECT 
    H.MODULE_HDR_ID,
    H.ENTITY_ID,
	H.ENTITY_NAME,
    S.CHILD_ID,
	S.CHILD_CARE_TYPE_CD ,
    S.CHILD_CARE_HOURS,
	C.BIRTH_YYYYMM,
	F.REP_YYYYMM,
	F.FAMILY_SIZE,
	S.MONTHLY_AMOUNT,
	F.SINGLE_PARENT_CD,
	
	
	C.FAMILY_ID,((SUBSTRING(F.REP_YYYYMM, 1, 4) * 12) + SUBSTRING(F.REP_YYYYMM,5,2)) - ((SUBSTRING(C.BIRTH_YYYYMM, 1, 4) * 12) + SUBSTRING(C.BIRTH_YYYYMM,5,2)) AS AGE_CALC
	FROM CARS_801_AGGN_SP_ASPE_INIT H			
	JOIN CARS_801_FAMILY F
	ON H.MODULE_HDR_ID = F.MODULE_HDR_ID
	JOIN CARS_801_CHILD C
	ON H.MODULE_HDR_ID = C.MODULE_HDR_ID
	AND F.FAMILY_ID = C.FAMILY_ID
	JOIN CARS_801_SETTING S
	ON C.CHILD_ID = S.CHILD_ID
	AND H.MODULE_HDR_ID = S.MODULE_HDR_ID;
	

CREATE OR REPLACE TEMPORARY TABLE CARS_801_AGGN_SP_ASPE_INVALID
AS
SELECT
DISTINCT FAMILY_ID,ENTITY_ID,CHILD_ID,FAMILY_SIZE,SINGLE_PARENT_CD
FROM CARS_801_AGGN_SP_ASPE_BASE AS S
WHERE   S.AGE_CALC < 0 OR S.AGE_CALC>=216;
		
CREATE INDEX IXD ON CARS_801_AGGN_SP_ASPE_BASE(CHILD_ID);
CREATE INDEX IXT ON CARS_801_AGGN_SP_ASPE_INVALID(CHILD_ID);


DROP TEMPORARY TABLE IF EXISTS CARS_801_AGGN_SP_ASPE_VALID;
CREATE TEMPORARY TABLE CARS_801_AGGN_SP_ASPE_VALID AS
SELECT 
    S.MODULE_HDR_ID, 
	S.ENTITY_NAME, 
    S.ENTITY_ID,
    S.CHILD_ID,
	S.CHILD_CARE_TYPE_CD ,
    S.CHILD_CARE_HOURS,
	S.BIRTH_YYYYMM,
	S.MONTHLY_AMOUNT,
	S.FAMILY_ID,
	S.AGE_CALC,
	S.FAMILY_SIZE,
	S.SINGLE_PARENT_CD
FROM CARS_801_AGGN_SP_ASPE_BASE S
LEFT JOIN CARS_801_AGGN_SP_ASPE_INVALID C ON C.CHILD_ID=S.CHILD_ID AND C.CHILD_ID IS NULL;


CREATE OR REPLACE TEMPORARY TABLE CARS_801_AGGN_SP_ASPE_CCOUNTHRS AS
SELECT ENTITY_ID,CHILD_ID,FAMILY_ID,FAMILY_SIZE,SINGLE_PARENT_CD,CNT FROM
(SELECT A.ENTITY_ID,B.CHILD_ID,A.FAMILY_ID,A.FAMILY_SIZE,A.SINGLE_PARENT_CD,SUM(IFNULL(B.CHILD_CARE_HOURS,0)/A.CC) AS CNT
FROM(
SELECT
    ENTITY_ID,
    CHILD_ID,
	FAMILY_ID,
	FAMILY_SIZE,
	SINGLE_PARENT_CD,
    SUM(IFNULL(CHILD_CARE_HOURS,0)) AS CC
FROM CARS_801_AGGN_SP_ASPE_VALID
GROUP BY ENTITY_ID,CHILD_ID) AS A
    JOIN CARS_801_AGGN_SP_ASPE_VALID B ON A.CHILD_ID=B.CHILD_ID
    GROUP BY A.ENTITY_ID,B.CHILD_ID) AS A WHERE CNT IS NOT NULL
UNION ALL
SELECT ENTITY_ID,CHILD_ID,FAMILY_ID,FAMILY_SIZE,SINGLE_PARENT_CD,COUNT(1) AS CNT 
FROM CARS_801_AGGN_SP_ASPE_INVALID
GROUP BY ENTITY_ID,CHILD_ID;
	
CREATE INDEX IX5 ON CARS_801_AGGN_SP_ASPE_CCOUNTHRS (FAMILY_ID);			

CREATE OR REPLACE TEMPORARY TABLE CARS_801_AGGN_SP_ASPE_UNADJ_DATA AS
SELECT
MODULE_HDR_ID, ENTITY_ID, ENTITY_NAME, FAMILY_ID, REASON_CD, TOTAL_MONTHLY_COPAYMENT,SINGLE_PARENT_CD,
MONTHLY_INCOME, FAMILY_SIZE, 
		    FAMILY_SIZE_ERR,
    TOTAL_MONTHLY_COPAYMENT_ERR ,
    MONTHLY_INCOME_ERR,
	CALCFAM,
    POOLING_FACTOR,
	NUM_MONTHS,
	CHILD_MO_UNADJ_CNT,
	CHILD_COUNT,
	POPULATION_SAMPLE_CODE,
	MEDIAN_INCOME,
POVERTY_AVG/12 AS POVERTY_AVG

	FROM 
	(
		SELECT H.MODULE_HDR_ID, H.ENTITY_ID, H.ENTITY_NAME, F.FAMILY_ID, F.REASON_CD, F.TOTAL_MONTHLY_COPAYMENT,
		MONTHLY_INCOME, F.FAMILY_SIZE, SINGLE_PARENT_CD,
		    E.FAMILY_SIZE_ERR,
    E.TOTAL_MONTHLY_COPAYMENT_ERR ,
    E.MONTHLY_INCOME_ERR,
	H.POOLING_FACTOR,
	H.POPULATION_SAMPLE_CODE,
	H.CHILD_MO_UNADJ_CNT,
	H.CHILD_COUNT,
	NUM_MONTHS,
	V.MEDIAN_INCOME,
	CASE WHEN SINGLE_PARENT_CD IS NULL THEN NULL ELSE ROUND(COUNTKIDS,0) END AS CALCFAM,

		CASE 
			WHEN F.FAMILY_SIZE = 1 THEN SIZE_1_AMOUNT
			WHEN F.FAMILY_SIZE = 2 THEN SIZE_2_AMOUNT
			WHEN F.FAMILY_SIZE = 3 THEN SIZE_3_AMOUNT
			WHEN F.FAMILY_SIZE = 4 THEN SIZE_4_AMOUNT
			WHEN F.FAMILY_SIZE = 5 THEN SIZE_5_AMOUNT
			WHEN F.FAMILY_SIZE = 6 THEN SIZE_6_AMOUNT
			WHEN F.FAMILY_SIZE = 7 THEN SIZE_7_AMOUNT
			WHEN F.FAMILY_SIZE = 8 THEN SIZE_8_AMOUNT
			WHEN F.FAMILY_SIZE > 8 THEN SIZE_GE9_AMOUNT
		ELSE NULL END AS POVERTY_AVG
			
		FROM CARS_801_AGGN_SP_ASPE_INIT H 		
		JOIN CARS_801_FAMILY F
		ON H.MODULE_HDR_ID = F.MODULE_HDR_ID
		LEFT OUTER JOIN CARS_801_FAMILY_ERR E
		ON F.FAMILY_ID = E.FAMILY_ID
		LEFT JOIN(SELECT C.ENTITY_ID, C.FAMILY_ID,NUM_MONTHS,CASE WHEN SINGLE_PARENT_CD=1 THEN CNT+1 WHEN SINGLE_PARENT_CD=0 THEN CNT+2 ELSE CNT END AS COUNTKIDS
        FROM(SELECT A.ENTITY_ID,A.FAMILY_ID,SINGLE_PARENT_CD,T.CNT AS NUM_MONTHS,SUM(A.CNT) AS CNT
FROM CARS_801_AGGN_SP_ASPE_CCOUNTHRS AS A
	 
	JOIN STATE_COUNT_FISCAL AS T ON T.ENTITY_ID=A.ENTITY_ID
	GROUP BY A.ENTITY_ID,A.FAMILY_ID) AS C

	) AS CC ON CC.FAMILY_ID=F.FAMILY_ID

		JOIN CARS_801_POVERTY_THRESH V
		ON SUBSTR(F.REP_YYYYMM, 1, 4) = V.CALENDAR_YEAR
	) C
;

ALTER TABLE CARS_801_AGGN_SP_ASPE_UNADJ_DATA ADD VALIDFAM INTEGER;
ALTER TABLE CARS_801_AGGN_SP_ASPE_UNADJ_DATA ADD EXCEED INTEGER;
ALTER TABLE CARS_801_AGGN_SP_ASPE_UNADJ_DATA ADD PCT_POV DECIMAL(6,2);
ALTER TABLE CARS_801_AGGN_SP_ASPE_UNADJ_DATA ADD POV_CAT INTEGER;

CREATE INDEX IX1 ON CARS_801_AGGN_SP_ASPE_UNADJ_DATA (SINGLE_PARENT_CD,REASON_CD);

UPDATE CARS_801_AGGN_SP_ASPE_UNADJ_DATA
SET VALIDFAM=1
WHERE SINGLE_PARENT_CD IN (0,1) AND FAMILY_SIZE_ERR IS NULL AND REASON_CD IN (1,2,3,5,6,7,8) AND CALCFAM <= FAMILY_SIZE;

UPDATE CARS_801_AGGN_SP_ASPE_UNADJ_DATA
SET VALIDFAM=-1
WHERE SINGLE_PARENT_CD IN (0,1) AND FAMILY_SIZE_ERR IS NULL AND REASON_CD IN (1,2,3,5,6,7,8) AND CALCFAM > FAMILY_SIZE;

UPDATE CARS_801_AGGN_SP_ASPE_UNADJ_DATA
SET VALIDFAM=-1
WHERE SINGLE_PARENT_CD IS NULL OR FAMILY_SIZE_ERR IS NOT NULL OR REASON_CD IS NULL;

UPDATE CARS_801_AGGN_SP_ASPE_UNADJ_DATA
SET VALIDFAM=0
WHERE SINGLE_PARENT_CD=9 OR REASON_CD IN (4,9);


CREATE INDEX IX2 ON CARS_801_AGGN_SP_ASPE_UNADJ_DATA (VALIDFAM,MONTHLY_INCOME);

UPDATE CARS_801_AGGN_SP_ASPE_UNADJ_DATA
SET EXCEED=1
WHERE VALIDFAM=1 AND MONTHLY_INCOME>MEDIAN_INCOME;

UPDATE CARS_801_AGGN_SP_ASPE_UNADJ_DATA
SET EXCEED=0
WHERE VALIDFAM=1 AND MONTHLY_INCOME<MEDIAN_INCOME;


UPDATE CARS_801_AGGN_SP_ASPE_UNADJ_DATA
SET EXCEED=NULL
WHERE VALIDFAM=1 AND MONTHLY_INCOME IS NULL;

UPDATE CARS_801_AGGN_SP_ASPE_UNADJ_DATA
SET EXCEED=-1
WHERE VALIDFAM=-1;

UPDATE CARS_801_AGGN_SP_ASPE_UNADJ_DATA
SET EXCEED=-2
WHERE VALIDFAM=0;

CREATE INDEX IX3 ON CARS_801_AGGN_SP_ASPE_UNADJ_DATA (EXCEED,PCT_POV);

UPDATE CARS_801_AGGN_SP_ASPE_UNADJ_DATA
SET PCT_POV=ROUND(MONTHLY_INCOME/POVERTY_AVG,2)
WHERE EXCEED=0 AND MONTHLY_INCOME>=0;

UPDATE CARS_801_AGGN_SP_ASPE_UNADJ_DATA 
SET POV_CAT= CASE WHEN EXCEED=-2 THEN 2
WHEN EXCEED=0 AND MONTHLY_INCOME=0 THEN 3
WHEN EXCEED=0 AND PCT_POV>0 AND PCT_POV<.25 THEN 4
WHEN EXCEED=0 AND PCT_POV>=.25 AND PCT_POV<.50 THEN 5
WHEN EXCEED=0 AND PCT_POV>=.50 AND PCT_POV<.75 THEN 6
WHEN EXCEED=0 AND PCT_POV>=.75 AND PCT_POV<1 THEN 7
WHEN EXCEED=0 AND PCT_POV>=1 AND PCT_POV<1.25 THEN 8
WHEN EXCEED=0 AND PCT_POV>=1.25 AND PCT_POV<1.50 THEN 9
WHEN EXCEED=0 AND PCT_POV>=1.50 AND PCT_POV<1.75 THEN 10
WHEN EXCEED=0 AND PCT_POV>=1.75 AND PCT_POV<2.00 THEN 11
WHEN EXCEED=0 AND PCT_POV>=2.00 AND PCT_POV<2.25 THEN 12
WHEN EXCEED=0 AND PCT_POV>=2.25 AND PCT_POV<2.50 THEN 13
WHEN EXCEED=0 AND PCT_POV>=2.50 AND PCT_POV<3.00 THEN 14
WHEN EXCEED=0 AND PCT_POV>=3.00 THEN 15
WHEN EXCEED IS NULL OR EXCEED IN (-1,1) THEN 1 ELSE NULL END;


CREATE OR REPLACE TEMPORARY TABLE CARS_801_AGGN_SP_ASPE_PRE_OUT AS
SELECT A.*,B.CHILD_ID,B.AGE_GROUP_TEXT FROM CARS_801_AGGN_SP_ASPE_UNADJ_DATA AS A 
JOIN (
SELECT  FAMILY_ID,CHILD_ID,CHILD_CARE_HOURS,	CASE 
		WHEN AGE_CALC BETWEEN 0 AND 11 THEN '>=0 & <1'
		WHEN AGE_CALC BETWEEN 12 AND 23 THEN '>=1 & <2'
		WHEN AGE_CALC BETWEEN 24 AND 35 THEN '>=2 & <3'
		WHEN AGE_CALC BETWEEN 36 AND 47 THEN '>=3 & <4'
		WHEN AGE_CALC BETWEEN 48 AND 59 THEN '>=4 & <5'
		WHEN AGE_CALC BETWEEN 60 AND 71 THEN '>=5 & <6'		
		WHEN AGE_CALC BETWEEN 72 AND 83 THEN '>=6 & <7'
		WHEN AGE_CALC BETWEEN 84 AND 95 THEN '>=7 & <8'
		WHEN AGE_CALC BETWEEN 96 AND 107 THEN '>=8 & <9'
		WHEN AGE_CALC BETWEEN 108 AND 119 THEN '>=9 & <10'
		WHEN AGE_CALC BETWEEN 120 AND 131 THEN '>=10 & <11'
		WHEN AGE_CALC BETWEEN 132 AND 143 THEN '>=11 & <12'														
		WHEN AGE_CALC BETWEEN 144 AND 155 THEN '>=12 & <13'
		WHEN AGE_CALC >= 156 AND AGE_CALC<216 THEN '>=13'
		ELSE 'Invalid/not reported' END AS AGE_GROUP_TEXT
FROM CARS_801_AGGN_SP_ASPE_VALID
UNION ALL
SELECT FAMILY_ID,CHILD_ID,NULL,'Invalid/not reported'
FROM CARS_801_AGGN_SP_ASPE_INVALID
) AS B ON A.FAMILY_ID=B.FAMILY_ID;

CREATE OR REPLACE TEMPORARY TABLE CARS_801_AGGN_SP_ASPE_UNADJ_TBL AS 
SELECT A.*,SUM((CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (B.CNT/CHILD_COUNT) * CHILD_MO_UNADJ_CNT ELSE B.CNT END)/A.NUM_MONTHS) AS UNADJ_CNT FROM CARS_801_AGGN_SP_ASPE_PRE_OUT AS A 
JOIN  (SELECT DISTINCT FAMILY_ID,CHILD_ID,CNT FROM CARS_801_AGGN_SP_ASPE_CCOUNTHRS) AS B ON A.FAMILY_ID=B.FAMILY_ID AND A.CHILD_ID=B.CHILD_ID
GROUP BY A.ENTITY_ID,A.POV_CAT,A.AGE_GROUP_TEXT;

CREATE INDEX IX4 ON CARS_801_AGGN_SP_ASPE_UNADJ_TBL (ENTITY_ID,POV_CAT,AGE_GROUP_TEXT);

DROP TEMPORARY TABLE IF EXISTS CARS_801_AGGN_SP_ASPE_FINAL;
CREATE TEMPORARY TABLE CARS_801_AGGN_SP_ASPE_FINAL AS
SELECT A.ENTITY_ID
,A.AGE_GROUP_TEXT
,A.ENTITY_NAME
,INV.UNADJ_CNT*A.POOLING_FACTOR AS INVALID_CHILD_ADJ_COUNT
,PROT_SRVC.UNADJ_CNT*A.POOLING_FACTOR AS PROTECTIVE_SERVICES_CHILD_ADJ_COUNT
,I0.UNADJ_CNT*A.POOLING_FACTOR AS INCOME_0_CHILD_ADJ_COUNT
,I25.UNADJ_CNT*A.POOLING_FACTOR AS INCOME_POVERTY_0_TO_25_CHILD_ADJ_COUNT
,I50.UNADJ_CNT*A.POOLING_FACTOR AS INCOME_POVERTY_25_TO_50_CHILD_ADJ_COUNT
,I75.UNADJ_CNT*A.POOLING_FACTOR AS INCOME_POVERTY_50_TO_75_CHILD_ADJ_COUNT
,I100.UNADJ_CNT*A.POOLING_FACTOR AS INCOME_POVERTY_75_TO_100_CHILD_ADJ_COUNT
,I125.UNADJ_CNT*A.POOLING_FACTOR AS INCOME_POVERTY_100_TO_125_CHILD_ADJ_COUNT
,I150.UNADJ_CNT*A.POOLING_FACTOR AS INCOME_POVERTY_125_TO_150_CHILD_ADJ_COUNT

,I175.UNADJ_CNT*A.POOLING_FACTOR AS INCOME_POVERTY_150_TO_175_CHILD_ADJ_COUNT
,I200.UNADJ_CNT*A.POOLING_FACTOR AS INCOME_POVERTY_175_TO_200_CHILD_ADJ_COUNT
,I225.UNADJ_CNT*A.POOLING_FACTOR AS INCOME_POVERTY_200_TO_225_CHILD_ADJ_COUNT
,I250.UNADJ_CNT*A.POOLING_FACTOR AS INCOME_POVERTY_225_TO_250_CHILD_ADJ_COUNT

,I300.UNADJ_CNT*A.POOLING_FACTOR AS INCOME_POVERTY_250_TO_300_CHILD_ADJ_COUNT
,IGE300.UNADJ_CNT*A.POOLING_FACTOR AS INCOME_POVERTY_GE_300_CHILD_ADJ_COUNT


,INV.UNADJ_CNT AS INVALID_CHILD_UNADJ_COUNT
,PROT_SRVC.UNADJ_CNT AS PROTECTIVE_SERVICES_CHILD_UNADJ_COUNT
,I0.UNADJ_CNT AS INCOME_0_CHILD_UNADJ_COUNT
,I25.UNADJ_CNT AS INCOME_POVERTY_0_TO_25_CHILD_UNADJ_COUNT
,I50.UNADJ_CNT AS INCOME_POVERTY_25_TO_50_CHILD_UNADJ_COUNT
,I75.UNADJ_CNT AS INCOME_POVERTY_50_TO_75_CHILD_UNADJ_COUNT
,I100.UNADJ_CNT AS INCOME_POVERTY_75_TO_100_CHILD_UNADJ_COUNT
,I125.UNADJ_CNT AS INCOME_POVERTY_100_TO_125_CHILD_UNADJ_COUNT
,I150.UNADJ_CNT AS INCOME_POVERTY_125_TO_150_CHILD_UNADJ_COUNT

,I175.UNADJ_CNT AS INCOME_POVERTY_150_TO_175_CHILD_UNADJ_COUNT
,I200.UNADJ_CNT AS INCOME_POVERTY_175_TO_200_CHILD_UNADJ_COUNT
,I225.UNADJ_CNT AS INCOME_POVERTY_200_TO_225_CHILD_UNADJ_COUNT
,I250.UNADJ_CNT AS INCOME_POVERTY_225_TO_250_CHILD_UNADJ_COUNT
,I300.UNADJ_CNT AS INCOME_POVERTY_250_TO_300_CHILD_UNADJ_COUNT
,IGE300.UNADJ_CNT AS INCOME_POVERTY_GE_300_CHILD_UNADJ_COUNT

FROM CARS_801_AGGN_SP_ASPE_UNADJ_TBL A 
LEFT JOIN CARS_801_AGGN_SP_ASPE_UNADJ_TBL I0 ON I0.ENTITY_ID=A.ENTITY_ID AND I0.POV_CAT=3 AND A.AGE_GROUP_TEXT=I0.AGE_GROUP_TEXT
LEFT JOIN CARS_801_AGGN_SP_ASPE_UNADJ_TBL I25 ON I25.ENTITY_ID=A.ENTITY_ID AND I25.POV_CAT=4 AND A.AGE_GROUP_TEXT=I25.AGE_GROUP_TEXT

LEFT JOIN CARS_801_AGGN_SP_ASPE_UNADJ_TBL I50 ON I50.ENTITY_ID=A.ENTITY_ID AND I50.POV_CAT=5 AND A.AGE_GROUP_TEXT=I50.AGE_GROUP_TEXT
LEFT JOIN CARS_801_AGGN_SP_ASPE_UNADJ_TBL I75 ON I75.ENTITY_ID=A.ENTITY_ID AND I75.POV_CAT=6 AND A.AGE_GROUP_TEXT=I75.AGE_GROUP_TEXT
LEFT JOIN CARS_801_AGGN_SP_ASPE_UNADJ_TBL I100 ON I100.ENTITY_ID=A.ENTITY_ID AND I100.POV_CAT=7 AND A.AGE_GROUP_TEXT=I100.AGE_GROUP_TEXT

LEFT JOIN CARS_801_AGGN_SP_ASPE_UNADJ_TBL I125 ON I125.ENTITY_ID=A.ENTITY_ID AND I125.POV_CAT=8 AND A.AGE_GROUP_TEXT=I125.AGE_GROUP_TEXT
LEFT JOIN CARS_801_AGGN_SP_ASPE_UNADJ_TBL I150 ON I150.ENTITY_ID=A.ENTITY_ID AND I150.POV_CAT=9 AND A.AGE_GROUP_TEXT=I150.AGE_GROUP_TEXT
LEFT JOIN CARS_801_AGGN_SP_ASPE_UNADJ_TBL I175 ON I175.ENTITY_ID=A.ENTITY_ID AND I175.POV_CAT=10 AND A.AGE_GROUP_TEXT=I175.AGE_GROUP_TEXT

LEFT JOIN CARS_801_AGGN_SP_ASPE_UNADJ_TBL I200 ON I200.ENTITY_ID=A.ENTITY_ID AND I200.POV_CAT=11 AND A.AGE_GROUP_TEXT=I200.AGE_GROUP_TEXT
LEFT JOIN CARS_801_AGGN_SP_ASPE_UNADJ_TBL I225 ON I225.ENTITY_ID=A.ENTITY_ID AND I225.POV_CAT=12 AND A.AGE_GROUP_TEXT=I225.AGE_GROUP_TEXT
LEFT JOIN CARS_801_AGGN_SP_ASPE_UNADJ_TBL I250 ON I250.ENTITY_ID=A.ENTITY_ID AND I250.POV_CAT=13 AND A.AGE_GROUP_TEXT=I250.AGE_GROUP_TEXT
LEFT JOIN CARS_801_AGGN_SP_ASPE_UNADJ_TBL I300 ON I300.ENTITY_ID=A.ENTITY_ID AND I300.POV_CAT=14 AND A.AGE_GROUP_TEXT=I300.AGE_GROUP_TEXT
LEFT JOIN CARS_801_AGGN_SP_ASPE_UNADJ_TBL IGE300 ON IGE300.ENTITY_ID=A.ENTITY_ID AND IGE300.POV_CAT=15 AND A.AGE_GROUP_TEXT=IGE300.AGE_GROUP_TEXT
LEFT JOIN CARS_801_AGGN_SP_ASPE_UNADJ_TBL PROT_SRVC ON PROT_SRVC.ENTITY_ID=A.ENTITY_ID AND PROT_SRVC.POV_CAT=2 AND A.AGE_GROUP_TEXT=PROT_SRVC.AGE_GROUP_TEXT

LEFT JOIN CARS_801_AGGN_SP_ASPE_UNADJ_TBL INV ON INV.ENTITY_ID=A.ENTITY_ID AND INV.POV_CAT=1 AND A.AGE_GROUP_TEXT=INV.AGE_GROUP_TEXT
GROUP BY A.ENTITY_ID,A.AGE_GROUP_TEXT;


DROP TEMPORARY TABLE IF EXISTS CARS_801_AGGN_ASPE_TEMP;
CREATE TEMPORARY TABLE CARS_801_AGGN_ASPE_TEMP AS 
SELECT i_aggn_ref_id AS AGGN_REF_ID,
A.ENTITY_ID,
A.AGE_GROUP_TEXT,
A.ENTITY_NAME,
A.INCOME_0_CHILD_UNADJ_COUNT AS INCOME_0_CHILD_UNADJ_COUNT,
A.INCOME_0_CHILD_ADJ_COUNT AS INCOME_0_CHILD_ADJ_COUNT,
CAST(0.00 AS DECIMAL(6,2)) AS  INCOME_0_CHILD_PERCENT,
A.INCOME_POVERTY_0_TO_25_CHILD_UNADJ_COUNT AS INCOME_POVERTY_0_TO_25_CHILD_UNADJ_COUNT,
A.INCOME_POVERTY_0_TO_25_CHILD_ADJ_COUNT AS INCOME_POVERTY_0_TO_25_CHILD_ADJ_COUNT,
CAST(0.00 AS DECIMAL(6,2)) AS  INCOME_POVERTY_0_TO_25_CHILD_PERCENT,
A.INCOME_POVERTY_25_TO_50_CHILD_UNADJ_COUNT AS INCOME_POVERTY_25_TO_50_CHILD_UNADJ_COUNT,
A.INCOME_POVERTY_25_TO_50_CHILD_ADJ_COUNT AS INCOME_POVERTY_25_TO_50_CHILD_ADJ_COUNT,
CAST(0.00 AS DECIMAL(6,2)) AS  INCOME_POVERTY_25_TO_50_CHILD_PERCENT,
A.INCOME_POVERTY_50_TO_75_CHILD_UNADJ_COUNT AS INCOME_POVERTY_50_TO_75_CHILD_UNADJ_COUNT,
A.INCOME_POVERTY_50_TO_75_CHILD_ADJ_COUNT AS INCOME_POVERTY_50_TO_75_CHILD_ADJ_COUNT,
CAST(0.00 AS DECIMAL(6,2)) AS  INCOME_POVERTY_50_TO_75_CHILD_PERCENT,
A.INCOME_POVERTY_75_TO_100_CHILD_UNADJ_COUNT AS INCOME_POVERTY_75_TO_100_CHILD_UNADJ_COUNT,
A.INCOME_POVERTY_75_TO_100_CHILD_ADJ_COUNT AS INCOME_POVERTY_75_TO_100_CHILD_ADJ_COUNT,
CAST(0.00 AS DECIMAL(6,2)) AS  INCOME_POVERTY_75_TO_100_CHILD_PERCENT,
A.INCOME_POVERTY_100_TO_125_CHILD_UNADJ_COUNT AS INCOME_POVERTY_100_TO_125_CHILD_UNADJ_COUNT,
A.INCOME_POVERTY_100_TO_125_CHILD_ADJ_COUNT AS INCOME_POVERTY_100_TO_125_CHILD_ADJ_COUNT,
CAST(0.00 AS DECIMAL(6,2)) AS  INCOME_POVERTY_100_TO_125_CHILD_PERCENT,
A.INCOME_POVERTY_125_TO_150_CHILD_UNADJ_COUNT AS INCOME_POVERTY_125_TO_150_CHILD_UNADJ_COUNT,
A.INCOME_POVERTY_125_TO_150_CHILD_ADJ_COUNT AS INCOME_POVERTY_125_TO_150_CHILD_ADJ_COUNT,
CAST(0.00 AS DECIMAL(6,2)) AS  INCOME_POVERY_125_TO_150_CHILD_PERCENT,
A.INCOME_POVERTY_150_TO_175_CHILD_UNADJ_COUNT AS INCOME_POVERTY_150_TO_175_CHILD_UNADJ_COUNT,
A.INCOME_POVERTY_150_TO_175_CHILD_ADJ_COUNT AS INCOME_POVERTY_150_TO_175_CHILD_ADJ_COUNT,
CAST(0.00 AS DECIMAL(6,2)) AS  INCOME_POVERTY_150_TO_175_CHILD_PERCENT,
A.INCOME_POVERTY_175_TO_200_CHILD_UNADJ_COUNT AS INCOME_POVERTY_175_TO_200_CHILD_UNADJ_COUNT,
A.INCOME_POVERTY_175_TO_200_CHILD_ADJ_COUNT AS INCOME_POVERTY_175_TO_200_CHILD_ADJ_COUNT,
CAST(0.00 AS DECIMAL(6,2)) AS  INCOME_POVERTY_175_TO_200_CHILD_PERCENT,
A.INCOME_POVERTY_200_TO_225_CHILD_UNADJ_COUNT AS INCOME_POVERTY_200_TO_225_CHILD_UNADJ_COUNT,
A.INCOME_POVERTY_200_TO_225_CHILD_ADJ_COUNT AS INCOME_POVERTY_200_TO_225_CHILD_ADJ_COUNT,
CAST(0.00 AS DECIMAL(6,2)) AS  INCOME_POVERTY_200_TO_225_CHILD_PERCENT,
A.INCOME_POVERTY_225_TO_250_CHILD_UNADJ_COUNT AS INCOME_POVERTY_225_TO_250_CHILD_UNADJ_COUNT,
A.INCOME_POVERTY_225_TO_250_CHILD_ADJ_COUNT AS INCOME_POVERTY_225_TO_250_CHILD_ADJ_COUNT,
CAST(0.00 AS DECIMAL(6,2)) AS  INCOME_POVERTY_225_TO_250_CHILD_PERCENT,

A.INCOME_POVERTY_250_TO_300_CHILD_UNADJ_COUNT AS INCOME_POVERTY_250_TO_300_CHILD_UNADJ_COUNT,
A.INCOME_POVERTY_250_TO_300_CHILD_ADJ_COUNT AS INCOME_POVERTY_250_TO_300_CHILD_ADJ_COUNT,
CAST(0.00 AS DECIMAL(6,2)) AS  INCOME_POVERTY_250_TO_300_CHILD_PERCENT,

A.INCOME_POVERTY_GE_300_CHILD_UNADJ_COUNT AS INCOME_POVERTY_GE_300_CHILD_UNADJ_COUNT,
A.INCOME_POVERTY_GE_300_CHILD_ADJ_COUNT AS INCOME_POVERTY_GE_300_CHILD_ADJ_COUNT,
CAST(0.00 AS DECIMAL(6,2)) AS  INCOME_POVERTY_GE_300_CHILD_PERCENT,

A.INVALID_CHILD_UNADJ_COUNT AS INVALID_UNADJ_CHILD_COUNT,
A.INVALID_CHILD_ADJ_COUNT AS INVALID_ADJ_CHILD_COUNT,
CAST(0.00 AS DECIMAL(6,2)) AS  INVALID_CHILD_PERCENT,

A.PROTECTIVE_SERVICES_CHILD_UNADJ_COUNT AS PROTECTIVE_SERVICES_CHILD_UNADJ_COUNT,
A.PROTECTIVE_SERVICES_CHILD_ADJ_COUNT AS PROTECTIVE_SERVICES_CHILD_ADJ_COUNT,
CAST(0.00 AS DECIMAL(6,2)) AS  PROTECTIVE_SERVICES_CHILD_PERCENT

,(IFNULL(INCOME_0_CHILD_UNADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_0_TO_25_CHILD_UNADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_25_TO_50_CHILD_UNADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_50_TO_75_CHILD_UNADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_75_TO_100_CHILD_UNADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_100_TO_125_CHILD_UNADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_125_TO_150_CHILD_UNADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_150_TO_175_CHILD_UNADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_175_TO_200_CHILD_UNADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_200_TO_225_CHILD_UNADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_225_TO_250_CHILD_UNADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_250_TO_300_CHILD_UNADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_GE_300_CHILD_UNADJ_COUNT,0) +
IFNULL(INVALID_CHILD_UNADJ_COUNT,0) +
IFNULL(PROTECTIVE_SERVICES_CHILD_UNADJ_COUNT,0)
)

 AS TOTAL_CHILD_UNADJ_COUNT
 
,(IFNULL(INCOME_0_CHILD_ADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_0_TO_25_CHILD_ADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_25_TO_50_CHILD_ADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_50_TO_75_CHILD_ADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_75_TO_100_CHILD_ADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_100_TO_125_CHILD_ADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_125_TO_150_CHILD_ADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_150_TO_175_CHILD_ADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_175_TO_200_CHILD_ADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_200_TO_225_CHILD_ADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_225_TO_250_CHILD_ADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_250_TO_300_CHILD_ADJ_COUNT,0) +
IFNULL(INCOME_POVERTY_GE_300_CHILD_ADJ_COUNT,0) +
IFNULL(INVALID_CHILD_ADJ_COUNT,0) +
IFNULL(PROTECTIVE_SERVICES_CHILD_ADJ_COUNT,0)
)

AS TOTAL_CHILD_ADJ_COUNT,
CAST(0.00 AS DECIMAL(6,2)) AS TOTAL_CHILD_PERCENT
FROM CARS_801_AGGN_SP_ASPE_FINAL AS A GROUP BY A.ENTITY_ID,A.AGE_GROUP_TEXT
UNION ALL
SELECT
    AGGN_REF_ID,
    ENTITY_ID,
    AGE_GROUP_TEXT,
    ENTITY_NAME,
    INCOME_0_CHILD_UNADJ_COUNT,
    INCOME_0_CHILD_ADJ_COUNT,
    INCOME_0_CHILD_PERCENT,
    INCOME_POVERTY_0_TO_25_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_0_TO_25_CHILD_ADJ_COUNT,
    INCOME_POVERTY_0_TO_25_CHILD_PERCENT,
    INCOME_POVERTY_25_TO_50_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_25_TO_50_CHILD_ADJ_COUNT,
    INCOME_POVERTY_25_TO_50_CHILD_PERCENT,
    INCOME_POVERTY_50_TO_75_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_50_TO_75_CHILD_ADJ_COUNT,
    INCOME_POVERTY_50_TO_75_CHILD_PERCENT,
    INCOME_POVERTY_75_TO_100_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_75_TO_100_CHILD_ADJ_COUNT,
    INCOME_POVERTY_75_TO_100_CHILD_PERCENT,
    INCOME_POVERTY_100_TO_125_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_100_TO_125_CHILD_ADJ_COUNT,
    INCOME_POVERTY_100_TO_125_CHILD_PERCENT,
    INCOME_POVERTY_125_TO_150_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_125_TO_150_CHILD_ADJ_COUNT,
    INCOME_POVERY_125_TO_150_CHILD_PERCENT,
    INCOME_POVERTY_150_TO_175_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_150_TO_175_CHILD_ADJ_COUNT,
    INCOME_POVERTY_150_TO_175_CHILD_PERCENT,
    INCOME_POVERTY_175_TO_200_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_175_TO_200_CHILD_ADJ_COUNT,
    INCOME_POVERTY_175_TO_200_CHILD_PERCENT,
    INCOME_POVERTY_200_TO_225_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_200_TO_225_CHILD_ADJ_COUNT,
    INCOME_POVERTY_200_TO_225_CHILD_PERCENT,
    INCOME_POVERTY_225_TO_250_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_225_TO_250_CHILD_ADJ_COUNT,
    INCOME_POVERTY_225_TO_250_CHILD_PERCENT,
    INCOME_POVERTY_250_TO_300_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_250_TO_300_CHILD_ADJ_COUNT,
    INCOME_POVERTY_250_TO_300_CHILD_PERCENT,
    INCOME_POVERTY_GE_300_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_GE_300_CHILD_ADJ_COUNT,
    INCOME_POVERTY_GE_300_CHILD_PERCENT,	
	INVALID_CHILD_UNADJ_COUNT,
	INVALID_CHILD_ADJ_COUNT,
	INVALID_CHILD_PERCENT,
	PROTECTIVE_SERVICES_CHILD_UNADJ_COUNT,
	PROTECTIVE_SERVICES_CHILD_ADJ_COUNT,
	PROTECTIVE_SERVICES_CHILD_PERCENT,	
    TOTAL_UNADJ_CHILD_COUNT,
    TOTAL_ADJ_CHILD_COUNT,
    TOTAL_CHILD_PERCENT
	FROM
(SELECT i_aggn_ref_id AS AGGN_REF_ID,
0 AS ENTITY_ID,
A.AGE_GROUP_TEXT,
'National' AS ENTITY_NAME,
SUM(IFNULL(A.INCOME_0_CHILD_UNADJ_COUNT,0)) AS INCOME_0_CHILD_UNADJ_COUNT,
SUM(IFNULL(A.INCOME_0_CHILD_ADJ_COUNT,0)) AS INCOME_0_CHILD_ADJ_COUNT,
0.00 AS  INCOME_0_CHILD_PERCENT,
SUM(IFNULL(A.INCOME_POVERTY_0_TO_25_CHILD_UNADJ_COUNT,0)) AS INCOME_POVERTY_0_TO_25_CHILD_UNADJ_COUNT,
SUM(IFNULL(A.INCOME_POVERTY_0_TO_25_CHILD_ADJ_COUNT,0)) AS INCOME_POVERTY_0_TO_25_CHILD_ADJ_COUNT,
0.00 AS  INCOME_POVERTY_0_TO_25_CHILD_PERCENT,
SUM(IFNULL(A.INCOME_POVERTY_25_TO_50_CHILD_UNADJ_COUNT,0)) AS INCOME_POVERTY_25_TO_50_CHILD_UNADJ_COUNT,
SUM(IFNULL(A.INCOME_POVERTY_25_TO_50_CHILD_ADJ_COUNT,0)) AS INCOME_POVERTY_25_TO_50_CHILD_ADJ_COUNT,
0.00 AS  INCOME_POVERTY_25_TO_50_CHILD_PERCENT,
SUM(IFNULL(A.INCOME_POVERTY_50_TO_75_CHILD_UNADJ_COUNT,0)) AS INCOME_POVERTY_50_TO_75_CHILD_UNADJ_COUNT,
SUM(IFNULL(A.INCOME_POVERTY_50_TO_75_CHILD_ADJ_COUNT,0)) AS INCOME_POVERTY_50_TO_75_CHILD_ADJ_COUNT,
0.00 AS  INCOME_POVERTY_50_TO_75_CHILD_PERCENT,
SUM(IFNULL(A.INCOME_POVERTY_75_TO_100_CHILD_UNADJ_COUNT,0)) AS INCOME_POVERTY_75_TO_100_CHILD_UNADJ_COUNT,
SUM(IFNULL(A.INCOME_POVERTY_75_TO_100_CHILD_ADJ_COUNT,0)) AS INCOME_POVERTY_75_TO_100_CHILD_ADJ_COUNT,
0.00 AS  INCOME_POVERTY_75_TO_100_CHILD_PERCENT,
SUM(IFNULL(A.INCOME_POVERTY_100_TO_125_CHILD_UNADJ_COUNT,0)) AS INCOME_POVERTY_100_TO_125_CHILD_UNADJ_COUNT,
SUM(IFNULL(A.INCOME_POVERTY_100_TO_125_CHILD_ADJ_COUNT,0)) AS INCOME_POVERTY_100_TO_125_CHILD_ADJ_COUNT,
0.00 AS  INCOME_POVERTY_100_TO_125_CHILD_PERCENT,
SUM(IFNULL(A.INCOME_POVERTY_125_TO_150_CHILD_UNADJ_COUNT,0)) AS INCOME_POVERTY_125_TO_150_CHILD_UNADJ_COUNT,
SUM(IFNULL(A.INCOME_POVERTY_125_TO_150_CHILD_ADJ_COUNT,0)) AS INCOME_POVERTY_125_TO_150_CHILD_ADJ_COUNT,
0.00 AS  INCOME_POVERY_125_TO_150_CHILD_PERCENT,
SUM(IFNULL(A.INCOME_POVERTY_150_TO_175_CHILD_UNADJ_COUNT,0)) AS INCOME_POVERTY_150_TO_175_CHILD_UNADJ_COUNT,
SUM(IFNULL(A.INCOME_POVERTY_150_TO_175_CHILD_ADJ_COUNT,0)) AS INCOME_POVERTY_150_TO_175_CHILD_ADJ_COUNT,
0.00 AS  INCOME_POVERTY_150_TO_175_CHILD_PERCENT,
SUM(IFNULL(A.INCOME_POVERTY_175_TO_200_CHILD_UNADJ_COUNT,0)) AS INCOME_POVERTY_175_TO_200_CHILD_UNADJ_COUNT,
SUM(IFNULL(A.INCOME_POVERTY_175_TO_200_CHILD_ADJ_COUNT,0)) AS INCOME_POVERTY_175_TO_200_CHILD_ADJ_COUNT,
0.00 AS  INCOME_POVERTY_175_TO_200_CHILD_PERCENT,
SUM(IFNULL(A.INCOME_POVERTY_200_TO_225_CHILD_UNADJ_COUNT,0)) AS INCOME_POVERTY_200_TO_225_CHILD_UNADJ_COUNT,
SUM(IFNULL(A.INCOME_POVERTY_200_TO_225_CHILD_ADJ_COUNT,0)) AS INCOME_POVERTY_200_TO_225_CHILD_ADJ_COUNT,
0.00 AS  INCOME_POVERTY_200_TO_225_CHILD_PERCENT,
SUM(IFNULL(A.INCOME_POVERTY_225_TO_250_CHILD_UNADJ_COUNT,0)) AS INCOME_POVERTY_225_TO_250_CHILD_UNADJ_COUNT,
SUM(IFNULL(A.INCOME_POVERTY_225_TO_250_CHILD_ADJ_COUNT,0)) AS INCOME_POVERTY_225_TO_250_CHILD_ADJ_COUNT,
0.00 AS  INCOME_POVERTY_225_TO_250_CHILD_PERCENT,

SUM(IFNULL(A.INCOME_POVERTY_250_TO_300_CHILD_UNADJ_COUNT,0)) AS INCOME_POVERTY_250_TO_300_CHILD_UNADJ_COUNT,
SUM(IFNULL(A.INCOME_POVERTY_250_TO_300_CHILD_ADJ_COUNT,0)) AS INCOME_POVERTY_250_TO_300_CHILD_ADJ_COUNT,
0.00 AS  INCOME_POVERTY_250_TO_300_CHILD_PERCENT,

SUM(IFNULL(A.INCOME_POVERTY_GE_300_CHILD_UNADJ_COUNT,0)) AS INCOME_POVERTY_GE_300_CHILD_UNADJ_COUNT,
SUM(IFNULL(A.INCOME_POVERTY_GE_300_CHILD_ADJ_COUNT,0)) AS INCOME_POVERTY_GE_300_CHILD_ADJ_COUNT,
0.00 AS  INCOME_POVERTY_GE_300_CHILD_PERCENT,

SUM(IFNULL(A.INVALID_CHILD_UNADJ_COUNT,0)) AS INVALID_CHILD_UNADJ_COUNT,
SUM(IFNULL(A.INVALID_CHILD_ADJ_COUNT,0)) AS INVALID_CHILD_ADJ_COUNT,
0.00 AS  INVALID_CHILD_PERCENT,

SUM(IFNULL(A.PROTECTIVE_SERVICES_CHILD_UNADJ_COUNT,0)) AS PROTECTIVE_SERVICES_CHILD_UNADJ_COUNT,
SUM(IFNULL(A.PROTECTIVE_SERVICES_CHILD_ADJ_COUNT,0)) AS PROTECTIVE_SERVICES_CHILD_ADJ_COUNT,
0.00 AS  PROTECTIVE_SERVICES_CHILD_PERCENT,

0 AS  TOTAL_UNADJ_CHILD_COUNT,
0 AS  TOTAL_ADJ_CHILD_COUNT,
0.00 AS TOTAL_CHILD_PERCENT
FROM CARS_801_AGGN_SP_ASPE_FINAL AS A GROUP BY A.AGE_GROUP_TEXT) AS N;

UPDATE CARS_801_AGGN_ASPE_TEMP A
JOIN (SELECT AGE_GROUP_TEXT,SUM(TOTAL_CHILD_UNADJ_COUNT) AS TOTAL_CHILD_UNADJ_COUNT,SUM(TOTAL_CHILD_ADJ_COUNT) AS TOTAL_CHILD_ADJ_COUNT
FROM CARS_801_AGGN_ASPE_TEMP WHERE ENTITY_ID!=0 GROUP BY AGE_GROUP_TEXT) B 
ON A.AGE_GROUP_TEXT=B.AGE_GROUP_TEXT AND A.ENTITY_ID=0
SET A.TOTAL_CHILD_UNADJ_COUNT=B.TOTAL_CHILD_UNADJ_COUNT,A.TOTAL_CHILD_ADJ_COUNT=B.TOTAL_CHILD_ADJ_COUNT;

SELECT ROUND(SUM(TOTAL_CHILD_ADJ_COUNT)) INTO v_total_national FROM CARS_801_AGGN_ASPE_TEMP WHERE ENTITY_ID=0;

UPDATE CARS_801_AGGN_ASPE_TEMP
SET INCOME_0_CHILD_PERCENT=IFNULL(ROUND((INCOME_0_CHILD_ADJ_COUNT/v_total_national)*100,3),0),
INCOME_POVERTY_0_TO_25_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_0_TO_25_CHILD_ADJ_COUNT/v_total_national)*100,3),0),
INCOME_POVERTY_25_TO_50_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_25_TO_50_CHILD_ADJ_COUNT/v_total_national)*100,3),0),
INCOME_POVERTY_50_TO_75_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_50_TO_75_CHILD_ADJ_COUNT/v_total_national)*100,3),0),
INCOME_POVERTY_75_TO_100_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_75_TO_100_CHILD_ADJ_COUNT/v_total_national)*100,3),0),
INCOME_POVERTY_100_TO_125_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_100_TO_125_CHILD_ADJ_COUNT/v_total_national)*100,3),0),
INCOME_POVERY_125_TO_150_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_125_TO_150_CHILD_ADJ_COUNT/v_total_national)*100,3),0),
INCOME_POVERTY_150_TO_175_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_150_TO_175_CHILD_ADJ_COUNT/v_total_national)*100,3),0),
INCOME_POVERTY_175_TO_200_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_175_TO_200_CHILD_ADJ_COUNT/v_total_national)*100,3),0),
INCOME_POVERTY_200_TO_225_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_200_TO_225_CHILD_ADJ_COUNT/v_total_national)*100,3),0),
INCOME_POVERTY_225_TO_250_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_225_TO_250_CHILD_ADJ_COUNT/v_total_national)*100,3),0),
INCOME_POVERTY_250_TO_300_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_250_TO_300_CHILD_ADJ_COUNT/v_total_national)*100,3),0),
INCOME_POVERTY_GE_300_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_GE_300_CHILD_ADJ_COUNT/v_total_national)*100,3),0),
INVALID_CHILD_PERCENT=IFNULL(ROUND((INVALID_ADJ_CHILD_COUNT/v_total_national)*100,3),0),
PROTECTIVE_SERVICES_CHILD_PERCENT=IFNULL(ROUND((PROTECTIVE_SERVICES_CHILD_ADJ_COUNT/v_total_national)*100,3),0)
WHERE ENTITY_ID=0;

UPDATE CARS_801_AGGN_ASPE_TEMP A
JOIN (SELECT ENTITY_ID,ROUND(SUM(TOTAL_CHILD_ADJ_COUNT)) AS TOTAL_CHILD_ADJ_COUNT
FROM CARS_801_AGGN_ASPE_TEMP WHERE ENTITY_ID!=0 GROUP BY ENTITY_ID) B 
ON A.ENTITY_ID=B.ENTITY_ID
SET  INCOME_0_CHILD_PERCENT=IFNULL(ROUND((INCOME_0_CHILD_ADJ_COUNT/B.TOTAL_CHILD_ADJ_COUNT)*100,3),0),
INCOME_POVERTY_0_TO_25_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_0_TO_25_CHILD_ADJ_COUNT/B.TOTAL_CHILD_ADJ_COUNT)*100,3),0),
INCOME_POVERTY_25_TO_50_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_25_TO_50_CHILD_ADJ_COUNT/B.TOTAL_CHILD_ADJ_COUNT)*100,3),0),
INCOME_POVERTY_50_TO_75_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_50_TO_75_CHILD_ADJ_COUNT/B.TOTAL_CHILD_ADJ_COUNT)*100,3),0),
INCOME_POVERTY_75_TO_100_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_75_TO_100_CHILD_ADJ_COUNT/B.TOTAL_CHILD_ADJ_COUNT)*100,3),0),
INCOME_POVERTY_100_TO_125_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_100_TO_125_CHILD_ADJ_COUNT/B.TOTAL_CHILD_ADJ_COUNT)*100,3),0),
INCOME_POVERY_125_TO_150_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_125_TO_150_CHILD_ADJ_COUNT/B.TOTAL_CHILD_ADJ_COUNT)*100,3),0),
INCOME_POVERTY_150_TO_175_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_150_TO_175_CHILD_ADJ_COUNT/B.TOTAL_CHILD_ADJ_COUNT)*100,3),0),
INCOME_POVERTY_175_TO_200_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_175_TO_200_CHILD_ADJ_COUNT/B.TOTAL_CHILD_ADJ_COUNT)*100,3),0),
INCOME_POVERTY_200_TO_225_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_200_TO_225_CHILD_ADJ_COUNT/B.TOTAL_CHILD_ADJ_COUNT)*100,3),0),
INCOME_POVERTY_225_TO_250_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_225_TO_250_CHILD_ADJ_COUNT/B.TOTAL_CHILD_ADJ_COUNT)*100,3),0),
INCOME_POVERTY_250_TO_300_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_250_TO_300_CHILD_ADJ_COUNT/B.TOTAL_CHILD_ADJ_COUNT)*100,3),0),
INCOME_POVERTY_GE_300_CHILD_PERCENT=IFNULL(ROUND((INCOME_POVERTY_GE_300_CHILD_ADJ_COUNT/B.TOTAL_CHILD_ADJ_COUNT)*100,3),0),
INVALID_CHILD_PERCENT=IFNULL(ROUND((INVALID_ADJ_CHILD_COUNT/B.TOTAL_CHILD_ADJ_COUNT)*100,3),0),
PROTECTIVE_SERVICES_CHILD_PERCENT=IFNULL(ROUND((PROTECTIVE_SERVICES_CHILD_ADJ_COUNT/B.TOTAL_CHILD_ADJ_COUNT)*100,3),0)
WHERE A.ENTITY_ID!=0;

UPDATE CARS_801_AGGN_ASPE_TEMP
SET TOTAL_CHILD_PERCENT=INCOME_0_CHILD_PERCENT+
INCOME_POVERTY_0_TO_25_CHILD_PERCENT+
INCOME_POVERTY_25_TO_50_CHILD_PERCENT+
INCOME_POVERTY_50_TO_75_CHILD_PERCENT+
INCOME_POVERTY_75_TO_100_CHILD_PERCENT+
INCOME_POVERTY_100_TO_125_CHILD_PERCENT+
INCOME_POVERY_125_TO_150_CHILD_PERCENT+
INCOME_POVERTY_150_TO_175_CHILD_PERCENT+
INCOME_POVERTY_175_TO_200_CHILD_PERCENT+
INCOME_POVERTY_200_TO_225_CHILD_PERCENT+
INCOME_POVERTY_225_TO_250_CHILD_PERCENT+
INCOME_POVERTY_250_TO_300_CHILD_PERCENT+
INCOME_POVERTY_GE_300_CHILD_PERCENT+
INVALID_CHILD_PERCENT+
PROTECTIVE_SERVICES_CHILD_PERCENT;


INSERT INTO CARS_801_AGGN_ASPE(
    AGGN_REF_ID,
    ENTITY_ID,
    AGE_GROUP_TEXT,
    ENTITY_NAME,
    INCOME_0_CHILD_UNADJ_COUNT,
    INCOME_0_CHILD_ADJ_COUNT,
    INCOME_0_CHILD_PERCENT,
    INCOME_POVERTY_0_TO_25_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_0_TO_25_CHILD_ADJ_COUNT,
    INCOME_POVERTY_0_TO_25_CHILD_PERCENT,
    INCOME_POVERTY_25_TO_50_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_25_TO_50_CHILD_ADJ_COUNT,
    INCOME_POVERTY_25_TO_50_CHILD_PERCENT,
    INCOME_POVERTY_50_TO_75_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_50_TO_75_CHILD_ADJ_COUNT,
    INCOME_POVERTY_50_TO_75_CHILD_PERCENT,
    INCOME_POVERTY_75_TO_100_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_75_TO_100_CHILD_ADJ_COUNT,
    INCOME_POVERTY_75_TO_100_CHILD_PERCENT,
    INCOME_POVERTY_100_TO_125_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_100_TO_125_CHILD_ADJ_COUNT,
    INCOME_POVERTY_100_TO_125_CHILD_PERCENT,
    INCOME_POVERTY_125_TO_150_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_125_TO_150_CHILD_ADJ_COUNT,
    INCOME_POVERY_125_TO_150_CHILD_PERCENT,
    INCOME_POVERTY_150_TO_175_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_150_TO_175_CHILD_ADJ_COUNT,
    INCOME_POVERTY_150_TO_175_CHILD_PERCENT,
    INCOME_POVERTY_175_TO_200_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_175_TO_200_CHILD_ADJ_COUNT,
    INCOME_POVERTY_175_TO_200_CHILD_PERCENT,
    INCOME_POVERTY_200_TO_225_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_200_TO_225_CHILD_ADJ_COUNT,
    INCOME_POVERTY_200_TO_225_CHILD_PERCENT,
    INCOME_POVERTY_225_TO_250_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_225_TO_250_CHILD_ADJ_COUNT,
    INCOME_POVERTY_225_TO_250_CHILD_PERCENT,
    INCOME_POVERTY_250_TO_300_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_250_TO_300_CHILD_ADJ_COUNT,
    INCOME_POVERTY_250_TO_300_CHILD_PERCENT,
    INCOME_POVERTY_GE_300_CHILD_UNADJ_COUNT,
    INCOME_POVERTY_GE_300_CHILD_ADJ_COUNT,
    INCOME_POVERTY_GE_300_CHILD_PERCENT,	
	INVALID_UNADJ_CHILD_COUNT,
	INVALID_ADJ_CHILD_COUNT,
	INVALID_CHILD_PERCENT,
	PROTECTIVE_SERVICES_CHILD_UNADJ_COUNT,
	PROTECTIVE_SERVICES_CHILD_ADJ_COUNT,
	PROTECTIVE_SERVICES_CHILD_PERCENT,	
    TOTAL_CHILD_UNADJ_COUNT,
    TOTAL_CHILD_ADJ_COUNT,
    TOTAL_CHILD_PERCENT
	
	)
SELECT
    AGGN_REF_ID,
    ENTITY_ID,
    AGE_GROUP_TEXT,
    ENTITY_NAME,
    ROUND(INCOME_0_CHILD_UNADJ_COUNT),
    ROUND(INCOME_0_CHILD_ADJ_COUNT),
    INCOME_0_CHILD_PERCENT,
    ROUND(INCOME_POVERTY_0_TO_25_CHILD_UNADJ_COUNT),
    ROUND(INCOME_POVERTY_0_TO_25_CHILD_ADJ_COUNT),
    INCOME_POVERTY_0_TO_25_CHILD_PERCENT,
    ROUND(INCOME_POVERTY_25_TO_50_CHILD_UNADJ_COUNT),
    ROUND(INCOME_POVERTY_25_TO_50_CHILD_ADJ_COUNT),
    INCOME_POVERTY_25_TO_50_CHILD_PERCENT,
    ROUND(INCOME_POVERTY_50_TO_75_CHILD_UNADJ_COUNT),
    ROUND(INCOME_POVERTY_50_TO_75_CHILD_ADJ_COUNT),
    INCOME_POVERTY_50_TO_75_CHILD_PERCENT,
    ROUND(INCOME_POVERTY_75_TO_100_CHILD_UNADJ_COUNT),
    ROUND(INCOME_POVERTY_75_TO_100_CHILD_ADJ_COUNT),
    INCOME_POVERTY_75_TO_100_CHILD_PERCENT,
    ROUND(INCOME_POVERTY_100_TO_125_CHILD_UNADJ_COUNT),
    ROUND(INCOME_POVERTY_100_TO_125_CHILD_ADJ_COUNT),
    INCOME_POVERTY_100_TO_125_CHILD_PERCENT,
    ROUND(INCOME_POVERTY_125_TO_150_CHILD_UNADJ_COUNT),
    ROUND(INCOME_POVERTY_125_TO_150_CHILD_ADJ_COUNT),
    INCOME_POVERY_125_TO_150_CHILD_PERCENT,
    ROUND(INCOME_POVERTY_150_TO_175_CHILD_UNADJ_COUNT),
    ROUND(INCOME_POVERTY_150_TO_175_CHILD_ADJ_COUNT),
    INCOME_POVERTY_150_TO_175_CHILD_PERCENT,
    ROUND(INCOME_POVERTY_175_TO_200_CHILD_UNADJ_COUNT),
    ROUND(INCOME_POVERTY_175_TO_200_CHILD_ADJ_COUNT),
    INCOME_POVERTY_175_TO_200_CHILD_PERCENT,
    ROUND(INCOME_POVERTY_200_TO_225_CHILD_UNADJ_COUNT),
    ROUND(INCOME_POVERTY_200_TO_225_CHILD_ADJ_COUNT),
    INCOME_POVERTY_200_TO_225_CHILD_PERCENT,
    ROUND(INCOME_POVERTY_225_TO_250_CHILD_UNADJ_COUNT),
    ROUND(INCOME_POVERTY_225_TO_250_CHILD_ADJ_COUNT),
    INCOME_POVERTY_225_TO_250_CHILD_PERCENT,
    ROUND(INCOME_POVERTY_250_TO_300_CHILD_UNADJ_COUNT),
    ROUND(INCOME_POVERTY_250_TO_300_CHILD_ADJ_COUNT),
    INCOME_POVERTY_250_TO_300_CHILD_PERCENT,
    ROUND(INCOME_POVERTY_GE_300_CHILD_UNADJ_COUNT),
    ROUND(INCOME_POVERTY_GE_300_CHILD_ADJ_COUNT),
    INCOME_POVERTY_GE_300_CHILD_PERCENT,	
	ROUND(INVALID_UNADJ_CHILD_COUNT),
	ROUND(INVALID_ADJ_CHILD_COUNT),
	INVALID_CHILD_PERCENT,
	ROUND(PROTECTIVE_SERVICES_CHILD_UNADJ_COUNT),
	ROUND(PROTECTIVE_SERVICES_CHILD_ADJ_COUNT),
	PROTECTIVE_SERVICES_CHILD_PERCENT,	
    ROUND(TOTAL_CHILD_UNADJ_COUNT),
    ROUND(TOTAL_CHILD_ADJ_COUNT),
    TOTAL_CHILD_PERCENT
FROM CARS_801_AGGN_ASPE_TEMP
UNION ALL 		
SELECT 
i_aggn_ref_id 
,E.ENTITY_ID
,NULL		   
,E.ENTITY_NAME
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL
,NULL


            FROM CARS_ENTITY E
                LEFT OUTER JOIN CARS_801_AGGN_ASPE_TEMP C
            ON E.ENTITY_ID = C.ENTITY_ID
            WHERE E.ENTITY_TYPE_CD = 'STATE-TER'
            AND C.ENTITY_ID IS NULL;	
	
SET v_total_rows_inserted = ROW_COUNT();
			
DROP TEMPORARY TABLE IF EXISTS CARS_801_AGGN_ASPE_TEMP;
DROP TEMPORARY TABLE IF EXISTS CARS_801_AGGN_SP_ASPE_FINAL;
DROP TEMPORARY TABLE IF EXISTS CARS_801_AGGN_SP_ASPE_UNADJ_TBL;
DROP TEMPORARY TABLE IF EXISTS CARS_801_AGGN_SP_ASPE_PRE_OUT;
DROP TEMPORARY TABLE IF EXISTS CARS_801_AGGN_SP_ASPE_INVALID;
DROP TEMPORARY TABLE IF EXISTS CARS_801_AGGN_SP_ASPE_VALID;
DROP TEMPORARY TABLE IF EXISTS CARS_801_AGGN_SP_ASPE_INIT;
DROP TEMPORARY TABLE IF EXISTS CARS_801_AGGN_SP_ASPE_UNADJ_DATA;
DROP TEMPORARY TABLE IF EXISTS CARS_801_AGGN_SP_ASPE_CCOUNTHRS;


	UPDATE CARS_801_SP_LOG
	SET SP_STATUS_TEXT= CONCAT('Success. Rows inserted: ',v_total_rows_inserted, ' Rows Deleted :', v_total_rows_deleted), END_TS=NOW()
	WHERE  SP_LOG_ID=( SELECT MAX(SP_LOG_ID) FROM CARS_801_SP_LOG WHERE SP_NAME ='CARS_801_AGGN_SP_ASPE');
	COMMIT;		
		
	END$$
	DELIMITER ;