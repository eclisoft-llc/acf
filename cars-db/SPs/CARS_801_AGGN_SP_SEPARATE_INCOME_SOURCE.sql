DELIMITER $$
CREATE OR REPLACE PROCEDURE CARS_801_AGGN_SP_SEPARATE_INCOME_SOURCE( IN i_aggn_ref_id INT)
BEGIN  
/******************************************************
 * Author: Zohreh Torabian
 * Report Name: Employment as a Source of Income
 * Report Number: 220 
 * Report Name: TANF as a Source of Income
 * Report Numbar: 230 
 * Desc: It populates data for table, 
 *		 CARS_801_AGGN_SEPARATE_INCOME_SOURCE.
 ******************************************************/
DECLARE v_rec_cnt INTEGER DEFAULT 0 ;
DECLARE v_total_rows_deleted INTEGER DEFAULT 0; 
DECLARE v_total_rows_inserted INTEGER DEFAULT 0; 
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
			SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
			 
			UPDATE CARS_801_SP_LOG
				SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
			WHERE SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_801_SP_LOG WHERE SP_NAME='CARS_801_AGGN_SP_SEPARATE_INCOME_SOURCE' );
			COMMIT;
		END;	
		
	INSERT INTO CARS_801_SP_LOG ( SP_NAME, START_TS)
		VALUES( 'CARS_801_AGGN_SP_SEPARATE_INCOME_SOURCE', NOW());	
		
		
	SELECT COUNT(*) INTO v_rec_cnt FROM CARS_801_AGGN_SEPARATE_INCOME_SOURCE WHERE  AGGN_REF_ID = i_aggn_ref_id;
 
		DELETE FROM CARS_801_AGGN_SEPARATE_INCOME_SOURCE
		WHERE AGGN_REF_ID = i_aggn_ref_id;
        
		SET v_total_rows_deleted = ROW_COUNT();
		

DROP TEMPORARY TABLE IF EXISTS TMP_MOD_HDR_M;
CREATE TEMPORARY TABLE TMP_MOD_HDR_M AS
				    SELECT 	DISTINCT HDR.MODULE_HDR_ID 
						   
						   ,AGGN_REF_ID
						   ,HDR.ENTITY_ID
						   ,HDR.ENTITY_NAME	
						   ,REC.FAMILY_COUNT AS FAMILY_CNT
						   ,HDR.FAMILY_COUNT AS FAM_MO_UNADJ_CNT
						   ,AGGN_RF.FISCAL_YEAR 
							FROM CARS_MODULE_PERIOD_HDR HDR 
								JOIN CARS_PERIOD P 
							ON P.PERIOD_ID=HDR.PERIOD_ID 
							AND P.801_FLAG = 1
								JOIN CARS_801_REC_COUNTS REC
							ON REC.MODULE_HDR_ID=HDR.MODULE_HDR_ID
								JOIN CARS_801_AGGN_REF AGGN_RF 
							ON CAST(SUBSTR(P.PERIOD_DESC,5,4) AS INTEGER) =AGGN_RF.FISCAL_YEAR
							AND AGGN_RF.AGGN_REF_ID=i_aggn_ref_id;
DROP TEMPORARY TABLE IF EXISTS CARS_801_TEMP_EMP_TANF_SM;
CREATE TEMPORARY TABLE CARS_801_TEMP_EMP_TANF_SM						
				SELECT 
					HDR.ENTITY_ID
               		,T.ENTITY_NAME
                    ,HDR.FISCAL_YEAR
                    ,SUM(HDR.FAM_MO_UNADJ_CNT) 											AS TOTAL_UNADJ_CNT_PER_STATE
					,AVG(HDR.FAM_MO_UNADJ_CNT) 											AS AVG_UNADJ_CNT_PER_STATE
               		,AVG(EMP_Y_RATIO*FAM_MO_UNADJ_CNT) 									AS WGHTD1AVG
               		,AVG(EMP_N_RATIO*FAM_MO_UNADJ_CNT) 									AS WGHTD2AVG 
                    ,AVG(EMP_INVALID_RATIO*FAM_MO_UNADJ_CNT)							AS WGHTD3AVG
                    ,AVG(TANF_Y_RATIO*FAM_MO_UNADJ_CNT) 								AS WGHTD4AVG
                    ,AVG(TANF_N_RATIO*FAM_MO_UNADJ_CNT) 								AS WGHTD5AVG
                    ,AVG(TANF_INVALID_RATIO*FAM_MO_UNADJ_CNT) 							AS WGHTD6AVG
               		,SUM(EMP_Y_RATIO*FAM_MO_UNADJ_CNT) 									AS WGHTD1SUM
               		,SUM(EMP_N_RATIO*FAM_MO_UNADJ_CNT) 									AS WGHTD2SUM
                    ,SUM(EMP_INVALID_RATIO*FAM_MO_UNADJ_CNT ) 							AS WGHTD3SUM
                    ,SUM(TANF_Y_RATIO*FAM_MO_UNADJ_CNT) 								AS WGHTD4SUM
                    ,SUM(TANF_N_RATIO*FAM_MO_UNADJ_CNT) 								AS WGHTD5SUM
                    ,SUM(TANF_INVALID_RATIO*FAM_MO_UNADJ_CNT) 							AS WGHTD6SUM
               FROM (     SELECT 
						FAM.MODULE_HDR_ID
						,HDR_M.ENTITY_NAME
						
						
						, COUNT(CASE WHEN FAM.SELF_EMPLOYED_CD=1 THEN 1  END )		/HDR_M.FAMILY_CNT AS EMP_Y_RATIO
						, COUNT(CASE WHEN FAM.SELF_EMPLOYED_CD=0 THEN 0  END )		/HDR_M.FAMILY_CNT AS EMP_N_RATIO
						, COUNT(CASE WHEN SELF_EMPLOYED_CD NOT IN (0,1) OR SELF_EMPLOYED_CD IS NULL THEN 1 END ) /HDR_M.FAMILY_CNT AS EMP_INVALID_RATIO
						, COUNT(CASE WHEN FAM.TANF_CD=1 THEN 1  END) 		  		/HDR_M.FAMILY_CNT AS TANF_Y_RATIO
						, COUNT(CASE WHEN FAM.TANF_CD=0 THEN 0  END) 		  		/HDR_M.FAMILY_CNT AS TANF_N_RATIO
						, COUNT( CASE WHEN FAM.TANF_CD IS NULL OR TANF_CD NOT IN (0,1) THEN 1 END )/HDR_M.FAMILY_CNT AS TANF_INVALID_RATIO
						FROM TMP_MOD_HDR_M HDR_M
										   JOIN CARS_801_FAMILY FAM
						ON FAM.MODULE_HDR_ID=HDR_M.MODULE_HDR_ID
                       
						GROUP BY 1,2
                   ) T JOIN TMP_MOD_HDR_M HDR
				   ON HDR.MODULE_HDR_ID =T.MODULE_HDR_ID 
				   /* AND HDR.FISCAL_YEAR=T.FISCAL_YEAR */
				   GROUP BY 1,2,3;
                  /*  select * from CARS_801_TEMP_EMP_TANF_SM; */
DROP TEMPORARY TABLE IF EXISTS CARS_801_TEMP_EMP_TANF_TOT;
CREATE TEMPORARY TABLE CARS_801_TEMP_EMP_TANF_TOT
	SELECT
		 EMP_TANF.ENTITY_ID
		,EMP_TANF.ENTITY_NAME
		/* EMP_TANF.FISCAL_YEAR */
		
		/* income sources : 1- employment, 2- tanf with all yes/no answers and invalid values*/
		/* in this section, it uses formula to populate family unadjusted/adjusted count per state and fiscal year for employment and tanf */
		/* in this section, it uses formula to populate family count percentage per state and fiscal year for each for employment and tanf  */
		
		,ROUND(EMP_TANF.EMPLOYMENT_YES_FAMILY_UNADJ_COUNT) EMPLOYMENT_YES_FAMILY_UNADJ_COUNT
		,CASE WHEN FACT.PFACTOR>0 THEN ROUND((IFNULL(EMP_TANF.EMPLOYMENT_YES_FAMILY_UNADJ_COUNT,0)*FACT.PFACTOR))  ELSE NULL END  EMPLOYMENT_YES_FAMILY_ADJ_COUNT
		,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN EMP_TANF.TOTAL_WGHT>0 THEN ROUND(IFNULL(EMP_TANF.EMPLOYMENT_YES_FAMILY_UNADJ_COUNT_SUM,0)/EMP_TANF.TOTAL_WGHT*100,2) ELSE 0 END ELSE NULL END  EMPLOYMENT_YES_FAMILY_PERCENT
		
		,ROUND(EMP_TANF.EMPLOYMENT_NO_FAMILY_UNADJ_COUNT) EMPLOYMENT_NO_FAMILY_UNADJ_COUNT
		,CASE WHEN FACT.PFACTOR>0 THEN ROUND(IFNULL(EMP_TANF.EMPLOYMENT_NO_FAMILY_UNADJ_COUNT,0)*FACT.PFACTOR)  ELSE NULL END EMPLOYMENT_NO_FAMILY_ADJ_COUNT
		,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN EMP_TANF.TOTAL_WGHT>0 THEN ROUND((IFNULL(EMP_TANF.EMPLOYMENT_NO_FAMILY_UNADJ_COUNT_SUM,0)/EMP_TANF.TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END EMPLOYMENT_NO_FAMILY_PERCENT 
		
		,ROUND(EMP_TANF.INVALID_EMPLOYMENT_FAMILY_UNADJ_COUNT) INVALID_EMPLOYMENT_FAMILY_UNADJ_COUNT
		,CASE WHEN FACT.PFACTOR>0 THEN ROUND(IFNULL(EMP_TANF.INVALID_EMPLOYMENT_FAMILY_UNADJ_COUNT,0)*FACT.PFACTOR)  ELSE NULL END INVALID_EMPLOYMENT_FAMILY_ADJ_COUNT
		,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN EMP_TANF.TOTAL_WGHT>0 THEN ROUND((IFNULL(EMP_TANF.INVALID_EMPLOYMENT_FAMILY_UNADJ_COUNT_SUM,0)/TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END INVALID_EMPLOYMENT_FAMILY_PERCENT
		
	    , ROUND(EMP_TANF.TANF_YES_FAMILY_UNADJ_COUNT) TANF_YES_FAMILY_UNADJ_COUNT
		,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(IFNULL(EMP_TANF.TANF_YES_FAMILY_UNADJ_COUNT,0)*FACT.PFACTOR)  ELSE NULL END  TANF_YES_FAMILY_ADJ_COUNT
		,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN EMP_TANF.TOTAL_WGHT>0 THEN ROUND((IFNULL(EMP_TANF.TANF_YES_FAMILY_UNADJ_COUNT_SUM,0)/EMP_TANF.TOTAL_WGHT)*100,2) ELSE 0 END ELSE NULL END TANF_YES_FAMILY_PERCENT
		
		
		 ,ROUND(TANF_NO_FAMILY_UNADJ_COUNT) TANF_NO_FAMILY_UNADJ_COUNT
		,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(IFNULL(EMP_TANF.TANF_NO_FAMILY_UNADJ_COUNT,0)*FACT.PFACTOR)  ELSE NULL END TANF_NO_FAMILY_ADJ_COUNT
		,CASE WHEN FACT.PFACTOR>0 THEN  ROUND((IFNULL(EMP_TANF.TANF_NO_FAMILY_UNADJ_COUNT_SUM,0)/TOTAL_WGHT)*100,2)  ELSE NULL END TANF_NO_FAMILY_PERCENT   
		
		,ROUND(INVALID_TANF_FAMILY_UNADJ_COUNT) INVALID_TANF_FAMILY_UNADJ_COUNT
		,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(IFNULL(EMP_TANF.INVALID_TANF_FAMILY_UNADJ_COUNT,0)*FACT.PFACTOR)  ELSE NULL END INVALID_TANF_FAMILY_ADJ_COUNT
		,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN EMP_TANF.TOTAL_WGHT>0 THEN ROUND(IFNULL(EMP_TANF.INVALID_TANF_FAMILY_UNADJ_COUNT_SUM,0)/TOTAL_WGHT*100,2) ELSE 0 END ELSE NULL END INVALID_TANF_FAMILY_PERCENT
		,CASE WHEN FACT.PFACTOR>0 THEN AVG_UNADJ_CNT_PER_STATE*FACT.PFACTOR ELSE NULL END  FAMADJCNT
	FROM ( SELECT ENTITY_ID
				  ,ENTITY_NAME
				  ,FISCAL_YEAR 
				  ,WGHTD1AVG 	EMPLOYMENT_YES_FAMILY_UNADJ_COUNT
				  ,WGHTD2AVG 	EMPLOYMENT_NO_FAMILY_UNADJ_COUNT
				  ,WGHTD3AVG	INVALID_EMPLOYMENT_FAMILY_UNADJ_COUNT 
				  ,WGHTD4AVG 	TANF_YES_FAMILY_UNADJ_COUNT
				  ,WGHTD5AVG 	TANF_NO_FAMILY_UNADJ_COUNT
				  ,WGHTD6AVG 	INVALID_TANF_FAMILY_UNADJ_COUNT
				  ,WGHTD1SUM 	EMPLOYMENT_YES_FAMILY_UNADJ_COUNT_SUM
				  ,WGHTD2SUM 	EMPLOYMENT_NO_FAMILY_UNADJ_COUNT_SUM
				  ,WGHTD3SUM 	INVALID_EMPLOYMENT_FAMILY_UNADJ_COUNT_SUM
				  ,WGHTD4SUM 	TANF_YES_FAMILY_UNADJ_COUNT_SUM
				  ,WGHTD5SUM 	TANF_NO_FAMILY_UNADJ_COUNT_SUM
				  ,WGHTD6SUM	INVALID_TANF_FAMILY_UNADJ_COUNT_SUM
				  ,TOTAL_UNADJ_CNT_PER_STATE  TOTAL_WGHT
				  ,AVG_UNADJ_CNT_PER_STATE
				 
				  FROM CARS_801_TEMP_EMP_TANF_SM ) EMP_TANF
		 
		LEFT JOIN ( SELECT ENTITY_ID
						,ENTITY_NAME
						,PERIOD_DESC
						,IFNULL(POOLING_FACTOR,0)*.01 AS PFACTOR 
						FROM VW_CARS_801_POOLING_FACTOR 
				  ) FACT
     						
	ON FACT.PERIOD_DESC LIKE CONCAT('%',EMP_TANF.FISCAL_YEAR)
	AND FACT.ENTITY_NAME=EMP_TANF.ENTITY_NAME;
/* SELECT * FROM CARS_801_TEMP_EMP_TANF_TOT; */
/* SELECT * FROM CARS_801_TEMP_EMP_TANF_TOT; */

INSERT INTO CARS_801_AGGN_SEPARATE_INCOME_SOURCE
 (
  AGGN_REF_ID , 
 ENTITY_ID ,  
 ENTITY_NAME , 
 INVALID_EMPLOYMENT_FAMILY_UNADJ_COUNT ,
 INVALID_EMPLOYMENT_FAMILY_ADJ_COUNT , 
 INVALID_EMPLOYMENT_FAMILY_PERCENT ,
 EMPLOYMENT_YES_FAMILY_UNADJ_COUNT ,
 EMPLOYMENT_YES_FAMILY_ADJ_COUNT , 
 EMPLOYMENT_YES_FAMILY_PERCENT ,
 EMPLOYMENT_NO_FAMILY_UNADJ_COUNT , 
 EMPLOYMENT_NO_FAMILY_ADJ_COUNT ,
 EMPLOYMENT_NO_FAMILY_PERCENT , 
 INVALID_TANF_FAMILY_UNADJ_COUNT ,
 INVALID_TANF_FAMILY_ADJ_COUNT , 
 INVALID_TANF_FAMILY_PERCENT , 
 TANF_YES_FAMILY_UNADJ_COUNT , 
 TANF_YES_FAMILY_ADJ_COUNT , 
 TANF_YES_FAMILY_PERCENT , 
 TANF_NO_FAMILY_UNADJ_COUNT , 
 TANF_NO_FAMILY_ADJ_COUNT , 
 TANF_NO_FAMILY_PERCENT  

 )
 SELECT 
 i_aggn_ref_id,
 ENTITY_ID ,  
 ENTITY_NAME , 
 INVALID_EMPLOYMENT_FAMILY_UNADJ_COUNT ,
 INVALID_EMPLOYMENT_FAMILY_ADJ_COUNT , 
 INVALID_EMPLOYMENT_FAMILY_PERCENT ,
 EMPLOYMENT_YES_FAMILY_UNADJ_COUNT ,
 EMPLOYMENT_YES_FAMILY_ADJ_COUNT , 
 EMPLOYMENT_YES_FAMILY_PERCENT ,
 EMPLOYMENT_NO_FAMILY_UNADJ_COUNT , 
 EMPLOYMENT_NO_FAMILY_ADJ_COUNT ,
 EMPLOYMENT_NO_FAMILY_PERCENT , 
 INVALID_TANF_FAMILY_UNADJ_COUNT ,
 INVALID_TANF_FAMILY_ADJ_COUNT , 
 INVALID_TANF_FAMILY_PERCENT , 
 TANF_YES_FAMILY_UNADJ_COUNT , 
 TANF_YES_FAMILY_ADJ_COUNT , 
 TANF_YES_FAMILY_PERCENT , 
 TANF_NO_FAMILY_UNADJ_COUNT , 
 TANF_NO_FAMILY_ADJ_COUNT , 
 TANF_NO_FAMILY_PERCENT 
FROM 
CARS_801_TEMP_EMP_TANF_TOT
UNION ALL 
 SELECT 
  i_aggn_ref_id
 ,0
 ,'National'
 
 ,NAT_DAT.NAT_INVALID_EMPLOYMENT_FAMILY_UNADJ_COUNT
 ,NAT_DAT.NAT_INVALID_EMPLOYMENT_FAMILY_ADJ_COUNT
 ,CASE WHEN NAT_DAT.NAT_FAM_ADJ_CNT>0 THEN ROUND(NAT_DAT.NAT_INVALID_EMPLOYMENT_FAMILY_ADJ_COUNT/NAT_DAT.NAT_FAM_ADJ_CNT*100,2) ELSE 0 END 	NAT_INVALID_EMPLOYMENT_FAMILY_PERCENT
 
 ,NAT_DAT.NAT_EMPLOYMENT_YES_FAMILY_UNADJ_COUNT
 ,NAT_DAT.NAT_EMPLOYMENT_YES_FAMILY_ADJ_COUNT
 ,CASE WHEN NAT_DAT.NAT_FAM_ADJ_CNT>0 THEN  ROUND(NAT_DAT.NAT_EMPLOYMENT_YES_FAMILY_ADJ_COUNT/NAT_DAT.NAT_FAM_ADJ_CNT*100,2) ELSE 0 END 	NAT_EMPLOYMENT_YES_FAMILY_PERCENT
 
 ,NAT_DAT.NAT_EMPLOYMENT_NO_FAMILY_UNADJ_COUNT
 ,NAT_DAT.NAT_EMPLOYMENT_NO_FAMILY_ADJ_COUNT
 ,CASE WHEN NAT_DAT.NAT_FAM_ADJ_CNT>0 THEN ROUND(NAT_DAT.NAT_EMPLOYMENT_NO_FAMILY_ADJ_COUNT/NAT_DAT.NAT_FAM_ADJ_CNT*100,2) ELSE 0 END 		NAT_EMPLOYMENT_NO_FAMILY_PERCENT
 
 ,NAT_DAT.NAT_INVALID_TANF_FAMILY_UNADJ_COUNT
 ,NAT_DAT.NAT_INVALID_TANF_FAMILY_ADJ_COUNT
 ,CASE WHEN NAT_DAT.NAT_FAM_ADJ_CNT>0 THEN ROUND(NAT_DAT.NAT_INVALID_TANF_FAMILY_ADJ_COUNT/NAT_DAT.NAT_FAM_ADJ_CNT*100,2) ELSE 0 END 		NAT_INVALID_TANF_FAMILY_PERCENT
 
 ,NAT_DAT.NAT_TANF_YES_FAMILY_UNADJ_COUNT
 ,NAT_DAT.NAT_TANF_YES_FAMILY_ADJ_COUNT
 ,CASE WHEN NAT_DAT.NAT_FAM_ADJ_CNT>0 THEN ROUND(NAT_DAT.NAT_TANF_YES_FAMILY_ADJ_COUNT/NAT_DAT.NAT_FAM_ADJ_CNT*100,2) ELSE 0 END 			NAT_TANF_YES_FAMILY_PERCENT
 
 ,NAT_DAT.NAT_TANF_NO_FAMILY_UNADJ_COUNT
 ,NAT_DAT.NAT_TANF_NO_FAMILY_ADJ_COUNT
 ,CASE WHEN NAT_DAT.NAT_FAM_ADJ_CNT>0 THEN ROUND(NAT_DAT.NAT_TANF_NO_FAMILY_ADJ_COUNT/NAT_DAT.NAT_FAM_ADJ_CNT*100,2) ELSE 0 END 			NAT_TANF_NO_FAMILY_PERCENT
 
FROM (
SELECT 
    SUM(IFNULL(INVALID_EMPLOYMENT_FAMILY_UNADJ_COUNT,0)) 	NAT_INVALID_EMPLOYMENT_FAMILY_UNADJ_COUNT
    ,SUM(IFNULL(INVALID_EMPLOYMENT_FAMILY_ADJ_COUNT,0))  	NAT_INVALID_EMPLOYMENT_FAMILY_ADJ_COUNT
    ,SUM(IFNULL(EMPLOYMENT_YES_FAMILY_UNADJ_COUNT,0))    	NAT_EMPLOYMENT_YES_FAMILY_UNADJ_COUNT
    ,SUM(IFNULL(EMPLOYMENT_YES_FAMILY_ADJ_COUNT,0))    		NAT_EMPLOYMENT_YES_FAMILY_ADJ_COUNT
    ,SUM(IFNULL(EMPLOYMENT_NO_FAMILY_UNADJ_COUNT,0))    	NAT_EMPLOYMENT_NO_FAMILY_UNADJ_COUNT
    ,SUM(IFNULL(EMPLOYMENT_NO_FAMILY_ADJ_COUNT,0))    		NAT_EMPLOYMENT_NO_FAMILY_ADJ_COUNT
    ,SUM(IFNULL(INVALID_TANF_FAMILY_UNADJ_COUNT,0)) 		NAT_INVALID_TANF_FAMILY_UNADJ_COUNT
    ,SUM(IFNULL(INVALID_TANF_FAMILY_ADJ_COUNT,0))  			NAT_INVALID_TANF_FAMILY_ADJ_COUNT
    ,SUM(IFNULL(TANF_YES_FAMILY_UNADJ_COUNT,0))    			NAT_TANF_YES_FAMILY_UNADJ_COUNT
    ,SUM(IFNULL(TANF_YES_FAMILY_ADJ_COUNT,0))    			NAT_TANF_YES_FAMILY_ADJ_COUNT
    ,SUM(IFNULL(TANF_NO_FAMILY_UNADJ_COUNT,0))    			NAT_TANF_NO_FAMILY_UNADJ_COUNT
    ,SUM(IFNULL(TANF_NO_FAMILY_ADJ_COUNT,0))    			NAT_TANF_NO_FAMILY_ADJ_COUNT
   
	,SUM(FAMADJCNT) 										NAT_FAM_ADJ_CNT
	
	
	
	
FROM CARS_801_TEMP_EMP_TANF_TOT 
) NAT_DAT 
 

UNION ALL
	SELECT 
     i_aggn_ref_id
    ,E.ENTITY_ID		   
    ,E.ENTITY_NAME
    
	,NULL
	,NULL
	,NULL
	
    ,NULL
	,NULL
	,NULL
	
	,NULL
	,NULL
	,NULL
    
	,NULL
	,NULL
	,NULL
    
	,NULL
	,NULL
	,NULL
    
	,NULL
	,NULL
	,NULL
    
    
     FROM CARS_ENTITY E
          LEFT OUTER JOIN CARS_801_TEMP_EMP_TANF_TOT C
     ON E.ENTITY_ID = C.ENTITY_ID
     WHERE E.ENTITY_TYPE_CD = 'STATE-TER'
     AND C.ENTITY_ID IS NULL ; 
SET v_total_rows_inserted = ROW_COUNT();	

DROP TEMPORARY TABLE IF EXISTS TMP_MOD_HDR_M;
DROP TEMPORARY TABLE IF EXISTS CARS_801_TEMP_EMP_TANF_SM;
DROP TEMPORARY TABLE IF EXISTS CARS_801_TEMP_EMP_TANF_TOT;

 
	 UPDATE CARS_801_SP_LOG
SET SP_STATUS_TEXT= CONCAT('Success. Rows inserted: ',v_total_rows_inserted, ' Rows Deleted :', v_total_rows_deleted), END_TS=NOW()
 
WHERE  SP_LOG_ID=( SELECT MAX(SP_LOG_ID) FROM CARS_801_SP_LOG WHERE SP_NAME ='CARS_801_AGGN_SP_SEPARATE_INCOME_SOURCE');
COMMIT;		
	
END$$
DELIMITER ;