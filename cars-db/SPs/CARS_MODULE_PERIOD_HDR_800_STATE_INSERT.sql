DROP  PROCEDURE IF EXISTS `CARS_MODULE_PERIOD_HDR_800_STATE_INSERT`;

DELIMITER $$
CREATE  PROCEDURE `CARS_MODULE_PERIOD_HDR_800_STATE_INSERT`(p_PERIOD_ID INT)
BEGIN DECLARE exit handler for SQLEXCEPTION
 BEGIN

  GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, 
   @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
  SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  UPDATE CARS_SP_LOG
  SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
  WHERE  SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_SP_LOG WHERE SP_NAME='CARS_MODULE_PERIOD_HDR_800_STATE_INSERT');
 END;
 /*Log run of the SP*/
   INSERT INTO CARS_SP_LOG(SP_NAME,START_TS,SP_STATUS_TEXT) 
  SELECT 'CARS_MODULE_PERIOD_HDR_800_STATE_INSERT',NOW(),'Running';
  
/*SP body*/
BEGIN
DECLARE v_PERIOD_ID INT;
DECLARE v_PERIOD_DESC VARCHAR (255);
DECLARE v_PERIOD_START_DATE DATE;
DECLARE v_MSG TEXT;
DECLARE v_MODULE_META_ID INT;
		## get period information
SELECT PERIOD_ID ,PERIOD_DESC,PERIOD_START_DATE INTO v_PERIOD_ID,v_PERIOD_DESC,v_PERIOD_START_DATE
FROM CARS_PERIOD
WHERE PERIOD_ID= p_PERIOD_ID;

		## get meta id 
SELECT  MODULE_META_ID INTO v_MODULE_META_ID
FROM CARS_MODULE_META META
JOIN CARS_MODULE MODULE ON META.MODULE_ID=MODULE.MODULE_ID
WHERE 1=1
AND MODULE.MODULE_NAME='ACF-800'
AND v_PERIOD_START_DATE BETWEEN META.MODULE_META_START_DATE AND META.MODULE_META_END_DATE
##AND META.DISC_TEXT NOT LIKE 'TEST'
 ;


IF ISNULL(v_PERIOD_DESC)=1
   THEN
    SET v_MSG= 'Period does not exist in CARS_PERIOD table';
   ELSE 

 ## insert into stage
 DROP TABLE IF EXISTS CARS_MODULE_PERIOD_HDR_TEMP;
 CREATE TEMPORARY TABLE CARS_MODULE_PERIOD_HDR_TEMP AS
 SELECT 
  v_MODULE_META_ID AS MODULE_META_ID,
  v_PERIOD_ID AS PERIOD_ID,
  `ENTITY_ID`,
  `ENTITY_NAME`,
  `LEAD_AGENCY_NAME`,
  `ENTITY_ST_ADDR_1`,
  `ENTITY_ST_ADDR_2`,
  `ENTITY_CITY`,
  `ENTITY_STATE_CD`,
  `ENTITY_ZIP_CD` 
  FROM CARS_ENTITY
  WHERE ENTITY_TYPE_CD= 'STATE-TER' ;
 
 
 INSERT INTO `CARS_MODULE_PERIOD_HDR` 
 (##`MODULE_HDR_ID`,
  `MODULE_META_ID`,
  `PERIOD_ID`,
  `ENTITY_ID`,
  `ENTITY_NAME`,
  `LEAD_AGENCY_NAME`,
  `ENTITY_ST_ADDR_1`,
  `ENTITY_ST_ADDR_2`,
  `ENTITY_CITY`,
  `ENTITY_STATE_CD`,
  `ENTITY_ZIP_CD`,
  ##`CONCACT_PERSON_NAME`,
  ##`CONTACT_PHONE_NUM`,
  ##`CONTACT_PHONE_EXT_NUM`,
  ##`CONTACT_PHONE_TYPE`,
  ##`CONTACT_FAX_NUM`,
  ##`CONTACT_EMAIL_ADDR`,
  `STATUS_TEXT`,
  `LAST_UPD_BY`,
  `LAST_UPD_TS`) 
  
SELECT 
  T.MODULE_META_ID,
  T.PERIOD_ID,
  T.ENTITY_ID,
  T.ENTITY_NAME,
  T.LEAD_AGENCY_NAME,
  T.ENTITY_ST_ADDR_1,
  T.ENTITY_ST_ADDR_2,
  T.ENTITY_CITY,
  T.ENTITY_STATE_CD,
  T.ENTITY_ZIP_CD,
  'Not Started',
  'SYSTEM',
  NOW()  
  FROM CARS_MODULE_PERIOD_HDR_TEMP T
  LEFT JOIN CARS_MODULE_PERIOD_HDR S ON 
  	T.MODULE_META_ID= S.MODULE_META_ID
  	AND T.PERIOD_ID =S.PERIOD_ID
  	AND T.ENTITY_ID=S.ENTITY_ID
  WHERE  S.MODULE_META_ID IS NULL
  	AND S.PERIOD_ID IS NULL
  	AND S.ENTITY_ID IS NULL;
 
  SET v_MSG= 'State and Period inserted in CARS_MODULE_PERIOD_HDR table' ;
   
END IF;
   
SELECT v_MSG;
END ;
 /*Log success of the SP*/
 UPDATE CARS_SP_LOG
  SET SP_STATUS_TEXT='Success',END_TS=NOW()
  WHERE  SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_SP_LOG WHERE SP_NAME='CARS_MODULE_PERIOD_HDR_800_STATE_INSERT');
 
 END$$
DELIMITER ;
