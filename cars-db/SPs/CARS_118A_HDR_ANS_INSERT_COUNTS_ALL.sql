DELIMITER //

CREATE OR REPLACE PROCEDURE CARS_118A_HDR_ANS_INSERT_COUNTS_ALL(
	IN  p_HDR_AMEND_ID INT
	   #,p_PROGRAM_477_FLAG INT
)
p_loop: 
BEGIN

	DECLARE v_total_rows_deleted INTEGER DEFAULT 0 ;
	DECLARE v_total_rows_inserted INTEGER DEFAULT 0 ;
	
	-- process error handle
	DECLARE exit handler for SQLEXCEPTION
	BEGIN
		 GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
		 
		 SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
		  
		 UPDATE CARS_SP_LOG
			SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
		  WHERE SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_SP_LOG WHERE SP_NAME='CARS_118A_HDR_ANS_INSERT_COUNTS_ALL');
		 COMMIT; 
	END;
	
	-- insert log record
	INSERT INTO CARS_SP_LOG (`SP_NAME`, `START_TS`, `END_TS`)
		VALUES( 'CARS_118A_HDR_ANS_PROC_FOR_ONE', NOW(), NOW());	
		

-- SP Script Start



## Insert the records into CARS_118A_HDR_ANS table for non 102-477 tribes
INSERT INTO CARS_118A_HDR_ANS
(
 HDR_AMEND_ID, 
 SUBQUES_RESP_ID, 
 ANS_STATUS_TEXT
)

SELECT
		A.HDR_AMEND_ID,
		S.SUBQUES_RESP_ID,
		S.LGMED_ANS_STATUS_TEXT AS ANS_STATUS_TEXT
	FROM
		CARS_MODULE_PERIOD_HDR H
		JOIN CARS_118A_HDR_AMEND A 
		ON H.MODULE_HDR_ID = A.MODULE_HDR_ID
		JOIN CARS_TRIBE_INFO I
		ON H.ENTITY_ID = I.TRIBE_ID
		AND H.PERIOD_ID = I.PERIOD_ID
		AND I.ALLOCATION_SIZE IN ('Large', 'Medium')
		AND (I.PROGRAM_477_FLAG = 0 OR I.PROGRAM_477_FLAG IS NULL)
		JOIN 
		(
			SELECT 
			S5.SUBQUES_RESP_ID, S5.SMALL_ANS_STATUS_TEXT, S5.LGMED_ANS_STATUS_TEXT
			FROM CARS_118A_SECT S1
			JOIN CARS_118A_SUBSECT S2
			ON S1.SECT_ID = S2.SECT_ID
			JOIN CARS_118A_QUES S3
			ON S2.SUBSECT_ID = S3.SUBSECT_ID
			JOIN CARS_118A_SUBQUES S4
			ON S3.QUES_ID = S4.QUES_ID
			JOIN CARS_118A_SUBQUES_RESP S5
			ON S4.SUBQUES_ID = S5.SUBQUES_ID
			AND S5.RESP_TYPE_CD <> 'INFO'
			WHERE S1.SECT_ID BETWEEN 1 AND 8
		) S
		ON 1=1
		
	WHERE A.HDR_AMEND_ID = p_HDR_AMEND_ID
	;
	
INSERT INTO CARS_118A_HDR_ANS
(
 HDR_AMEND_ID, 
 SUBQUES_RESP_ID, 
 ANS_STATUS_TEXT
)

SELECT
		A.HDR_AMEND_ID,
		S.SUBQUES_RESP_ID,
		S.SMALL_ANS_STATUS_TEXT AS ANS_STATUS_TEXT
	FROM
		CARS_MODULE_PERIOD_HDR H
		JOIN CARS_118A_HDR_AMEND A 
		ON H.MODULE_HDR_ID = A.MODULE_HDR_ID
		JOIN CARS_TRIBE_INFO I
		ON H.ENTITY_ID = I.TRIBE_ID
		AND H.PERIOD_ID = I.PERIOD_ID
		AND I.ALLOCATION_SIZE IN ('Small')
		AND (I.PROGRAM_477_FLAG = 0 OR I.PROGRAM_477_FLAG IS NULL)
		JOIN 
		(
			SELECT 
			S5.SUBQUES_RESP_ID, S5.SMALL_ANS_STATUS_TEXT, S5.LGMED_ANS_STATUS_TEXT
			FROM CARS_118A_SECT S1
			JOIN CARS_118A_SUBSECT S2
			ON S1.SECT_ID = S2.SECT_ID
			JOIN CARS_118A_QUES S3
			ON S2.SUBSECT_ID = S3.SUBSECT_ID
			JOIN CARS_118A_SUBQUES S4
			ON S3.QUES_ID = S4.QUES_ID
			JOIN CARS_118A_SUBQUES_RESP S5
			ON S4.SUBQUES_ID = S5.SUBQUES_ID
			AND S5.RESP_TYPE_CD <> 'INFO'
			WHERE S1.SECT_ID BETWEEN 1 AND 5
		) S
		ON 1=1
		
	WHERE A.HDR_AMEND_ID = p_HDR_AMEND_ID
	;	
	
	
	
CREATE TEMPORARY TABLE TEMP_ANS AS
SELECT  A.HDR_AMEND_ID, 12 AS SUBQUES_RESP_ID, A.ANS_BOOL, A.ANS_INTEGER, A.ANS_DEC, A.ANS_TEXT, A.ANS_DATE, A.ANS_STATUS_TEXT 
FROM CARS_TRIBE_INFO T
JOIN CARS_MODULE_PERIOD_HDR H ON T.PERIOD_ID=H.PERIOD_ID AND T.TRIBE_ID=H.ENTITY_ID 
JOIN CARS_118A_HDR_AMEND AM ON H.MODULE_HDR_ID=AM.MODULE_HDR_ID
JOIN CARS_118A_HDR_ANS A ON A.HDR_AMEND_ID=AM.HDR_AMEND_ID
WHERE T.PROGRAM_477_FLAG=0
AND A.SUBQUES_RESP_ID=1806
AND AM.HDR_AMEND_ID = p_HDR_AMEND_ID
UNION ALL 
SELECT  A.HDR_AMEND_ID, 11, A.ANS_BOOL, A.ANS_INTEGER, A.ANS_DEC, CASE WHEN A.ANS_TEXT = 'No' THEN 'No (Skip to Section 1.2)' ELSE A.ANS_TEXT END, A.ANS_DATE, A.ANS_STATUS_TEXT  
FROM CARS_TRIBE_INFO T
JOIN CARS_MODULE_PERIOD_HDR H ON T.PERIOD_ID=H.PERIOD_ID AND T.TRIBE_ID=H.ENTITY_ID 
JOIN CARS_118A_HDR_AMEND AM ON H.MODULE_HDR_ID=AM.MODULE_HDR_ID
JOIN CARS_118A_HDR_ANS A ON A.HDR_AMEND_ID=AM.HDR_AMEND_ID
WHERE T.PROGRAM_477_FLAG=0
AND A.SUBQUES_RESP_ID=1807
AND AM.HDR_AMEND_ID = p_HDR_AMEND_ID
UNION ALL 
SELECT  A.HDR_AMEND_ID, 14, A.ANS_BOOL, A.ANS_INTEGER, A.ANS_DEC, A.ANS_TEXT, A.ANS_DATE, A.ANS_STATUS_TEXT  
FROM CARS_TRIBE_INFO T
JOIN CARS_MODULE_PERIOD_HDR H ON T.PERIOD_ID=H.PERIOD_ID AND T.TRIBE_ID=H.ENTITY_ID 
JOIN CARS_118A_HDR_AMEND AM ON H.MODULE_HDR_ID=AM.MODULE_HDR_ID
JOIN CARS_118A_HDR_ANS A ON A.HDR_AMEND_ID=AM.HDR_AMEND_ID
WHERE T.PROGRAM_477_FLAG=0
AND A.SUBQUES_RESP_ID=1809
AND AM.HDR_AMEND_ID = p_HDR_AMEND_ID
UNION ALL 
SELECT  A.HDR_AMEND_ID, 61, A.ANS_BOOL, A.ANS_INTEGER, A.ANS_DEC, A.ANS_TEXT, A.ANS_DATE, A.ANS_STATUS_TEXT  
FROM CARS_TRIBE_INFO T
JOIN CARS_MODULE_PERIOD_HDR H ON T.PERIOD_ID=H.PERIOD_ID AND T.TRIBE_ID=H.ENTITY_ID 
JOIN CARS_118A_HDR_AMEND AM ON H.MODULE_HDR_ID=AM.MODULE_HDR_ID
JOIN CARS_118A_HDR_ANS A ON A.HDR_AMEND_ID=AM.HDR_AMEND_ID
WHERE T.PROGRAM_477_FLAG=0
AND A.SUBQUES_RESP_ID=1850
AND AM.HDR_AMEND_ID = p_HDR_AMEND_ID
UNION ALL 
SELECT  A.HDR_AMEND_ID, 62, A.ANS_BOOL, A.ANS_INTEGER, A.ANS_DEC, A.ANS_TEXT, A.ANS_DATE, A.ANS_STATUS_TEXT  
FROM CARS_TRIBE_INFO T
JOIN CARS_MODULE_PERIOD_HDR H ON T.PERIOD_ID=H.PERIOD_ID AND T.TRIBE_ID=H.ENTITY_ID 
JOIN CARS_118A_HDR_AMEND AM ON H.MODULE_HDR_ID=AM.MODULE_HDR_ID
JOIN CARS_118A_HDR_ANS A ON A.HDR_AMEND_ID=AM.HDR_AMEND_ID
WHERE T.PROGRAM_477_FLAG=0
AND A.SUBQUES_RESP_ID=1851
AND AM.HDR_AMEND_ID = p_HDR_AMEND_ID
;

DELETE X
FROM CARS_118A_HDR_ANS X
        LEFT JOIN
    TEMP_ANS Y ON X.HDR_AMEND_ID=Y.HDR_AMEND_ID AND X.SUBQUES_RESP_ID=Y.SUBQUES_RESP_ID
WHERE
  Y.HDR_AMEND_ID IS NOT NULL;

INSERT INTO CARS_118A_HDR_ANS( HDR_AMEND_ID, SUBQUES_RESP_ID, ANS_BOOL, ANS_INTEGER, ANS_DEC, ANS_TEXT, ANS_DATE, ANS_STATUS_TEXT)
SELECT  HDR_AMEND_ID, SUBQUES_RESP_ID, ANS_BOOL, ANS_INTEGER, ANS_DEC, ANS_TEXT, ANS_DATE, ANS_STATUS_TEXT FROM TEMP_ANS;

UPDATE CARS_118A_HDR_ANS A
JOIN (SELECT HDR_AMEND_ID FROM CARS_118A_HDR_ANS WHERE SUBQUES_RESP_ID = 12 AND ANS_TEXT = 'Yes' AND HDR_AMEND_ID = p_HDR_AMEND_ID ) B
ON A.HDR_AMEND_ID = B.HDR_AMEND_ID
SET A.ANS_STATUS_TEXT = 'NOT STARTED'
WHERE A.SUBQUES_RESP_ID = 15
;	
	
-- SP Script End
		
    -- get count for award tables	
	SET v_total_rows_inserted = ROW_COUNT() ;	
	
	 /*Log success of the SP*/
	UPDATE CARS_SP_LOG
		SET SP_STATUS_TEXT= CONCAT('Success. Rows inserted: ',v_total_rows_inserted,'; Rows deleted before process: ', v_total_rows_deleted), END_TS=NOW()
	WHERE  SP_LOG_ID=( SELECT MAX(SP_LOG_ID) FROM CARS_SP_LOG WHERE SP_NAME='CARS_118A_HDR_ANS_PROC_FOR_ONE');
	COMMIT;
END //
    
DELIMITER  ;
	
