DROP PROCEDURE IF EXISTS CARS_801_AGGN_SP_MEAN_COPAY_INCOME;
DELIMITER $$

CREATE PROCEDURE `CARS_801_AGGN_SP_MEAN_COPAY_INCOME`(IN i_aggn_ref_id INTEGER)
proc_label: BEGIN
DECLARE v_rec_cnt INTEGER DEFAULT 0 ;
DECLARE v_total_rows_deleted INTEGER DEFAULT 0; 
DECLARE v_total_rows_inserted INTEGER DEFAULT 0; 
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	    
		GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
		SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
		
		UPDATE CARS_801_SP_LOG
			SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
		WHERE SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_801_SP_LOG WHERE SP_NAME='CARS_801_AGGN_SP_MEAN_COPAY_INCOME');
			
		
	END;
	
		INSERT INTO CARS_801_SP_LOG (SP_NAME, SP_STATUS_TEXT, START_TS)
		VALUES('CARS_801_AGGN_SP_MEAN_COPAY_INCOME', 'Started', NOW());	
		

	SELECT COUNT(*) INTO v_rec_cnt FROM CARS_801_AGGN_REF WHERE  AGGN_REF_ID = i_aggn_ref_id;
 
    
    DELETE FROM CARS_801_AGGN_MEAN_COPAY_INCOME WHERE AGGN_REF_ID=i_aggn_ref_id;
	SET v_total_rows_deleted = ROW_COUNT();

DROP TEMPORARY TABLE IF EXISTS TMP_MOD_HDR_M;
CREATE TEMPORARY TABLE TMP_MOD_HDR_M AS
				    SELECT 	DISTINCT HDR.MODULE_HDR_ID 
						   
						   ,AGGN_REF_ID
						   ,HDR.ENTITY_ID
						   ,HDR.ENTITY_NAME	
						   ,HDR.FAMILY_COUNT AS FAM_MO_UNADJ_CNT
						   ,REC.FAMILY_COUNT AS FAMILY_CNT
						   ,AGGN_RF.FISCAL_YEAR 
							FROM CARS_MODULE_PERIOD_HDR HDR 
								JOIN CARS_PERIOD P 
							ON P.PERIOD_ID=HDR.PERIOD_ID 
							AND P.801_FLAG = 1
								JOIN CARS_801_REC_COUNTS REC
							ON REC.MODULE_HDR_ID=HDR.MODULE_HDR_ID
								JOIN CARS_801_AGGN_REF AGGN_RF 
							ON CAST(SUBSTR(P.PERIOD_DESC,5,4) AS INTEGER) =AGGN_RF.FISCAL_YEAR
							AND AGGN_RF.AGGN_REF_ID=i_aggn_ref_id;
							
DROP TEMPORARY TABLE IF EXISTS TMP_FAMILY_HDR;
CREATE TEMPORARY TABLE TMP_FAMILY_HDR AS
     SELECT HDR.MODULE_HDR_ID
		   ,HDR.ENTITY_ID
		   ,HDR.ENTITY_NAME
		   ,HDR.FISCAL_YEAR
		   ,HDR.FAM_MO_UNADJ_CNT
		   ,HDR.FAMILY_CNT
		   ,FAM.FAMILY_ID
		   ,FAM.MONTHLY_INCOME
		   ,FAM.REASON_CD
		   ,FAM.TOTAL_MONTHLY_COPAYMENT
		   ,CL.CALC_TOT_FAM_PAY
		FROM TMP_MOD_HDR_M HDR 
			JOIN CARS_801_FAMILY FAM 
		ON HDR.MODULE_HDR_ID=FAM.MODULE_HDR_ID
		JOIN (	SELECT  HDR.MODULE_HDR_ID
				   ,HDR.ENTITY_NAME
				   ,HDR.FISCAL_YEAR
				   ,SUM(COALESCE(TOTAL_MONTHLY_COPAYMENT,0)) AS CALC_TOT_FAM_PAY 
					FROM TMP_MOD_HDR_M HDR 
			JOIN CARS_801_FAMILY FAM 
		ON HDR.MODULE_HDR_ID=FAM.MODULE_HDR_ID
			   
			GROUP BY 1,2,3	) AS CL ON CL.MODULE_HDR_ID=HDR.MODULE_HDR_ID
		AND CL.ENTITY_NAME=HDR.ENTITY_NAME AND CL.FISCAL_YEAR=HDR.FISCAL_YEAR
        WHERE TOTAL_MONTHLY_COPAYMENT IS NOT NULL AND FAM.MONTHLY_INCOME IS NOT NULL;
		
		
     	DROP TEMPORARY TABLE IF EXISTS TMP_FAMILY_HDR_MED;
		CREATE TEMPORARY TABLE TMP_FAMILY_HDR_MED AS
		SELECT 
								 MODULE_HDR_ID
								,ENTITY_NAME
								,TOTAL_MONTHLY_COPAYMENT
								,MONTHLY_INCOME
								,REASON_CD
								,FISCAL_YEAR
								,FAMILY_CNT
								FROM TMP_FAMILY_HDR;
	 
								
		
		DROP TEMPORARY TABLE IF EXISTS TMP_FAMILY_RATIO;
		CREATE TEMPORARY TABLE TMP_FAMILY_RATIO AS
		SELECT 
		 INC.MODULE_HDR_ID
		,INC.ENTITY_NAME
		,INC.FISCAL_YEAR
		,INC.0_RATIO
		,INC.1_25_RATIO
		,1-(IFNULL(INC.0_RATIO,0)+IFNULL(INC.1_25_RATIO,0)) AS '26_50_RATIO'

		FROM 
		(
			SELECT  MODULE_HDR_ID
				   ,ENTITY_NAME
				   ,FISCAL_YEAR
				   ,COUNT(CASE WHEN TOTAL_MONTHLY_COPAYMENT=0 THEN 1 END )	/FAMILY_CNT AS 0_RATIO 
				   ,COUNT(CASE WHEN TOTAL_MONTHLY_COPAYMENT>0 THEN 1 END )  /FAMILY_CNT AS 1_25_RATIO 
			FROM TMP_FAMILY_HDR	
WHERE  REASON_CD IS NOT NULL 
					AND TOTAL_MONTHLY_COPAYMENT<=MONTHLY_INCOME AND MONTHLY_INCOME>0
					AND REASON_CD NOT IN (4,9)
			   
			GROUP BY 1,2,3						
		) INC 
		

		ORDER BY INC.ENTITY_NAME, INC.MODULE_HDR_ID; 
		/* SELECT * FROM TMP_FAMILY_RATIO; */
		
		DROP TEMPORARY TABLE IF EXISTS CARS_801_TEMP_INCOME_CAT_CAL;
		CREATE TEMPORARY TABLE CARS_801_TEMP_INCOME_CAT_CAL
						SELECT 
							 F_HDR.ENTITY_ID
							,INC_GRP.ENTITY_NAME
							,INC_GRP.FISCAL_YEAR
							,AVG(FAM_MO_UNADJ_CNT)															AVGMOSTATE	
							,AVG(IFNULL(0_RATIO,0)*FAM_MO_UNADJ_CNT )										0_AVG
							,AVG(IFNULL(1_25_RATIO,0)*FAM_MO_UNADJ_CNT)									1_25AVG
							,AVG(IFNULL(26_50_RATIO,0)*FAM_MO_UNADJ_CNT)									26_50AVG
							
							,SUM(IFNULL(0_RATIO,0)*FAM_MO_UNADJ_CNT )										0_SUM
							,SUM(IFNULL(1_25_RATIO,0)*FAM_MO_UNADJ_CNT)									1_25SUM
							,SUM(IFNULL(26_50_RATIO,0)*FAM_MO_UNADJ_CNT)									26_50SUM

						FROM (						
								
							
									SELECT  MODULE_HDR_ID
										   ,ENTITY_NAME
										   ,FISCAL_YEAR
										   ,0_RATIO    
										   ,1_25_RATIO 
										   ,26_50_RATIO
									FROM TMP_FAMILY_RATIO	
											
								) INC_GRP 
											JOIN ( SELECT 
													 MODULE_HDR_ID
													,ENTITY_ID
													,ENTITY_NAME
													,FISCAL_YEAR
													,IFNULL(FAM_MO_UNADJ_CNT,0) AS FAM_MO_UNADJ_CNT
												FROM 
												TMP_MOD_HDR_M

											)  F_HDR 
							ON INC_GRP.MODULE_HDR_ID=F_HDR.MODULE_HDR_ID
							AND INC_GRP.ENTITY_NAME=F_HDR.ENTITY_NAME
							AND INC_GRP.FISCAL_YEAR=F_HDR.FISCAL_YEAR
							

											
				
						GROUP BY 1,2,3;
		/*summation of all income categories */
		DROP TEMPORARY TABLE IF EXISTS CARS_801_TEMP_INCOME_CAT_TOT;
		CREATE TEMPORARY TABLE CARS_801_TEMP_INCOME_CAT_TOT
		SELECT
				 SUM_INCOME_CAT.ENTITY_ID
				,SUM_INCOME_CAT.ENTITY_NAME
				,SUM_INCOME_CAT.FISCAL_YEAR
				,ROUND(FACT.PFACTOR,2) PFACTOR
				/*  #,TOTFFYSTATE_VALID
				,G_INFO.AVGMOSTATE */
				,CASE WHEN FACT.PFACTOR>0 THEN ROUND(TOT_AVG*FACT.PFACTOR) ELSE NULL END  FAMADJCNT 
				

				,ROUND(SUM_INCOME_CAT.0_AVG) AS  INCOME_0_FAMILY_UNADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN ROUND(SUM_INCOME_CAT.0_AVG*FACT.PFACTOR) ELSE NULL END  INCOME_0_FAMILY_ADJ_COUNT

				,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN SUM_INCOME_CAT.TOTAL_WGHT>0 THEN ROUND(SUM_INCOME_CAT.0_SUM/SUM_INCOME_CAT.TOTAL_WGHT*100,2) ELSE 0 END ELSE NULL END  INCOME_0_FAMILY_PERCENT
				/*income category 1-500*/
				, ROUND(SUM_INCOME_CAT.1_25AVG) AS INCOME_1_25_FAMILY_UNADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN ROUND(SUM_INCOME_CAT.1_25AVG*FACT.PFACTOR)  ELSE NULL END INCOME_1_25_FAMILY_ADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN SUM_INCOME_CAT.TOTAL_WGHT>0 THEN ROUND(SUM_INCOME_CAT.1_25SUM/SUM_INCOME_CAT.TOTAL_WGHT*100,2)  ELSE 0 END ELSE NULL END INCOME_1_25_FAMILY_PERCENT
				/*income category 501-1000*/
				,ROUND(SUM_INCOME_CAT.26_50AVG) AS INCOME_26_50_FAMILY_UNADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(SUM_INCOME_CAT.26_50AVG *FACT.PFACTOR) ELSE NULL END INCOME_26_50_FAMILY_ADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN SUM_INCOME_CAT.TOTAL_WGHT>0 THEN ROUND(SUM_INCOME_CAT.26_50SUM/SUM_INCOME_CAT.TOTAL_WGHT*100,2) ELSE 0 END ELSE NULL END INCOME_26_50_FAMILY_PERCENT
				

                ,ROUND(SUM_INCOME_CAT.0_AVG+SUM_INCOME_CAT.1_25AVG+SUM_INCOME_CAT.26_50AVG) AS TOTAL_FAMILY_UNADJ_COUNT
				,ROUND((SUM_INCOME_CAT.0_AVG*FACT.PFACTOR)+(SUM_INCOME_CAT.1_25AVG*FACT.PFACTOR)+(SUM_INCOME_CAT.26_50AVG *FACT.PFACTOR)) AS TOTAL_FAMILY_ADJ_COUNT

				
				FROM
				(
				SELECT 		 ENTITY_ID
							,ENTITY_NAME
							,FISCAL_YEAR
							,AVGMOSTATE
							,(
							 0_AVG+
							1_25AVG+
							26_50AVG						   
								
							) TOT_AVG
							,0_AVG
							,1_25AVG
							,26_50AVG
							,0_SUM
							,1_25SUM
							,26_50SUM
							, (0_SUM+
							1_25SUM+
							26_50SUM) AS TOTAL_WGHT

							FROM CARS_801_TEMP_INCOME_CAT_CAL
				) SUM_INCOME_CAT 
					
					LEFT JOIN ( SELECT 
									ENTITY_ID
									,ENTITY_NAME
									,PERIOD_DESC
									,POOLING_FACTOR*.01 AS PFACTOR 
								FROM VW_CARS_801_POOLING_FACTOR FACT 
						  ) FACT
									
				ON 	FACT.PERIOD_DESC LIKE CONCAT('%',SUM_INCOME_CAT.FISCAL_YEAR)
				AND FACT.ENTITY_NAME=SUM_INCOME_CAT.ENTITY_NAME	
		
				;


				
INSERT INTO CARS_801_AGGN_MEAN_COPAY_INCOME(
    AGGN_REF_ID,
    ENTITY_ID,
    ENTITY_NAME,
	COPAY_0_FAMILY_UNADJ_COUNT,
    COPAY_0_FAMILY_ADJ_COUNT,
    COPAY_0_FAMILY_PERCENT,
	COPAY_GT_0_FAMILY_UNADJ_COUNT,
    COPAY_GT_0_FAMILY_ADJ_COUNT,
    COPAY_GT_0_FAMILY_PERCENT,	
    CAT_A_FAMILY_UNADJ_COUNT,
    CAT_A_FAMILY_ADJ_COUNT,
    CAT_A_FAMILY_PERCENT,
    TOTAL_FAMILY_UNADJ_COUNT,
    TOTAL_FAMILY_ADJ_COUNT,
    TOTAL_FAMILY_PERCENT,
	NONZERO_COPAY_FAMILY_COPAY_INCOME_PERCENT,
    ALL_FAMILY_COPAY_INCOME_PERCENT
)		

 SELECT 
 i_aggn_ref_id AS i_aggn_ref_id
 ,TOT.ENTITY_ID
,ENTITY_NAME
,INCOME_0_FAMILY_UNADJ_COUNT AS COPAY_0_INCOME_0_FAMILY_UNADJ_COUNT
,INCOME_0_FAMILY_ADJ_COUNT AS COPAY_0_INCOME_0_FAMILY_ADJ_COUNT
,INCOME_0_FAMILY_PERCENT AS COPAY_0_INCOME_0_FAMILY_PERCENT
,INCOME_1_25_FAMILY_UNADJ_COUNT AS COPAY_GT_0_FAMILY_UNADJ_COUNT
,INCOME_1_25_FAMILY_ADJ_COUNT  AS COPAY_GT_0_FAMILY_ADJ_COUNT
,INCOME_1_25_FAMILY_PERCENT AS COPAY_GT_0_FAMILY_PERCENT
,INCOME_26_50_FAMILY_UNADJ_COUNT AS CAT_A_FAMILY_UNADJ_COUNT
,INCOME_26_50_FAMILY_ADJ_COUNT AS CAT_A_FAMILY_ADJ_COUNT
,INCOME_26_50_FAMILY_PERCENT AS CAT_A_FAMILY_PERCENT
,TOTAL_FAMILY_UNADJ_COUNT
,TOTAL_FAMILY_ADJ_COUNT
,100 AS TOTAL_FAMILY_PERCENT
,ROUND(AVG_GT_COP0_RATIO*100,2) AS NONZERO_COPAY_FAMILY_COPAY_INCOME_PERCENT
,ROUND(AVG_COP0_RATIO*100,2) AS ALL_FAMILY_COPAY_INCOME_PERCENT
FROM CARS_801_TEMP_INCOME_CAT_TOT TOT

				LEFT JOIN(SELECT 
				ENTITY_ID
		   ,AVG(TOTAL_MONTHLY_COPAYMENT/MONTHLY_INCOME) AS AVG_COP0_RATIO
			
				FROM TMP_FAMILY_HDR
				WHERE TOTAL_MONTHLY_COPAYMENT<CALC_TOT_FAM_PAY AND TOTAL_MONTHLY_COPAYMENT>=0 AND TOTAL_MONTHLY_COPAYMENT<=MONTHLY_INCOME AND MONTHLY_INCOME>0
				AND REASON_CD IS NOT NULL AND REASON_CD!=4
				GROUP BY 1) AS AVG_COP0
				ON TOT.ENTITY_ID=AVG_COP0.ENTITY_ID
				
				LEFT JOIN(SELECT 
				ENTITY_ID
		   ,AVG(TOTAL_MONTHLY_COPAYMENT/MONTHLY_INCOME) AS AVG_GT_COP0_RATIO
			
				FROM TMP_FAMILY_HDR
				WHERE TOTAL_MONTHLY_COPAYMENT<CALC_TOT_FAM_PAY AND TOTAL_MONTHLY_COPAYMENT>0 AND TOTAL_MONTHLY_COPAYMENT<=MONTHLY_INCOME AND MONTHLY_INCOME>0
				AND REASON_CD IS NOT NULL AND REASON_CD!=4
				GROUP BY 1) AS AVG_COPGT
				ON TOT.ENTITY_ID=AVG_COPGT.ENTITY_ID

UNION ALL


SELECT 
 i_aggn_ref_id AS i_aggn_ref_id
,0
,'National'
,NAT_INCOME_0_FAMILY_UNADJ_COUNT
,NAT_INCOME_0_FAMILY_ADJ_COUNT 
,CASE WHEN NAT_FAM_ADJ_CNT>0 			THEN 	ROUND(NAT_INCOME_0_FAMILY_ADJ_COUNT/NAT_FAM_ADJ_CNT*100,2) 		  		ELSE 0 END NAT_INCOME_0_PCT
,NAT_INCOME_1_25_FAMILY_UNADJ_COUNT
,NAT_INCOME_1_25_FAMILY_ADJ_COUNT	

,CASE WHEN NAT_FAM_ADJ_CNT>0 			THEN 	ROUND(NAT_INCOME_1_25_FAMILY_ADJ_COUNT/NAT_FAM_ADJ_CNT*100,2) 	  		ELSE 0 END NAT_INCOME_1_25_PCT

,NAT_INCOME_26_50_FAMILY_UNADJ_COUNT
,NAT_INCOME_26_50_FAMILY_ADJ_COUNT
,CASE WHEN NAT_FAM_ADJ_CNT>0 			THEN 	ROUND(NAT_INCOME_26_50_FAMILY_ADJ_COUNT/NAT_FAM_ADJ_CNT*100,2)  		ELSE 0 END NAT_INCOME_26_50_PCT
,NAT_FAM_UNADJ_CNT
,NAT_FAM_ADJ_CNT
,100
,ROUND(AVG_COPGT.AVG_GT_COP0_RATIO,2)
,ROUND(AVG_COP0.AVG_COP0_RATIO,2)

FROM 
(
	SELECT 
         1 AS ID
		 ,SUM(INCOME_0_FAMILY_UNADJ_COUNT) 							AS NAT_INCOME_0_FAMILY_UNADJ_COUNT
		,SUM(INCOME_0_FAMILY_ADJ_COUNT) 							AS NAT_INCOME_0_FAMILY_ADJ_COUNT
		,SUM(INCOME_1_25_FAMILY_UNADJ_COUNT)						AS NAT_INCOME_1_25_FAMILY_UNADJ_COUNT 
		,SUM(INCOME_1_25_FAMILY_ADJ_COUNT)							AS NAT_INCOME_1_25_FAMILY_ADJ_COUNT
		,SUM(INCOME_26_50_FAMILY_UNADJ_COUNT) 					AS NAT_INCOME_26_50_FAMILY_UNADJ_COUNT
		,SUM(INCOME_26_50_FAMILY_ADJ_COUNT)						AS NAT_INCOME_26_50_FAMILY_ADJ_COUNT
		,(
		SUM(INCOME_0_FAMILY_ADJ_COUNT)+
		SUM(INCOME_1_25_FAMILY_ADJ_COUNT)+ 
		SUM(INCOME_26_50_FAMILY_ADJ_COUNT)) 					AS NAT_FAM_ADJ_CNT
		,(
		SUM(INCOME_0_FAMILY_UNADJ_COUNT)+
		SUM(INCOME_1_25_FAMILY_UNADJ_COUNT)+ 
		SUM(INCOME_26_50_FAMILY_UNADJ_COUNT)) 					AS NAT_FAM_UNADJ_CNT
		

	FROM CARS_801_TEMP_INCOME_CAT_TOT TOT1
	

) NAT_DT
				JOIN(SELECT 
				1 AS ID
		   ,AVG(TOTAL_MONTHLY_COPAYMENT/MONTHLY_INCOME) AS AVG_COP0_RATIO
			
				FROM TMP_FAMILY_HDR
				WHERE TOTAL_MONTHLY_COPAYMENT<CALC_TOT_FAM_PAY AND TOTAL_MONTHLY_COPAYMENT>=0 AND TOTAL_MONTHLY_COPAYMENT<=MONTHLY_INCOME AND MONTHLY_INCOME>0
				AND REASON_CD IS NOT NULL AND REASON_CD!=4
				) AS AVG_COP0
				ON NAT_DT.ID=AVG_COP0.ID
				
				JOIN(SELECT 
				1 AS ID
		   ,AVG(TOTAL_MONTHLY_COPAYMENT/MONTHLY_INCOME) AS AVG_GT_COP0_RATIO
			
				FROM TMP_FAMILY_HDR
				WHERE TOTAL_MONTHLY_COPAYMENT<CALC_TOT_FAM_PAY AND TOTAL_MONTHLY_COPAYMENT>0 AND TOTAL_MONTHLY_COPAYMENT<=MONTHLY_INCOME AND MONTHLY_INCOME>0
				AND REASON_CD IS NOT NULL AND REASON_CD!=4
				) AS AVG_COPGT
				ON NAT_DT.ID=AVG_COPGT.ID
UNION ALL
	SELECT 
		i_aggn_ref_id AS i_aggn_ref_id
		,E.ENTITY_ID		   
		,E.ENTITY_NAME		
		,NULL
		,NULL
		,NULL		
		,NULL
		,NULL
		,NULL		
		,NULL
		,NULL
		,NULL		
		,NULL
		,NULL
		,NULL		
		,NULL
		,NULL
	
     FROM CARS_ENTITY E
          LEFT OUTER JOIN CARS_801_TEMP_INCOME_CAT_TOT C
     ON E.ENTITY_ID = C.ENTITY_ID
     WHERE E.ENTITY_TYPE_CD = 'STATE-TER'
     AND C.ENTITY_ID IS NULL;

SET v_total_rows_inserted = ROW_COUNT();

DROP TEMPORARY TABLE IF EXISTS TMP_MOD_HDR_M;
DROP TEMPORARY TABLE IF EXISTS TMP_FAMILY_HDR;
DROP TEMPORARY TABLE IF EXISTS TMP_FAMILY_RATIO;
DROP TEMPORARY TABLE IF EXISTS CARS_801_TEMP_INCOME_CAT_CAL;
DROP TEMPORARY TABLE IF EXISTS CARS_801_TEMP_INCOME_CAT_TOT;

UPDATE CARS_801_SP_LOG
SET SP_STATUS_TEXT= CONCAT('Success. Rows inserted: ',v_total_rows_inserted, ' Rows Deleted :', v_total_rows_deleted), END_TS=NOW() 
WHERE  SP_LOG_ID=( SELECT MAX(SP_LOG_ID) FROM CARS_801_SP_LOG WHERE SP_NAME ='CARS_801_AGGN_SP_MEAN_COPAY_INCOME');

		
END$$
DELIMITER ;
