DROP PROCEDURE IF EXISTS CARS_CMR_REVIEW_DECISION_HISTORY;
DELIMITER $$
CREATE PROCEDURE CARS_CMR_REVIEW_DECISION_HISTORY(IN i_entity_ids TEXT,IN i_subques_ids TEXT,IN i_query_by TEXT,IN i_amend_id TEXT,IN excludeAcceptedFlag INTEGER)
proc_label: BEGIN


	DECLARE v_query_by_Text TEXT DEFAULT NULL;
	DECLARE v_Status_Text TEXT DEFAULT NULL;
    DECLARE v_sql TEXT DEFAULT NULL;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
		SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
		
		UPDATE CARS_SP_LOG
			SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
		WHERE SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_SP_LOG WHERE SP_NAME='CARS_CMR_REVIEW_DECISION_HISTORY');

			
		
	END;
	
	
	INSERT INTO CARS_SP_LOG (SP_NAME, SP_STATUS_TEXT, START_TS)
		VALUES('CARS_CMR_REVIEW_DECISION_HISTORY', 'Started', NOW());

IF TRIM(i_query_by)='returnedValidatorLeastOnceFlag' THEN 
SET v_query_by_Text=CONCAT(' AND sr.`RETURNED_CO_AT_LEAST_ONCE_FLAG` = 1 AND sr.`REVIEW_STATUS_TEXT` = ''Validation Review'' ') ;
ELSEIF  TRIM(i_query_by)='returnedGranteeLeastOnceFlag' THEN 
SET v_query_by_Text=CONCAT(' AND sr.`RETURNED_GRANTEE_LEAST_ONCE_FLAG` = 1 AND sr.`REVIEW_STATUS_TEXT` = ''Recommendation Review'' ') ;
ELSE 
SET v_query_by_Text=CONCAT(' AND sr.`RETURNED_RO_LEAST_ONCE_FLAG` = 1 AND sr.`REVIEW_STATUS_TEXT` = ''Recommendation Review'' ') ;
END IF;

IF excludeAcceptedFlag = 1 THEN SET v_Status_Text = ' AND  ha.STATUS_TEXT <> ''Accepted'' ' ;
ELSE SET v_Status_Text = '  ' ;
END IF;

SET v_sql = 
CONCAT('SELECT ROW_NUMBER() OVER() as ROW_SEQ_NUM
,e.LEAD_AGENCY_NAME AS ''Lead Agency''
,e.OGM_TRIBAL_CD AS ''Tribal Code''
,ST.ENTITY_NAME AS ''State''
,r.ENTITY_NAME AS ''Region''
,ti.ALLOCATION_SIZE AS ''Allocation''
,CONCAT(''Request #'',ha.AMEND_SEQ_NUM) AS ''Request #''
,sq.SUBQUES_NAME AS ''Question''
,sr.RETURNED_GRANTEE_LEAST_ONCE_FLAG
,sr.RETURNED_RO_LEAST_ONCE_FLAG
,sr.RETURNED_CO_AT_LEAST_ONCE_FLAG 
,sr.SUBQUES_ID
FROM `CARS_CMR_HDR_SUBQUES_REVIEW` sr
join CARS_CMR_SUBQUES sq on sq.SUBQUES_ID = sr.SUBQUES_ID
join CARS_CMR_HDR_AMEND ha on ha.HDR_AMEND_ID = sr.HDR_AMEND_ID
join VW_CARS_CMR_HDR_TRIBE_INFO ti on ti.MODULE_HDR_ID = ha.MODULE_HDR_ID
join CARS_ENTITY e on e.ENTITY_ID = ti.ENTITY_ID
JOIN CARS_ENTITY ST
ON e.ENTITY_STATE_CD = ST.ENTITY_STATE_CD AND ST.ENTITY_TYPE_CD = ''STATE-TER''
join CARS_ENTITY r on r.ENTITY_ID = e.REGION_ID
WHERE e.ENTITY_ID IN (',i_entity_ids,') AND sq.SUBQUES_ID IN (',i_subques_ids,') AND ha.HDR_AMEND_ID IN (',i_amend_id,')',v_query_by_Text,v_Status_Text);

EXECUTE IMMEDIATE v_sql;
					  
UPDATE CARS_SP_LOG
SET SP_STATUS_TEXT= 'Success', END_TS=NOW()
WHERE  SP_LOG_ID=( SELECT MAX(SP_LOG_ID) FROM CARS_SP_LOG WHERE SP_NAME = 'CARS_CMR_REVIEW_DECISION_HISTORY');
		
END$$
DELIMITER ;