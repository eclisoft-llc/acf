DROP PROCEDURE IF EXISTS CARS_CMR_REVIEW_COMMENT_REPORT;
DELIMITER $$

CREATE PROCEDURE CARS_CMR_REVIEW_COMMENT_REPORT(IN i_period_id INTEGER,IN i_amend_id TEXT,IN excludeAcceptedFlag INTEGER)
proc_label: BEGIN


	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
		SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
		
		UPDATE CARS_SP_LOG
			SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
		WHERE SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_SP_LOG WHERE SP_NAME='CARS_CMR_REVIEW_COMMENT_REPORT');

			
		
	END;
	
	
	INSERT INTO CARS_SP_LOG (SP_NAME, SP_STATUS_TEXT, START_TS)
		VALUES('CARS_CMR_REVIEW_COMMENT_REPORT', 'Started', NOW());

CREATE OR REPLACE TEMPORARY TABLE CARS_CMR_HDR_SUBQUES_REVIEW_COMMENT_TMP AS
SELECT 	C.COMMENT_TYPE_CD, 
	C.COMMENT_TEXT, 
	C.GRANTEE_VISIBLE_FLAG, 
	C.LAST_UPD_BY, 
	C.LAST_UPD_TS, 		
	C.ROLE_NAME,
	C.HDR_SUBQUES_REVIEW_ID
FROM CARS_CMR_HDR_SUBQUES_REVIEW_COMMENT C 	
WHERE EXISTS ((select TRIM(j.name) AS HDR_AMEND_ID
	from json_table(
	  replace(json_array(i_amend_id), ',', '","'),
	  '$[*]' columns (name varchar(10) path '$')
	) j WHERE TRIM(j.name)=C.HDR_AMEND_ID));

CREATE INDEX CARS_CMR_HDR_SUBQUES_REVIEW_COMMENT_TMP_IXP ON CARS_CMR_HDR_SUBQUES_REVIEW_COMMENT_TMP(HDR_SUBQUES_REVIEW_ID);
		
CREATE OR REPLACE TEMPORARY TABLE CARS_CMR_REVIEW_COMMENT_REPORT_TMP AS
SELECT  row_number() OVER() AS ROW_SEQ_NUM, 
	LEAD_AGENCY_NAME AS 'Lead Agency', 
	OGM_TRIBAL_CD AS 'Tribal Code',
	STATE AS 'State', 
	REGION AS 'Region', 
	ALLOCATION AS 'Allocation', 
	CONCAT('Request #',AMEND_SEQ_NUM) AS 'Request #',
	Question, 
	COMMENT_TYPE, 
	Comment, 
	LAST_UPD_BY, 
	LAST_UPD_TS, 
	ROLE,
	STATUS_TEXT
	FROM(
SELECT DISTINCT 
	E.ENTITY_NAME AS LEAD_AGENCY_NAME, 
	E.OGM_TRIBAL_CD,
	ST.ENTITY_NAME AS STATE, 
	R.ENTITY_NAME AS REGION, 
	I.ALLOCATION_SIZE AS ALLOCATION, 
	A.AMEND_SEQ_NUM,
	SQ.SUBQUES_NAME AS 'Question',
	C.COMMENT_TYPE_CD AS COMMENT_TYPE, 
	C.COMMENT_TEXT AS 'Comment', 
	C.LAST_UPD_BY AS LAST_UPD_BY, 
	C.LAST_UPD_TS AS LAST_UPD_TS, 
	C.ROLE_NAME AS ROLE,
	A.STATUS_TEXT
FROM
CARS_MODULE_PERIOD_HDR H
JOIN CARS_CMR_HDR_AMEND A
ON H.MODULE_HDR_ID = A.MODULE_HDR_ID AND H.PERIOD_ID=i_period_id
JOIN CARS_ENTITY E
ON H.ENTITY_ID = E.ENTITY_ID AND E.ENTITY_TYPE_CD = 'TRIBE'
JOIN CARS_TRIBE_INFO I
ON H.ENTITY_ID = I.TRIBE_ID AND H.PERIOD_ID = I.PERIOD_ID
JOIN CARS_ENTITY R
ON E.REGION_ID = R.ENTITY_ID AND R.ENTITY_TYPE_CD = 'REGION'
JOIN CARS_ENTITY ST
ON E.ENTITY_STATE_CD = ST.ENTITY_STATE_CD AND ST.ENTITY_TYPE_CD = 'STATE-TER'
JOIN CARS_CMR_HDR_SUBQUES_REVIEW W
ON A.HDR_AMEND_ID = W.HDR_AMEND_ID
JOIN CARS_CMR_HDR_SUBQUES_REVIEW_COMMENT_TMP C 
ON W.HDR_SUBQUES_REVIEW_ID = C.HDR_SUBQUES_REVIEW_ID
JOIN CARS_CMR_SUBQUES SQ ON W.SUBQUES_ID=SQ.SUBQUES_ID
JOIN CARS_CMR_QUES Q ON SQ.QUES_ID=Q.QUES_ID
JOIN CARS_CMR_SUBSECT SS
ON SS.SUBSECT_ID = Q.SUBSECT_ID
JOIN CARS_CMR_SECT S
ON S.SECT_ID = SS.SECT_ID
WHERE A.HDR_AMEND_ID IN ((select TRIM(j.name) AS HDR_AMEND_ID
	from json_table(
	  replace(json_array(i_amend_id), ',', '","'),
	  '$[*]' columns (name varchar(10) path '$')
	) j))
) AS G;

IF excludeAcceptedFlag=1 THEN	
	SELECT * FROM CARS_CMR_REVIEW_COMMENT_REPORT_TMP
	WHERE STATUS_TEXT <> 'Accepted';
		
ELSE
    SELECT * FROM CARS_CMR_REVIEW_COMMENT_REPORT_TMP;

END IF;

					  
UPDATE CARS_SP_LOG
SET SP_STATUS_TEXT= 'Success', END_TS=NOW()
WHERE  SP_LOG_ID=( SELECT MAX(SP_LOG_ID) FROM CARS_SP_LOG WHERE SP_NAME = 'CARS_CMR_REVIEW_COMMENT_REPORT');
		
END$$
DELIMITER ;