DROP PROCEDURE IF EXISTS CARS_801_AGGN_SP_PRIORITIES;
	
DELIMITER $$
CREATE PROCEDURE CARS_801_AGGN_SP_PRIORITIES( IN i_aggn_ref_id INT)
BEGIN

DECLARE v_rec_cnt INTEGER DEFAULT 0 ;
DECLARE v_total_rows_deleted INTEGER DEFAULT 0; 
DECLARE v_total_rows_inserted INTEGER DEFAULT 0; 
DECLARE v_total_national INTEGER DEFAULT 0; 

DECLARE v_spname TEXT DEFAULT '';
DECLARE v_logtext TEXT DEFAULT '';
DECLARE v_rand CHAR(7) DEFAULT '';
		
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
			BEGIN
				GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
				SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
				SET v_logtext=CONCAT('Status: Error|Parameters: i_aggn_ref_id=',i_aggn_ref_id);
				
				UPDATE CARS_801_SP_LOG
					SET SP_STATUS_TEXT=v_logtext,SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
				WHERE SP_NAME=v_spname;
				COMMIT;
			END;	

SELECT SUBSTR(CAST(RAND() * 100000000 AS VARCHAR(50)), 1, 7) INTO v_rand FROM DUAL;

SET v_spname = CONCAT('CARS_801_AGGN_SP_PRIORITIES_',v_rand);
SET v_logtext=CONCAT('Status: Started|Parameters: i_aggn_ref_id=',i_aggn_ref_id);
			
		INSERT INTO CARS_801_SP_LOG ( SP_NAME, START_TS,SP_STATUS_TEXT)
			VALUES( v_spname, NOW(),v_logtext);	
		
			

DROP TEMPORARY TABLE IF EXISTS KJS_CARS_TMP_INCOME_POVERTY_INIT_THRESH;
CREATE TEMPORARY TABLE KJS_CARS_TMP_INCOME_POVERTY_INIT_THRESH AS  
SELECT
    H.MODULE_HDR_ID, 
	H.ENTITY_NAME, 
	H.ENTITY_ID,
	F.POOLING_FACTOR,
	R.FISCAL_YEAR, 
	H.FAMILY_COUNT AS FAMILY_UNADJ_AVG_COUNT, 
	C.CHILD_COUNT,
	C.POP_SAM_CHILD_COUNT AS CHILD_UNADJ_COUNT,
	SR.POPULATION_SAMPLE_CODE
FROM CARS_MODULE_PERIOD_HDR H
JOIN CARS_PERIOD P
ON H.PERIOD_ID = P.PERIOD_ID
AND 801_FLAG = 1
JOIN CARS_801_AGGN_REF R
ON CAST(SUBSTR(P.PERIOD_DESC, 5, 4) AS INTEGER) = R.FISCAL_YEAR
AND R.AGGN_REF_ID = i_aggn_ref_id
JOIN CARS_801_REC_COUNTS C
ON H.MODULE_HDR_ID = C.MODULE_HDR_ID
JOIN VW_CARS_801_POOLING_FACTOR F
ON SUBSTR(P.PERIOD_DESC, 2, 7) = F.PERIOD_DESC
AND H.ENTITY_ID = F.ENTITY_ID
JOIN CARS_801_STATE_REF SR
ON H.ENTITY_ID = SR.ENTITY_ID
AND SUBSTR(P.PERIOD_DESC, 5, 4) = SR.FISCAL_YEAR
JOIN CARS_ENTITY E
ON H.ENTITY_ID = E.ENTITY_ID
AND E.ENTITY_TYPE_CD = 'STATE-TER' AND E.TER_FLAG <> 1 
;


DROP TEMPORARY TABLE IF EXISTS KJS_CARS_TMP_INCOME_POVERTY_UNADJ_DATA1_THRESH;
CREATE TEMPORARY TABLE KJS_CARS_TMP_INCOME_POVERTY_UNADJ_DATA1_THRESH AS  
SELECT
MODULE_HDR_ID, ENTITY_ID, ENTITY_NAME, FAMILY_ID, REASON_CD, TOTAL_MONTHLY_COPAYMENT,REP_YYYYMM,
MONTHLY_INCOME, FAMILY_SIZE, INVALID_OR_PROT_SVC_IND, CASE WHEN INVALID_OR_PROT_SVC_IND = 'P' THEN 'P' ELSE NULL END AS PROTECTIVE_SVC, 
CASE WHEN INVALID_OR_PROT_SVC_IND = 'I' THEN 'I' ELSE NULL END AS INVALID_FAM, 
ROUND(
	(MONTHLY_INCOME / 
(POVERTY_AMOUNT / 12)) * 100, 2) AS POV_PCT	

	FROM 
	(
		SELECT H.MODULE_HDR_ID, H.ENTITY_ID, H.ENTITY_NAME, F.FAMILY_ID, F.REASON_CD, F.TOTAL_MONTHLY_COPAYMENT,
		MONTHLY_INCOME, FAMILY_SIZE, REP_YYYYMM,
		CASE 
		WHEN E.FAMILY_SIZE_ERR IS NULL AND TOTAL_MONTHLY_COPAYMENT <= MONTHLY_INCOME AND MONTHLY_INCOME = 0 AND REASON_CD IS NOT NULL
		AND REASON_CD NOT IN (4,9) THEN 'Z'
		WHEN E.FAMILY_SIZE_ERR IS NOT NULL OR E.TOTAL_MONTHLY_COPAYMENT_ERR IS NOT NULL OR E.MONTHLY_INCOME_ERR IS NOT NULL OR REASON_CD IS NULL THEN 'I'
		WHEN F.REASON_CD IN (4,9) THEN 'P'
		ELSE NULL END AS INVALID_OR_PROT_SVC_IND,
		CASE 
			WHEN FAMILY_SIZE = 1 THEN SIZE_1_AMOUNT
			WHEN FAMILY_SIZE = 2 THEN SIZE_2_AMOUNT
			WHEN FAMILY_SIZE = 3 THEN SIZE_3_AMOUNT
			WHEN FAMILY_SIZE = 4 THEN SIZE_4_AMOUNT
			WHEN FAMILY_SIZE = 5 THEN SIZE_5_AMOUNT
			WHEN FAMILY_SIZE = 6 THEN SIZE_6_AMOUNT
			WHEN FAMILY_SIZE = 7 THEN SIZE_7_AMOUNT
			WHEN FAMILY_SIZE = 8 THEN SIZE_8_AMOUNT
			WHEN FAMILY_SIZE > 8 THEN SIZE_GE9_AMOUNT
		ELSE NULL END AS POVERTY_AMOUNT
			
		FROM CARS_MODULE_PERIOD_HDR H
		JOIN CARS_ENTITY EN
		ON H.ENTITY_ID = EN.ENTITY_ID
		AND EN.ENTITY_TYPE_CD = 'STATE-TER' AND EN.TER_FLAG <> 1 
		JOIN CARS_PERIOD P
		ON H.PERIOD_ID = P.PERIOD_ID
		AND 801_FLAG = 1
		JOIN CARS_801_AGGN_REF R
		ON CAST(SUBSTR(P.PERIOD_DESC, 5, 4) AS INTEGER) = R.FISCAL_YEAR
		AND R.AGGN_REF_ID = i_aggn_ref_id
		JOIN CARS_801_REC_COUNTS RC
		ON H.MODULE_HDR_ID = RC.MODULE_HDR_ID
		JOIN CARS_801_FAMILY F
		ON H.MODULE_HDR_ID = F.MODULE_HDR_ID
		LEFT OUTER JOIN CARS_801_FAMILY_ERR E
		ON F.FAMILY_ID = E.FAMILY_ID
		JOIN CARS_801_POVERTY_THRESH V
		ON SUBSTR(F.REP_YYYYMM, 1, 4) = V.CALENDAR_YEAR
		
	) C
;

CREATE INDEX IX1 ON KJS_CARS_TMP_INCOME_POVERTY_UNADJ_DATA1_THRESH (INVALID_OR_PROT_SVC_IND);

DROP TEMPORARY TABLE IF EXISTS KJS_CARS_TMP_INCOME_POVERTY_UNADJ_DATA_THRESH;
CREATE TEMPORARY TABLE KJS_CARS_TMP_INCOME_POVERTY_UNADJ_DATA_THRESH AS  
SELECT
	MODULE_HDR_ID, ENTITY_ID, ENTITY_NAME,FAMILY_ID, REP_YYYYMM, POV_PCT, INVALID_OR_PROT_SVC_IND
FROM KJS_CARS_TMP_INCOME_POVERTY_UNADJ_DATA1_THRESH
WHERE INVALID_OR_PROT_SVC_IND = 'Z' OR INVALID_OR_PROT_SVC_IND IS NULL
;

CREATE INDEX IX1 ON KJS_CARS_TMP_INCOME_POVERTY_UNADJ_DATA_THRESH (FAMILY_ID);


DROP TEMPORARY TABLE IF EXISTS KJS_WITH_CHILD;
CREATE TEMPORARY TABLE KJS_WITH_CHILD AS
SELECT
F.MODULE_HDR_ID, F.ENTITY_ID, F.ENTITY_NAME, C.CHILD_ID,
((SUBSTRING(F.REP_YYYYMM, 1, 4) * 12) + SUBSTRING(F.REP_YYYYMM,5,2)) - ((SUBSTRING(C.BIRTH_YYYYMM, 1, 4) * 12) + SUBSTRING(C.BIRTH_YYYYMM,5,2)) AS AGE_CALC,
AIAN_CD, ASIAN_CD, AA_CD, NHPI_CD, WHITE_CD, HISPANIC_CD, INVALID_OR_PROT_SVC_IND,POV_PCT,
		CASE WHEN (COALESCE(AIAN_CD, 0) + COALESCE(ASIAN_CD, 0) + COALESCE(AA_CD, 0) + COALESCE(NHPI_CD, 0) 
		+ COALESCE(WHITE_CD, 0)) BETWEEN 2 AND 5 THEN 1 ELSE 0 END AS MULTI_RACE
FROM KJS_CARS_TMP_INCOME_POVERTY_UNADJ_DATA_THRESH F
JOIN CARS_801_CHILD C
ON F.FAMILY_ID = C.FAMILY_ID
;


CREATE INDEX IX1 ON KJS_WITH_CHILD (AGE_CALC);


DROP TEMPORARY TABLE IF EXISTS KJS_UNADJ_COUNTS;
CREATE TEMPORARY TABLE KJS_UNADJ_COUNTS AS 
SELECT
MODULE_HDR_ID, ENTITY_ID, ENTITY_NAME,

COUNT(DISTINCT CHILD_ID) AS TOTAL_CHILD,
COUNT(DISTINCT(CASE WHEN POV_PCT < 100 THEN CHILD_ID ELSE NULL END)) AS TOTAL_CHILD_BELOW_POVERTY,

COUNT(DISTINCT(CASE WHEN MULTI_RACE <> 1 AND WHITE_CD = 1 AND HISPANIC_CD <> 1 THEN CHILD_ID ELSE NULL END)) AS TOTAL_WHITE_NH_CHILD,
COUNT(DISTINCT(CASE WHEN POV_PCT < 100 AND MULTI_RACE <> 1 AND WHITE_CD = 1 AND HISPANIC_CD <> 1 THEN CHILD_ID ELSE NULL END)) AS TOTAL_WHITE_NH_CHILD_BELOW_POVERTY,

COUNT(DISTINCT(CASE WHEN MULTI_RACE <> 1 AND AA_CD = 1 AND HISPANIC_CD <> 1 THEN CHILD_ID ELSE NULL END)) AS TOTAL_AA_NH_CHILD,
COUNT(DISTINCT(CASE WHEN POV_PCT < 100 AND MULTI_RACE <> 1 AND AA_CD = 1 AND HISPANIC_CD <> 1 THEN CHILD_ID ELSE NULL END)) AS TOTAL_AA_NH_CHILD_BELOW_POVERTY,

COUNT(DISTINCT(CASE WHEN MULTI_RACE <> 1 AND AIAN_CD = 1 AND HISPANIC_CD <> 1 THEN CHILD_ID ELSE NULL END)) AS TOTAL_AIAN_NH_CHILD,
COUNT(DISTINCT(CASE WHEN POV_PCT < 100 AND MULTI_RACE <> 1 AND AIAN_CD = 1 AND HISPANIC_CD <> 1 THEN CHILD_ID ELSE NULL END)) AS TOTAL_AIAN_NH_CHILD_BELOW_POVERTY,

COUNT(DISTINCT(CASE WHEN MULTI_RACE <> 1 AND ASIAN_CD = 1 AND HISPANIC_CD <> 1 THEN CHILD_ID ELSE NULL END)) AS TOTAL_ASIAN_NH_CHILD,
COUNT(DISTINCT(CASE WHEN POV_PCT < 100 AND MULTI_RACE <> 1 AND ASIAN_CD = 1 AND HISPANIC_CD <> 1 THEN CHILD_ID ELSE NULL END)) AS TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY,

COUNT(DISTINCT(CASE WHEN MULTI_RACE <> 1 AND NHPI_CD = 1 AND HISPANIC_CD <> 1 THEN CHILD_ID ELSE NULL END)) AS TOTAL_NHPI_NH_CHILD,
COUNT(DISTINCT(CASE WHEN POV_PCT < 100 AND MULTI_RACE <> 1 AND NHPI_CD = 1 AND HISPANIC_CD <> 1 THEN CHILD_ID ELSE NULL END)) AS TOTAL_NHPI_NH_CHILD_BELOW_POVERTY,

COUNT(DISTINCT(CASE WHEN MULTI_RACE = 1 AND HISPANIC_CD <> 1 THEN CHILD_ID ELSE NULL END)) AS TOTAL_MR_NH_CHILD,
COUNT(DISTINCT(CASE WHEN POV_PCT < 100 AND MULTI_RACE = 1 AND HISPANIC_CD <> 1 THEN CHILD_ID ELSE NULL END)) AS TOTAL_MR_NH_CHILD_BELOW_POVERTY,

COUNT(DISTINCT(CASE WHEN WHITE_CD <> 1 AND AA_CD <> 1 AND AIAN_CD <> 1 AND ASIAN_CD <> 1 AND NHPI_CD <> 1 AND HISPANIC_CD <> 1 
				THEN CHILD_ID ELSE NULL END)) AS TOTAL_INVALID_RACE_NH_CHILD,
COUNT(DISTINCT(CASE WHEN POV_PCT < 100 AND WHITE_CD <> 1 AND AA_CD <> 1 AND AIAN_CD <> 1 AND ASIAN_CD <> 1 AND NHPI_CD <> 1 AND HISPANIC_CD <> 1 
				THEN CHILD_ID ELSE NULL END)) AS TOTAL_INVALID_RACE_NH_CHILD_BELOW_POVERTY,
				
COUNT(DISTINCT(CASE WHEN HISPANIC_CD = 1 THEN CHILD_ID ELSE NULL END)) AS TOTAL_HISPANIC_CHILD,
COUNT(DISTINCT(CASE WHEN POV_PCT < 100 AND HISPANIC_CD = 1 THEN CHILD_ID ELSE NULL END)) AS TOTAL_HISPANIC_CHILD_BELOW_POVERTY

FROM KJS_WITH_CHILD
WHERE AGE_CALC <= 155
GROUP BY 1,2, 3
;


DROP TEMPORARY TABLE IF EXISTS KJS_UNADJ_COUNTS_AFTER_SAMPLE_LOGIC;
CREATE TEMPORARY TABLE KJS_UNADJ_COUNTS_AFTER_SAMPLE_LOGIC AS 
SELECT 
C.MODULE_HDR_ID, C.ENTITY_ID, C.ENTITY_NAME,I.POOLING_FACTOR,

CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (TOTAL_CHILD / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE TOTAL_CHILD END AS TOTAL_CHILD,
CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (TOTAL_CHILD_BELOW_POVERTY / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE TOTAL_CHILD_BELOW_POVERTY END AS TOTAL_CHILD_BELOW_POVERTY,

CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (TOTAL_WHITE_NH_CHILD / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE TOTAL_WHITE_NH_CHILD END AS TOTAL_WHITE_NH_CHILD,
CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (TOTAL_WHITE_NH_CHILD_BELOW_POVERTY / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE TOTAL_WHITE_NH_CHILD_BELOW_POVERTY END AS TOTAL_WHITE_NH_CHILD_BELOW_POVERTY,

CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (TOTAL_AA_NH_CHILD / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE TOTAL_AA_NH_CHILD END AS TOTAL_AA_NH_CHILD,
CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (TOTAL_AA_NH_CHILD_BELOW_POVERTY / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE TOTAL_AA_NH_CHILD_BELOW_POVERTY END AS TOTAL_AA_NH_CHILD_BELOW_POVERTY,

CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (TOTAL_AIAN_NH_CHILD / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE TOTAL_AIAN_NH_CHILD END AS TOTAL_AIAN_NH_CHILD,
CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (TOTAL_AIAN_NH_CHILD_BELOW_POVERTY / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE TOTAL_AIAN_NH_CHILD_BELOW_POVERTY END AS TOTAL_AIAN_NH_CHILD_BELOW_POVERTY,

CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (TOTAL_ASIAN_NH_CHILD / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE TOTAL_ASIAN_NH_CHILD END AS TOTAL_ASIAN_NH_CHILD,
CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY END AS TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY,

CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (TOTAL_NHPI_NH_CHILD / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE TOTAL_NHPI_NH_CHILD END AS TOTAL_NHPI_NH_CHILD,
CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (TOTAL_NHPI_NH_CHILD_BELOW_POVERTY / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE TOTAL_NHPI_NH_CHILD_BELOW_POVERTY END AS TOTAL_NHPI_NH_CHILD_BELOW_POVERTY,

CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (TOTAL_MR_NH_CHILD / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE TOTAL_MR_NH_CHILD END AS TOTAL_MR_NH_CHILD,
CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (TOTAL_MR_NH_CHILD_BELOW_POVERTY / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE TOTAL_MR_NH_CHILD_BELOW_POVERTY END AS TOTAL_MR_NH_CHILD_BELOW_POVERTY,

CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (TOTAL_INVALID_RACE_NH_CHILD / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE TOTAL_INVALID_RACE_NH_CHILD END AS TOTAL_INVALID_RACE_NH_CHILD,
CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (TOTAL_INVALID_RACE_NH_CHILD_BELOW_POVERTY / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE TOTAL_INVALID_RACE_NH_CHILD_BELOW_POVERTY END AS TOTAL_INVALID_RACE_NH_CHILD_BELOW_POVERTY,

CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (TOTAL_HISPANIC_CHILD / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE TOTAL_HISPANIC_CHILD END AS TOTAL_HISPANIC_CHILD,
CASE WHEN POPULATION_SAMPLE_CODE = 'S' THEN (TOTAL_HISPANIC_CHILD_BELOW_POVERTY / CHILD_COUNT) * CHILD_UNADJ_COUNT ELSE TOTAL_HISPANIC_CHILD_BELOW_POVERTY END AS TOTAL_HISPANIC_CHILD_BELOW_POVERTY

FROM KJS_UNADJ_COUNTS C
JOIN KJS_CARS_TMP_INCOME_POVERTY_INIT_THRESH I
ON C.MODULE_HDR_ID = I.MODULE_HDR_ID
;

DROP TEMPORARY TABLE IF EXISTS KJS_ADJ_COUNTS;
CREATE TEMPORARY TABLE KJS_ADJ_COUNTS AS 
SELECT 
MODULE_HDR_ID, ENTITY_ID, ENTITY_NAME,

TOTAL_CHILD * POOLING_FACTOR * .01 AS TOTAL_CHILD_ADJ,
TOTAL_CHILD AS TOTAL_CHILD_UNADJ,
TOTAL_CHILD_BELOW_POVERTY * POOLING_FACTOR * .01 AS TOTAL_CHILD_BELOW_POVERTY_ADJ,
TOTAL_CHILD_BELOW_POVERTY AS TOTAL_CHILD_BELOW_POVERTY_UNADJ,

TOTAL_WHITE_NH_CHILD * POOLING_FACTOR * .01 AS TOTAL_WHITE_NH_CHILD_ADJ,
TOTAL_WHITE_NH_CHILD AS TOTAL_WHITE_NH_CHILD_UNADJ,
TOTAL_WHITE_NH_CHILD_BELOW_POVERTY * POOLING_FACTOR * .01 AS TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_ADJ,
TOTAL_WHITE_NH_CHILD_BELOW_POVERTY AS TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_UNADJ,

TOTAL_AA_NH_CHILD * POOLING_FACTOR * .01 AS TOTAL_AA_NH_CHILD_ADJ,
TOTAL_AA_NH_CHILD AS TOTAL_AA_NH_CHILD_UNADJ,
TOTAL_AA_NH_CHILD_BELOW_POVERTY * POOLING_FACTOR * .01 AS TOTAL_AA_NH_CHILD_BELOW_POVERTY_ADJ,
TOTAL_AA_NH_CHILD_BELOW_POVERTY AS TOTAL_AA_NH_CHILD_BELOW_POVERTY_UNADJ,

TOTAL_AIAN_NH_CHILD * POOLING_FACTOR * .01 AS TOTAL_AIAN_NH_CHILD_ADJ,
TOTAL_AIAN_NH_CHILD AS TOTAL_AIAN_NH_CHILD_UNADJ,
TOTAL_AIAN_NH_CHILD_BELOW_POVERTY * POOLING_FACTOR * .01 AS TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_ADJ,
TOTAL_AIAN_NH_CHILD_BELOW_POVERTY AS TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_UNADJ,

TOTAL_ASIAN_NH_CHILD * POOLING_FACTOR * .01 AS TOTAL_ASIAN_NH_CHILD_ADJ,
TOTAL_ASIAN_NH_CHILD AS TOTAL_ASIAN_NH_CHILD_UNADJ,
TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY * POOLING_FACTOR * .01 AS TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_ADJ,
TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY AS TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_UNADJ,

TOTAL_NHPI_NH_CHILD * POOLING_FACTOR * .01 AS TOTAL_NHPI_NH_CHILD_ADJ,
TOTAL_NHPI_NH_CHILD AS TOTAL_NHPI_NH_CHILD_UNADJ,
TOTAL_NHPI_NH_CHILD_BELOW_POVERTY * POOLING_FACTOR * .01 AS TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_ADJ,
TOTAL_NHPI_NH_CHILD_BELOW_POVERTY AS TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_UNADJ,

TOTAL_MR_NH_CHILD * POOLING_FACTOR * .01 AS TOTAL_MR_NH_CHILD_ADJ,
TOTAL_MR_NH_CHILD AS TOTAL_MR_NH_CHILD_UNADJ,
TOTAL_MR_NH_CHILD_BELOW_POVERTY * POOLING_FACTOR * .01 AS TOTAL_MR_NH_CHILD_BELOW_POVERTY_ADJ,
TOTAL_MR_NH_CHILD_BELOW_POVERTY AS TOTAL_MR_NH_CHILD_BELOW_POVERTY_UNADJ,

TOTAL_INVALID_RACE_NH_CHILD * POOLING_FACTOR * .01 AS TOTAL_INVALID_RACE_NH_CHILD_ADJ,
TOTAL_INVALID_RACE_NH_CHILD AS TOTAL_INVALID_RACE_NH_CHILD_UNADJ,
TOTAL_INVALID_RACE_NH_CHILD_BELOW_POVERTY * POOLING_FACTOR * .01 AS TOTAL_INVALID_RACE_NH_CHILD_POVERTY_ADJ,
TOTAL_INVALID_RACE_NH_CHILD_BELOW_POVERTY AS TOTAL_INVALID_RACE_NH_CHILD_POVERTY_UNADJ,

TOTAL_HISPANIC_CHILD * POOLING_FACTOR * .01 AS TOTAL_HISPANIC_CHILD_ADJ,
TOTAL_HISPANIC_CHILD AS TOTAL_HISPANIC_CHILD_UNADJ,
TOTAL_HISPANIC_CHILD_BELOW_POVERTY * POOLING_FACTOR * .01 AS TOTAL_HISPANIC_CHILD_BELOW_POVERTY_ADJ,
TOTAL_HISPANIC_CHILD_BELOW_POVERTY AS TOTAL_HISPANIC_CHILD_BELOW_POVERTY_UNADJ


FROM KJS_UNADJ_COUNTS_AFTER_SAMPLE_LOGIC;

DROP TEMPORARY TABLE IF EXISTS KJS_ADJ_AVG;
CREATE TEMPORARY TABLE KJS_ADJ_AVG AS 
SELECT 
ENTITY_ID, ENTITY_NAME,

ROUND(AVG(TOTAL_CHILD_ADJ), 0) AS TOTAL_CHILD_ADJ, ROUND(AVG(TOTAL_CHILD_BELOW_POVERTY_ADJ), 0) AS TOTAL_CHILD_BELOW_POVERTY_ADJ, 
ROUND(AVG(TOTAL_CHILD_UNADJ), 0) AS TOTAL_CHILD_UNADJ, ROUND(AVG(TOTAL_CHILD_BELOW_POVERTY_UNADJ), 0) AS TOTAL_CHILD_BELOW_POVERTY_UNADJ, 

ROUND(AVG(TOTAL_WHITE_NH_CHILD_ADJ), 0) AS TOTAL_WHITE_NH_CHILD_ADJ, ROUND(AVG(TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_ADJ), 0) AS TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_ADJ, 

ROUND(AVG(TOTAL_WHITE_NH_CHILD_UNADJ), 0) AS TOTAL_WHITE_NH_CHILD_UNADJ, ROUND(AVG(TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_UNADJ), 0) AS TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_UNADJ, 

ROUND(AVG(TOTAL_AA_NH_CHILD_ADJ), 0) AS TOTAL_AA_NH_CHILD_ADJ, ROUND(AVG(TOTAL_AA_NH_CHILD_BELOW_POVERTY_ADJ), 0) AS TOTAL_AA_NH_CHILD_BELOW_POVERTY_ADJ, 

ROUND(AVG(TOTAL_AA_NH_CHILD_UNADJ), 0) AS TOTAL_AA_NH_CHILD_UNADJ, ROUND(AVG(TOTAL_AA_NH_CHILD_BELOW_POVERTY_UNADJ), 0) AS TOTAL_AA_NH_CHILD_BELOW_POVERTY_UNADJ, 

ROUND(AVG(TOTAL_AIAN_NH_CHILD_ADJ), 0) AS TOTAL_AIAN_NH_CHILD_ADJ, ROUND(AVG(TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_ADJ), 0) AS TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_ADJ, 

ROUND(AVG(TOTAL_AIAN_NH_CHILD_UNADJ), 0) AS TOTAL_AIAN_NH_CHILD_UNADJ, ROUND(AVG(TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_UNADJ), 0) AS TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_UNADJ, 

ROUND(AVG(TOTAL_ASIAN_NH_CHILD_ADJ), 0) AS TOTAL_ASIAN_NH_CHILD_ADJ, ROUND(AVG(TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_ADJ), 0) AS TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_ADJ, 

ROUND(AVG(TOTAL_ASIAN_NH_CHILD_UNADJ), 0) AS TOTAL_ASIAN_NH_CHILD_UNADJ, ROUND(AVG(TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_UNADJ), 0) AS TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_UNADJ, 

ROUND(AVG(TOTAL_NHPI_NH_CHILD_ADJ), 0) AS TOTAL_NHPI_NH_CHILD_ADJ, ROUND(AVG(TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_ADJ), 0) AS TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_ADJ, 

ROUND(AVG(TOTAL_NHPI_NH_CHILD_UNADJ), 0) AS TOTAL_NHPI_NH_CHILD_UNADJ, ROUND(AVG(TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_UNADJ), 0) AS TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_UNADJ,

ROUND(AVG(TOTAL_MR_NH_CHILD_ADJ), 0) AS TOTAL_MR_NH_CHILD_ADJ, ROUND(AVG(TOTAL_MR_NH_CHILD_BELOW_POVERTY_ADJ), 0) AS TOTAL_MR_NH_CHILD_BELOW_POVERTY_ADJ, 

ROUND(AVG(TOTAL_MR_NH_CHILD_UNADJ), 0) AS TOTAL_MR_NH_CHILD_UNADJ, ROUND(AVG(TOTAL_MR_NH_CHILD_BELOW_POVERTY_UNADJ), 0) AS TOTAL_MR_NH_CHILD_BELOW_POVERTY_UNADJ, 

ROUND(AVG(TOTAL_INVALID_RACE_NH_CHILD_ADJ), 0) AS TOTAL_INVALID_RACE_NH_CHILD_ADJ, ROUND(AVG(TOTAL_INVALID_RACE_NH_CHILD_POVERTY_ADJ), 0) AS TOTAL_INVALID_RACE_NH_CHILD_POVERTY_ADJ,

ROUND(AVG(TOTAL_INVALID_RACE_NH_CHILD_UNADJ), 0) AS TOTAL_INVALID_RACE_NH_CHILD_UNADJ, ROUND(AVG(TOTAL_INVALID_RACE_NH_CHILD_POVERTY_UNADJ), 0) AS TOTAL_INVALID_RACE_NH_CHILD_POVERTY_UNADJ,

ROUND(AVG(TOTAL_HISPANIC_CHILD_ADJ), 0) AS TOTAL_HISPANIC_CHILD_ADJ, ROUND(AVG(TOTAL_HISPANIC_CHILD_BELOW_POVERTY_ADJ), 0) AS TOTAL_HISPANIC_CHILD_BELOW_POVERTY_ADJ,

ROUND(AVG(TOTAL_HISPANIC_CHILD_UNADJ), 0) AS TOTAL_HISPANIC_CHILD_UNADJ, ROUND(AVG(TOTAL_HISPANIC_CHILD_BELOW_POVERTY_UNADJ), 0) AS TOTAL_HISPANIC_CHILD_BELOW_POVERTY_UNADJ

FROM KJS_ADJ_COUNTS
GROUP BY ENTITY_ID, ENTITY_NAME
;

DROP TEMPORARY TABLE IF EXISTS KJS_ADJ_NATIONAL;
CREATE TEMPORARY TABLE KJS_ADJ_NATIONAL AS 
SELECT
0 AS ENTITY_ID, 'National' AS ENTITY_NAME,

SUM(TOTAL_CHILD_ADJ) AS TOTAL_CHILD_ADJ, SUM(TOTAL_CHILD_BELOW_POVERTY_ADJ) AS TOTAL_CHILD_BELOW_POVERTY_ADJ, 

SUM(TOTAL_CHILD_UNADJ) AS TOTAL_CHILD_UNADJ, SUM(TOTAL_CHILD_BELOW_POVERTY_UNADJ) AS TOTAL_CHILD_BELOW_POVERTY_UNADJ, 

SUM(TOTAL_WHITE_NH_CHILD_ADJ) AS TOTAL_WHITE_NH_CHILD_ADJ, SUM(TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_ADJ) AS TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_ADJ, 

SUM(TOTAL_WHITE_NH_CHILD_UNADJ) AS TOTAL_WHITE_NH_CHILD_UNADJ, SUM(TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_UNADJ) AS TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_UNADJ, 

SUM(TOTAL_AA_NH_CHILD_ADJ) AS TOTAL_AA_NH_CHILD_ADJ, SUM(TOTAL_AA_NH_CHILD_BELOW_POVERTY_ADJ) AS TOTAL_AA_NH_CHILD_BELOW_POVERTY_ADJ, 

SUM(TOTAL_AA_NH_CHILD_UNADJ) AS TOTAL_AA_NH_CHILD_UNADJ, SUM(TOTAL_AA_NH_CHILD_BELOW_POVERTY_UNADJ) AS TOTAL_AA_NH_CHILD_BELOW_POVERTY_UNADJ, 

SUM(TOTAL_AIAN_NH_CHILD_ADJ) AS TOTAL_AIAN_NH_CHILD_ADJ, SUM(TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_ADJ) AS TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_ADJ, 

SUM(TOTAL_AIAN_NH_CHILD_UNADJ) AS TOTAL_AIAN_NH_CHILD_UNADJ, SUM(TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_UNADJ) AS TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_UNADJ, 

SUM(TOTAL_ASIAN_NH_CHILD_ADJ) AS TOTAL_ASIAN_NH_CHILD_ADJ, SUM(TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_ADJ) AS TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_ADJ, 

SUM(TOTAL_ASIAN_NH_CHILD_UNADJ) AS TOTAL_ASIAN_NH_CHILD_UNADJ, SUM(TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_UNADJ) AS TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_UNADJ, 

SUM(TOTAL_NHPI_NH_CHILD_ADJ) AS TOTAL_NHPI_NH_CHILD_ADJ, SUM(TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_ADJ) AS TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_ADJ, 

SUM(TOTAL_NHPI_NH_CHILD_UNADJ) AS TOTAL_NHPI_NH_CHILD_UNADJ, SUM(TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_UNADJ) AS TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_UNADJ,

SUM(TOTAL_MR_NH_CHILD_ADJ) AS TOTAL_MR_NH_CHILD_ADJ, SUM(TOTAL_MR_NH_CHILD_BELOW_POVERTY_ADJ) AS TOTAL_MR_NH_CHILD_BELOW_POVERTY_ADJ, 

SUM(TOTAL_MR_NH_CHILD_UNADJ) AS TOTAL_MR_NH_CHILD_UNADJ, SUM(TOTAL_MR_NH_CHILD_BELOW_POVERTY_UNADJ) AS TOTAL_MR_NH_CHILD_BELOW_POVERTY_UNADJ, 

SUM(TOTAL_INVALID_RACE_NH_CHILD_ADJ) AS TOTAL_INVALID_RACE_NH_CHILD_ADJ, SUM(TOTAL_INVALID_RACE_NH_CHILD_POVERTY_ADJ) AS TOTAL_INVALID_RACE_NH_CHILD_POVERTY_ADJ,

SUM(TOTAL_INVALID_RACE_NH_CHILD_UNADJ) AS TOTAL_INVALID_RACE_NH_CHILD_UNADJ, SUM(TOTAL_INVALID_RACE_NH_CHILD_POVERTY_UNADJ) AS TOTAL_INVALID_RACE_NH_CHILD_POVERTY_UNADJ,

SUM(TOTAL_HISPANIC_CHILD_ADJ) AS TOTAL_HISPANIC_CHILD_ADJ, SUM(TOTAL_HISPANIC_CHILD_BELOW_POVERTY_ADJ) AS TOTAL_HISPANIC_CHILD_BELOW_POVERTY_ADJ,

SUM(TOTAL_HISPANIC_CHILD_UNADJ) AS TOTAL_HISPANIC_CHILD_UNADJ, SUM(TOTAL_HISPANIC_CHILD_BELOW_POVERTY_UNADJ) AS TOTAL_HISPANIC_CHILD_BELOW_POVERTY_UNADJ

FROM KJS_ADJ_AVG
;

DROP TEMPORARY TABLE IF EXISTS CARS_TMP_PRIORITIES_PCT;
CREATE TEMPORARY TABLE CARS_TMP_PRIORITIES_PCT AS  
SELECT
ENTITY_ID, ENTITY_NAME,
ROUND((TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_ADJ / TOTAL_CHILD_BELOW_POVERTY_ADJ) * 100, 2) AS TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_PCT,
ROUND((TOTAL_AA_NH_CHILD_BELOW_POVERTY_ADJ / TOTAL_CHILD_BELOW_POVERTY_ADJ) * 100, 2) AS TOTAL_AA_NH_CHILD_BELOW_POVERTY_PCT,
ROUND((TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_ADJ / TOTAL_CHILD_BELOW_POVERTY_ADJ) * 100, 2) AS TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_PCT,
ROUND((TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_ADJ / TOTAL_CHILD_BELOW_POVERTY_ADJ) * 100, 2) AS TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_PCT,
ROUND((TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_ADJ / TOTAL_CHILD_BELOW_POVERTY_ADJ) * 100, 2) AS TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_PCT,
ROUND((TOTAL_MR_NH_CHILD_BELOW_POVERTY_ADJ / TOTAL_CHILD_BELOW_POVERTY_ADJ) * 100, 2) AS TOTAL_MR_NH_CHILD_BELOW_POVERTY_PCT,
ROUND((TOTAL_INVALID_RACE_NH_CHILD_POVERTY_ADJ / TOTAL_CHILD_BELOW_POVERTY_ADJ) * 100, 2) AS TOTAL_INVALID_RACE_NH_CHILD_POVERTY_PCT,
ROUND((TOTAL_HISPANIC_CHILD_BELOW_POVERTY_ADJ / TOTAL_CHILD_BELOW_POVERTY_ADJ) * 100, 2) AS TOTAL_HISPANIC_CHILD_BELOW_POVERTY_PCT,

ROUND((TOTAL_WHITE_NH_CHILD_ADJ / TOTAL_CHILD_ADJ) * 100, 2) AS TOTAL_WHITE_NH_CHILD_PCT,
ROUND((TOTAL_AA_NH_CHILD_ADJ / TOTAL_CHILD_ADJ) * 100, 2) AS TOTAL_AA_NH_CHILD_PCT,
ROUND((TOTAL_AIAN_NH_CHILD_ADJ / TOTAL_CHILD_ADJ) * 100, 2) AS TOTAL_AIAN_NH_CHILD_PCT,
ROUND((TOTAL_ASIAN_NH_CHILD_ADJ / TOTAL_CHILD_ADJ) * 100, 2) AS TOTAL_ASIAN_NH_CHILD_PCT,
ROUND((TOTAL_NHPI_NH_CHILD_ADJ / TOTAL_CHILD_ADJ) * 100, 2) AS TOTAL_NHPI_NH_CHILD_PCT,
ROUND((TOTAL_MR_NH_CHILD_ADJ / TOTAL_CHILD_ADJ) * 100, 2) AS TOTAL_MR_NH_CHILD_PCT,
ROUND((TOTAL_INVALID_RACE_NH_CHILD_ADJ / TOTAL_CHILD_ADJ) * 100, 2) AS TOTAL_INVALID_RACE_NH_CHILD_PCT,
ROUND((TOTAL_HISPANIC_CHILD_ADJ / TOTAL_CHILD_ADJ) * 100, 2) AS TOTAL_HISPANIC_CHILD_PCT,

CASE WHEN TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_ADJ IS NULL THEN NULL ELSE 100.00 END AS TOTAL_CHILD_BELOW_POVERTY_PERCENT, /* IF POOLING FACTOR IS NULL */
CASE WHEN TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_ADJ IS NULL THEN NULL ELSE 100.00 END AS TOTAL_CHILD_PERCENT /* IF POOLING FACTOR IS NULL */
FROM KJS_ADJ_AVG

UNION ALL

SELECT
ENTITY_ID, ENTITY_NAME, 
ROUND((TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_ADJ / TOTAL_CHILD_BELOW_POVERTY_ADJ) * 100, 2) AS TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_PCT,
ROUND((TOTAL_AA_NH_CHILD_BELOW_POVERTY_ADJ / TOTAL_CHILD_BELOW_POVERTY_ADJ) * 100, 2) AS TOTAL_AA_NH_CHILD_BELOW_POVERTY_PCT,
ROUND((TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_ADJ / TOTAL_CHILD_BELOW_POVERTY_ADJ) * 100, 2) AS TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_PCT,
ROUND((TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_ADJ / TOTAL_CHILD_BELOW_POVERTY_ADJ) * 100, 2) AS TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_PCT,
ROUND((TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_ADJ / TOTAL_CHILD_BELOW_POVERTY_ADJ) * 100, 2) AS TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_PCT,
ROUND((TOTAL_MR_NH_CHILD_BELOW_POVERTY_ADJ / TOTAL_CHILD_BELOW_POVERTY_ADJ) * 100, 2) AS TOTAL_MR_NH_CHILD_BELOW_POVERTY_PCT,
ROUND((TOTAL_INVALID_RACE_NH_CHILD_POVERTY_ADJ / TOTAL_CHILD_BELOW_POVERTY_ADJ) * 100, 2) AS TOTAL_INVALID_RACE_NH_CHILD_POVERTY_PCT,
ROUND((TOTAL_HISPANIC_CHILD_BELOW_POVERTY_ADJ / TOTAL_CHILD_BELOW_POVERTY_ADJ) * 100, 2) AS TOTAL_HISPANIC_CHILD_BELOW_POVERTY_PCT,

ROUND((TOTAL_WHITE_NH_CHILD_ADJ / TOTAL_CHILD_ADJ) * 100, 2) AS TOTAL_WHITE_NH_CHILD_PCT,
ROUND((TOTAL_AA_NH_CHILD_ADJ / TOTAL_CHILD_ADJ) * 100, 2) AS TOTAL_AA_NH_CHILD_PCT,
ROUND((TOTAL_AIAN_NH_CHILD_ADJ / TOTAL_CHILD_ADJ) * 100, 2) AS TOTAL_AIAN_NH_CHILD_PCT,
ROUND((TOTAL_ASIAN_NH_CHILD_ADJ / TOTAL_CHILD_ADJ) * 100, 2) AS TOTAL_ASIAN_NH_CHILD_PCT,
ROUND((TOTAL_NHPI_NH_CHILD_ADJ / TOTAL_CHILD_ADJ) * 100, 2) AS TOTAL_NHPI_NH_CHILD_PCT,
ROUND((TOTAL_MR_NH_CHILD_ADJ / TOTAL_CHILD_ADJ) * 100, 2) AS TOTAL_MR_NH_CHILD_PCT,
ROUND((TOTAL_INVALID_RACE_NH_CHILD_ADJ / TOTAL_CHILD_ADJ) * 100, 2) AS TOTAL_INVALID_RACE_NH_CHILD_PCT,
ROUND((TOTAL_HISPANIC_CHILD_ADJ / TOTAL_CHILD_ADJ) * 100, 2) AS TOTAL_HISPANIC_CHILD_PCT,
100.00 AS TOTAL_CHILD_BELOW_POVERTY_PERCENT,
100.00 AS TOTAL_CHILD_PERCENT
FROM KJS_ADJ_NATIONAL;

INSERT INTO CARS_801_AGGN_PRIORITIES
(
  AGGN_REF_ID,
  ENTITY_ID,
  ENTITY_NAME,
  TOTAL_INVALID_RACE_NH_CHILD_POVERTY_UNADJ,
  TOTAL_INVALID_RACE_NH_CHILD_POVERTY_ADJ,
  TOTAL_INVALID_RACE_NH_CHILD_UNADJ,
  TOTAL_INVALID_RACE_NH_CHILD_ADJ,  
  TOTAL_INVALID_RACE_NH_CHILD_POVERTY_PCT,
  TOTAL_INVALID_RACE_NH_CHILD_PCT,  
  TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_AIAN_NH_CHILD_ADJ,
  TOTAL_AIAN_NH_CHILD_UNADJ,  
  TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_PCT,
  TOTAL_AIAN_NH_CHILD_PCT,  
  TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_UNADJ,  
  TOTAL_ASIAN_NH_CHILD_ADJ,
  TOTAL_ASIAN_NH_CHILD_UNADJ,  
  TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_PCT,
  TOTAL_ASIAN_NH_CHILD_PCT,  
  TOTAL_AA_NH_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_AA_NH_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_AA_NH_CHILD_ADJ,
  TOTAL_AA_NH_CHILD_UNADJ,
  TOTAL_AA_NH_CHILD_BELOW_POVERTY_PCT,
  TOTAL_AA_NH_CHILD_PCT,  
  TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_NHPI_NH_CHILD_ADJ,
  TOTAL_NHPI_NH_CHILD_UNADJ,
  TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_PCT,
  TOTAL_NHPI_NH_CHILD_PCT,  
  TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_WHITE_NH_CHILD_ADJ,
  TOTAL_WHITE_NH_CHILD_UNADJ,
  TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_PCT,
  TOTAL_WHITE_NH_CHILD_PCT,  
  TOTAL_MR_NH_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_MR_NH_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_MR_NH_CHILD_ADJ,
  TOTAL_MR_NH_CHILD_UNADJ,
  TOTAL_MR_NH_CHILD_BELOW_POVERTY_PCT,
  TOTAL_MR_NH_CHILD_PCT,  
  TOTAL_HISPANIC_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_HISPANIC_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_HISPANIC_CHILD_ADJ,
  TOTAL_HISPANIC_CHILD_UNADJ,
  TOTAL_HISPANIC_CHILD_BELOW_POVERTY_PCT,
  TOTAL_HISPANIC_CHILD_PCT,  
  TOTAL_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_CHILD_ADJ,
  TOTAL_CHILD_UNADJ,
  TOTAL_CHILD_BELOW_POVERTY_PERCENT,
  TOTAL_CHILD_PERCENT
)
SELECT
i_aggn_ref_id,
A.ENTITY_ID, 
A.ENTITY_NAME, 
  TOTAL_INVALID_RACE_NH_CHILD_POVERTY_UNADJ,
  TOTAL_INVALID_RACE_NH_CHILD_POVERTY_ADJ,
  TOTAL_INVALID_RACE_NH_CHILD_UNADJ,
  TOTAL_INVALID_RACE_NH_CHILD_ADJ,  
  TOTAL_INVALID_RACE_NH_CHILD_POVERTY_PCT,
  TOTAL_INVALID_RACE_NH_CHILD_PCT,  
  TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_AIAN_NH_CHILD_ADJ,
  TOTAL_AIAN_NH_CHILD_UNADJ,  
  TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_PCT,
  TOTAL_AIAN_NH_CHILD_PCT,  
  TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_UNADJ,  
  TOTAL_ASIAN_NH_CHILD_ADJ,
  TOTAL_ASIAN_NH_CHILD_UNADJ,  
  TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_PCT,
  TOTAL_ASIAN_NH_CHILD_PCT,  
  TOTAL_AA_NH_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_AA_NH_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_AA_NH_CHILD_ADJ,
  TOTAL_AA_NH_CHILD_UNADJ,
  TOTAL_AA_NH_CHILD_BELOW_POVERTY_PCT,
  TOTAL_AA_NH_CHILD_PCT,  
  TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_NHPI_NH_CHILD_ADJ,
  TOTAL_NHPI_NH_CHILD_UNADJ,
  TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_PCT,
  TOTAL_NHPI_NH_CHILD_PCT,  
  TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_WHITE_NH_CHILD_ADJ,
  TOTAL_WHITE_NH_CHILD_UNADJ,
  TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_PCT,
  TOTAL_WHITE_NH_CHILD_PCT,  
  TOTAL_MR_NH_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_MR_NH_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_MR_NH_CHILD_ADJ,
  TOTAL_MR_NH_CHILD_UNADJ,
  TOTAL_MR_NH_CHILD_BELOW_POVERTY_PCT,
  TOTAL_MR_NH_CHILD_PCT,  
  TOTAL_HISPANIC_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_HISPANIC_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_HISPANIC_CHILD_ADJ,
  TOTAL_HISPANIC_CHILD_UNADJ,
  TOTAL_HISPANIC_CHILD_BELOW_POVERTY_PCT,
  TOTAL_HISPANIC_CHILD_PCT,  
  TOTAL_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_CHILD_ADJ,
  TOTAL_CHILD_UNADJ,
  TOTAL_CHILD_BELOW_POVERTY_PERCENT,
  TOTAL_CHILD_PERCENT

FROM KJS_ADJ_AVG A
JOIN CARS_TMP_PRIORITIES_PCT P
ON A.ENTITY_ID = P.ENTITY_ID

UNION ALL 

SELECT
i_aggn_ref_id,
A.ENTITY_ID, 
A.ENTITY_NAME, 
  TOTAL_INVALID_RACE_NH_CHILD_POVERTY_UNADJ,
  TOTAL_INVALID_RACE_NH_CHILD_POVERTY_ADJ,
  TOTAL_INVALID_RACE_NH_CHILD_UNADJ,
  TOTAL_INVALID_RACE_NH_CHILD_ADJ,  
  TOTAL_INVALID_RACE_NH_CHILD_POVERTY_PCT,
  TOTAL_INVALID_RACE_NH_CHILD_PCT,  
  TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_AIAN_NH_CHILD_ADJ,
  TOTAL_AIAN_NH_CHILD_UNADJ,  
  TOTAL_AIAN_NH_CHILD_BELOW_POVERTY_PCT,
  TOTAL_AIAN_NH_CHILD_PCT,  
  TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_UNADJ,  
  TOTAL_ASIAN_NH_CHILD_ADJ,
  TOTAL_ASIAN_NH_CHILD_UNADJ,  
  TOTAL_ASIAN_NH_CHILD_BELOW_POVERTY_PCT,
  TOTAL_ASIAN_NH_CHILD_PCT,  
  TOTAL_AA_NH_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_AA_NH_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_AA_NH_CHILD_ADJ,
  TOTAL_AA_NH_CHILD_UNADJ,
  TOTAL_AA_NH_CHILD_BELOW_POVERTY_PCT,
  TOTAL_AA_NH_CHILD_PCT,  
  TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_NHPI_NH_CHILD_ADJ,
  TOTAL_NHPI_NH_CHILD_UNADJ,
  TOTAL_NHPI_NH_CHILD_BELOW_POVERTY_PCT,
  TOTAL_NHPI_NH_CHILD_PCT,  
  TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_WHITE_NH_CHILD_ADJ,
  TOTAL_WHITE_NH_CHILD_UNADJ,
  TOTAL_WHITE_NH_CHILD_BELOW_POVERTY_PCT,
  TOTAL_WHITE_NH_CHILD_PCT,  
  TOTAL_MR_NH_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_MR_NH_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_MR_NH_CHILD_ADJ,
  TOTAL_MR_NH_CHILD_UNADJ,
  TOTAL_MR_NH_CHILD_BELOW_POVERTY_PCT,
  TOTAL_MR_NH_CHILD_PCT,  
  TOTAL_HISPANIC_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_HISPANIC_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_HISPANIC_CHILD_ADJ,
  TOTAL_HISPANIC_CHILD_UNADJ,
  TOTAL_HISPANIC_CHILD_BELOW_POVERTY_PCT,
  TOTAL_HISPANIC_CHILD_PCT,  
  TOTAL_CHILD_BELOW_POVERTY_ADJ,
  TOTAL_CHILD_BELOW_POVERTY_UNADJ,
  TOTAL_CHILD_ADJ,
  TOTAL_CHILD_UNADJ,
  TOTAL_CHILD_BELOW_POVERTY_PERCENT,
  TOTAL_CHILD_PERCENT
FROM KJS_ADJ_NATIONAL A
JOIN CARS_TMP_PRIORITIES_PCT P
ON A.ENTITY_ID = P.ENTITY_ID

UNION ALL
        
SELECT 
i_aggn_ref_id, 
E.ENTITY_ID,
E.ENTITY_NAME,  
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL,
NULL
FROM CARS_ENTITY E
LEFT OUTER JOIN KJS_ADJ_AVG C
ON E.ENTITY_ID = C.ENTITY_ID
WHERE E.ENTITY_TYPE_CD = 'STATE-TER'
AND C.ENTITY_ID IS NULL 
;

SET v_total_rows_inserted = ROW_COUNT();

DROP TEMPORARY TABLE IF EXISTS KJS_ADJ_NATIONAL;
DROP TEMPORARY TABLE IF EXISTS KJS_CARS_TMP_INCOME_POVERTY_INIT_THRESH;
DROP TEMPORARY TABLE IF EXISTS KJS_CARS_TMP_INCOME_POVERTY_UNADJ_DATA1_THRESH;
DROP TEMPORARY TABLE IF EXISTS KJS_CARS_TMP_INCOME_POVERTY_UNADJ_DATA_THRESH;
DROP TEMPORARY TABLE IF EXISTS KJS_WITH_CHILD;
DROP TEMPORARY TABLE IF EXISTS KJS_UNADJ_COUNTS;
DROP TEMPORARY TABLE IF EXISTS KJS_UNADJ_COUNTS_AFTER_SAMPLE_LOGIC;
DROP TEMPORARY TABLE IF EXISTS KJS_ADJ_COUNTS;
DROP TEMPORARY TABLE IF EXISTS KJS_ADJ_AVG;
DROP TEMPORARY TABLE IF EXISTS CARS_TMP_PRIORITIES_PCT;

SET v_logtext=CONCAT('Status: Success|Parameters: i_aggn_ref_id=',i_aggn_ref_id);

UPDATE CARS_801_SP_LOG
SET SP_STATUS_TEXT= v_logtext, END_TS=NOW()
WHERE  SP_NAME=v_spname;
COMMIT;		
	
END$$
DELIMITER ;