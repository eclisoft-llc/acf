DELIMITER $$
CREATE OR REPLACE PROCEDURE `CARS_801_AGGN_SP_COPAY_CAT`(IN i_aggn_ref_id INTEGER)
proc_label: BEGIN
DECLARE v_rec_cnt INTEGER DEFAULT 0 ;
DECLARE v_total_rows_deleted INTEGER DEFAULT 0; 
DECLARE v_total_rows_inserted INTEGER DEFAULT 0; 
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	    
		GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
		SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
		
		UPDATE CARS_801_SP_LOG
			SET SP_STATUS_TEXT='Error',SP_LOG_MESSAGE_TEXT=@full_error,END_TS=NOW()
		WHERE SP_LOG_ID=(SELECT MAX(SP_LOG_ID)FROM CARS_801_SP_LOG WHERE SP_NAME='CARS_801_AGGN_SP_COPAY_CAT');
			
		
	END;
	
		INSERT INTO CARS_801_SP_LOG (SP_NAME, SP_STATUS_TEXT, START_TS)
		VALUES('CARS_801_AGGN_SP_COPAY_CAT', 'Started', NOW());	
		

	SELECT COUNT(*) INTO v_rec_cnt FROM CARS_801_AGGN_REF WHERE  AGGN_REF_ID = i_aggn_ref_id;
 
    
    DELETE FROM CARS_801_AGGN_COPAY_CAT WHERE AGGN_REF_ID=i_aggn_ref_id;
	SET v_total_rows_deleted = ROW_COUNT();

DROP TEMPORARY TABLE IF EXISTS TMP_MOD_HDR_M;
CREATE TEMPORARY TABLE TMP_MOD_HDR_M AS
				    SELECT 	DISTINCT HDR.MODULE_HDR_ID 
						   
						   ,AGGN_REF_ID
						   ,HDR.ENTITY_ID
						   ,HDR.ENTITY_NAME	
						   ,HDR.FAMILY_COUNT AS FAM_MO_UNADJ_CNT
						   ,REC.FAMILY_COUNT AS FAMILY_CNT
						   ,AGGN_RF.FISCAL_YEAR 
							FROM CARS_MODULE_PERIOD_HDR HDR 
								JOIN CARS_PERIOD P 
							ON P.PERIOD_ID=HDR.PERIOD_ID 
							AND P.801_FLAG = 1
								JOIN CARS_801_REC_COUNTS REC
							ON REC.MODULE_HDR_ID=HDR.MODULE_HDR_ID
								JOIN CARS_801_AGGN_REF AGGN_RF 
							ON CAST(SUBSTR(P.PERIOD_DESC,5,4) AS INTEGER) =AGGN_RF.FISCAL_YEAR
							AND AGGN_RF.AGGN_REF_ID=i_aggn_ref_id;
							
							
							
							
CREATE INDEX IXP ON TMP_MOD_HDR_M(MODULE_HDR_ID,ENTITY_ID);

CREATE OR REPLACE TEMPORARY TABLE BASETBL AS
SELECT 
    H.ENTITY_ID,
	H.MODULE_HDR_ID,
    S.FAMILY_ID,
	S.CHILD_CARE_TYPE_CD ,
    S.CHILD_CARE_HOURS,
	S.MONTHLY_AMOUNT
FROM TMP_MOD_HDR_M H
JOIN CARS_801_FAMILY C ON H.MODULE_HDR_ID = C.MODULE_HDR_ID
JOIN `CARS_801_SETTING` S ON C.FAMILY_ID=S.FAMILY_ID;

CREATE INDEX IXD ON BASETBL(FAMILY_ID);

CREATE OR REPLACE TEMPORARY TABLE INVALTBL
AS
SELECT
DISTINCT MODULE_HDR_ID,ENTITY_ID,FAMILY_ID
FROM BASETBL AS S
WHERE S.CHILD_CARE_TYPE_CD IS NULL OR
		S.CHILD_CARE_TYPE_CD NOT IN('01','02','03','04','05','06','07','08','09','10','11')
        OR S.CHILD_CARE_HOURS IS NULL OR S.MONTHLY_AMOUNT IS NULL;
		

CREATE INDEX IXT ON INVALTBL(FAMILY_ID);

CREATE OR REPLACE TEMPORARY TABLE TOTFAMPAY AS
	SELECT 	S.ENTITY_ID,S.MODULE_HDR_ID,S.FAMILY_ID,SUM(IFNULL(S.MONTHLY_AMOUNT,0)) AS CALC_TOT_FAM_PAY
FROM BASETBL AS S
WHERE NOT EXISTS(SELECT 1 FROM INVALTBL C WHERE C.FAMILY_ID=S.FAMILY_ID)
		GROUP BY S.ENTITY_ID,S.MODULE_HDR_ID,S.FAMILY_ID;
		
CREATE INDEX IXI ON TOTFAMPAY(MODULE_HDR_ID,ENTITY_ID,FAMILY_ID);					
							
							
DROP TEMPORARY TABLE IF EXISTS TMP_FAMILY_HDR;
CREATE TEMPORARY TABLE TMP_FAMILY_HDR AS
     SELECT HDR.MODULE_HDR_ID
		   ,HDR.ENTITY_ID
		   ,HDR.ENTITY_NAME
		   ,HDR.FISCAL_YEAR
		   ,HDR.FAM_MO_UNADJ_CNT
		   ,HDR.FAMILY_CNT
		   ,FAM.FAMILY_ID
		   ,FAM.MONTHLY_INCOME
		   ,FAM.REASON_CD
		   ,FAM.TOTAL_MONTHLY_COPAYMENT
		
		FROM TMP_MOD_HDR_M HDR 
			JOIN CARS_801_FAMILY FAM 
		ON HDR.MODULE_HDR_ID=FAM.MODULE_HDR_ID
        WHERE TOTAL_MONTHLY_COPAYMENT IS NOT NULL AND FAM.MONTHLY_INCOME IS NOT NULL;
		
		
     	DROP TEMPORARY TABLE IF EXISTS TMP_FAMILY_HDR_MED;
		CREATE TEMPORARY TABLE TMP_FAMILY_HDR_MED AS
		SELECT 
								 A.MODULE_HDR_ID
								,A.ENTITY_NAME
								,A.TOTAL_MONTHLY_COPAYMENT
								,A.MONTHLY_INCOME
								,A.REASON_CD
								,A.FISCAL_YEAR
								,A.FAMILY_CNT
								,IFNULL(B.CALC_TOT_FAM_PAY,0) AS CALC_TOT_FAM_PAY
								FROM TMP_FAMILY_HDR AS A 
								LEFT JOIN TOTFAMPAY AS B ON A.MODULE_HDR_ID=B.MODULE_HDR_ID AND A.ENTITY_ID=B.ENTITY_ID AND A.FAMILY_ID=B.FAMILY_ID;
								
								
		
		DROP TEMPORARY TABLE IF EXISTS TMP_FAMILY_RATIO;
		CREATE TEMPORARY TABLE TMP_FAMILY_RATIO AS
		SELECT 
		 INC.MODULE_HDR_ID
		,INC.ENTITY_NAME
		,INC.FISCAL_YEAR
		,INC.0_RATIO
		,INC.1_25_RATIO
		,INC.26_50_RATIO
		,INC.51_100_RATIO
		,INC.101_200_RATIO
		,INC.200_RATIO
		,PRO_SVC.PRO_SVC_RATIO 
		,COP0.COP0_RAT
		,COP0INC0.COP0INC0_RAT
		,MEAN_ZERO_EG.MEAN_0_RAT
		
		,MEAN_ZERO_G.INC_TOT_RAT AS INC_TOT_RATIO
		,MEAN_ZERO.INC0_RAT AS INC0_RATIO
		,1-(IFNULL(PRO_SVC.PRO_SVC_RATIO,0)+IFNULL(INC.0_RATIO,0)
+IFNULL(INC.1_25_RATIO,0)
+IFNULL(INC.26_50_RATIO,0)
+IFNULL(INC.51_100_RATIO,0)
+IFNULL(INC.101_200_RATIO,0)
+IFNULL(INC.200_RATIO,0)+		IFNULL(MEAN_ZERO.INC0_RAT,0)) INVALID_RATIO
		,MEAN_ZERO_EG.MEAN_0_RAT AS MEAN_0_AVG
        ,MEAN_N0_EG.MEAN_N0_RAT AS MEAN_NO0_AVG
		,MEDIAN_0_T.MEDIAN_0_AVG
		,MEDIAN_NO0_T.MEDIAN_NO0_AVG
		FROM 
		(
			SELECT  MODULE_HDR_ID
				   ,ENTITY_NAME
				   ,FISCAL_YEAR
				   ,COUNT(CASE WHEN TOTAL_MONTHLY_COPAYMENT=0 THEN 1 END )						/FAMILY_CNT AS 0_RATIO 
				   ,COUNT(CASE WHEN TOTAL_MONTHLY_COPAYMENT BETWEEN 1 AND 25 THEN 1 END )		/FAMILY_CNT AS 1_25_RATIO 
				   ,COUNT(CASE WHEN TOTAL_MONTHLY_COPAYMENT BETWEEN 26 AND 50 THEN 1 END )	/FAMILY_CNT AS 26_50_RATIO
				   ,COUNT(CASE WHEN TOTAL_MONTHLY_COPAYMENT BETWEEN 51 AND 100 THEN 1 END )	/FAMILY_CNT AS 51_100_RATIO
				   ,COUNT(CASE WHEN TOTAL_MONTHLY_COPAYMENT BETWEEN 101 AND 200 THEN 1 END )	/FAMILY_CNT AS 101_200_RATIO
				   ,COUNT(CASE WHEN TOTAL_MONTHLY_COPAYMENT>200 THEN 1 END )    				/FAMILY_CNT AS 200_RATIO
			FROM TMP_FAMILY_HDR	
WHERE  REASON_CD IS NOT NULL 
					AND TOTAL_MONTHLY_COPAYMENT<=MONTHLY_INCOME AND MONTHLY_INCOME>0
					AND REASON_CD NOT IN (4,9)
			   
			GROUP BY 1,2,3						
		) INC 
		LEFT JOIN ( SELECT  HDR.MODULE_HDR_ID
					,HDR.ENTITY_NAME
							
					,CASE WHEN FAMILY_CNT=0 THEN 0 ELSE COUNT(1)/FAMILY_CNT END AS PRO_SVC_RATIO 
							FROM TMP_MOD_HDR_M HDR 
			JOIN CARS_801_FAMILY FAM 
		ON HDR.MODULE_HDR_ID=FAM.MODULE_HDR_ID
								
					WHERE REASON_CD IN (4,9) 
																			
					GROUP BY 1,2
				) PRO_SVC
		
		ON INC.MODULE_HDR_ID=PRO_SVC.MODULE_HDR_ID
		AND INC.ENTITY_NAME=PRO_SVC.ENTITY_NAME
		
				LEFT JOIN ( SELECT  MODULE_HDR_ID
					,ENTITY_NAME
							
					,CASE WHEN FAMILY_CNT=0 THEN 0 ELSE COUNT(1)/FAMILY_CNT END AS COP0_RAT 
					FROM TMP_FAMILY_HDR FAM_HDR
								
						WHERE 	    REASON_CD NOT IN (4,9) 
						AND REASON_CD IS NOT NULL 
						AND  MONTHLY_INCOME > 0
						AND TOTAL_MONTHLY_COPAYMENT <= MONTHLY_INCOME 
						AND TOTAL_MONTHLY_COPAYMENT=0
													
					GROUP BY 1,2
				) COP0
		ON INC.MODULE_HDR_ID=COP0.MODULE_HDR_ID
		AND INC.ENTITY_NAME=COP0.ENTITY_NAME
		
						LEFT JOIN ( SELECT  MODULE_HDR_ID
					,ENTITY_NAME
							
					,CASE WHEN FAMILY_CNT=0 THEN 0 ELSE COUNT(1)/FAMILY_CNT END AS COP0INC0_RAT 
					FROM TMP_FAMILY_HDR FAM_HDR
								
						WHERE 	    REASON_CD NOT IN (4,9) 
						AND REASON_CD IS NOT NULL 
						AND  MONTHLY_INCOME=0
						AND TOTAL_MONTHLY_COPAYMENT=0
													
					GROUP BY 1,2
				) COP0INC0
		ON INC.MODULE_HDR_ID=COP0INC0.MODULE_HDR_ID
		AND INC.ENTITY_NAME=COP0INC0.ENTITY_NAME
		
		LEFT JOIN ( SELECT 
						MODULE_HDR_ID 
						,ENTITY_NAME
						
						,SUM(IFNULL(TOTAL_MONTHLY_COPAYMENT,0))/COUNT(1) AS MEAN_0_RAT
						FROM TMP_FAMILY_HDR_MED 
						WHERE 	    REASON_CD NOT IN (4,9) 
						AND REASON_CD IS NOT NULL 
						AND  MONTHLY_INCOME > 0
						AND TOTAL_MONTHLY_COPAYMENT <= MONTHLY_INCOME 
						AND TOTAL_MONTHLY_COPAYMENT>=0
						
						GROUP BY 1,2
					) MEAN_ZERO_EG
		ON INC.MODULE_HDR_ID=MEAN_ZERO_EG.MODULE_HDR_ID
		AND INC.ENTITY_NAME=MEAN_ZERO_EG.ENTITY_NAME
		
				LEFT JOIN ( SELECT 
						MODULE_HDR_ID 
						,ENTITY_NAME
						
						,SUM(IFNULL(TOTAL_MONTHLY_COPAYMENT,0))/COUNT(1) AS MEAN_N0_RAT
						FROM TMP_FAMILY_HDR_MED 
						WHERE 	    REASON_CD NOT IN (4,9) 
						AND REASON_CD IS NOT NULL 
						AND  MONTHLY_INCOME > 0
						AND TOTAL_MONTHLY_COPAYMENT <= MONTHLY_INCOME 
						AND TOTAL_MONTHLY_COPAYMENT>0
						
						GROUP BY 1,2
					) MEAN_N0_EG
		ON INC.MODULE_HDR_ID=MEAN_N0_EG.MODULE_HDR_ID
		AND INC.ENTITY_NAME=MEAN_N0_EG.ENTITY_NAME

		LEFT JOIN ( SELECT 
							MODULE_HDR_ID 
							,ENTITY_NAME
							
							 ,COUNT(1) AS INC_TOT 
							,CASE WHEN FAMILY_CNT=0 THEN 0 ELSE COUNT(1)/FAMILY_CNT END AS INC_TOT_RAT
					FROM  TMP_FAMILY_HDR  
					WHERE 
					    REASON_CD NOT IN (4,9) 
						AND REASON_CD IS NOT NULL 
						AND  MONTHLY_INCOME > 0
						AND TOTAL_MONTHLY_COPAYMENT <= MONTHLY_INCOME
						
						GROUP BY 1,2
				   ) MEAN_ZERO_G
		ON INC.MODULE_HDR_ID=MEAN_ZERO_G.MODULE_HDR_ID
		AND INC.ENTITY_NAME=MEAN_ZERO_G.ENTITY_NAME

		LEFT JOIN ( 
						SELECT 
							MODULE_HDR_ID 
							,ENTITY_NAME
							
						,COUNT(1) AS INC0
						,CASE WHEN FAMILY_CNT=0 THEN 0 ELSE COUNT(1)/FAMILY_CNT END AS INC0_RAT
						FROM TMP_FAMILY_HDR	
						WHERE 
						REASON_CD NOT IN (4,9)
							AND REASON_CD IS NOT NULL 
						AND	MONTHLY_INCOME = 0
						AND TOTAL_MONTHLY_COPAYMENT <= MONTHLY_INCOME 
							
						GROUP BY 1,2
				   ) MEAN_ZERO
		ON INC.MODULE_HDR_ID=MEAN_ZERO.MODULE_HDR_ID
		AND INC.ENTITY_NAME=MEAN_ZERO.ENTITY_NAME

		LEFT JOIN (  SELECT 
									 TF.MODULE_HDR_ID
									,TF.ENTITY_NAME
									
									,ROUND(AVG(MED_ZERO_M.TOTAL_MONTHLY_COPAYMENT),2) MEDIAN_0_AVG
									   
										FROM (   
												SELECT 
												 MODULE_HDR_ID
												,ENTITY_NAME
												,TOTAL_MONTHLY_COPAYMENT
												,FISCAL_YEAR
												,ROW_NUMBER() OVER ( PARTITION BY MODULE_HDR_ID,ENTITY_NAME ORDER BY TOTAL_MONTHLY_COPAYMENT) RN
												FROM TMP_FAMILY_HDR_MED
			WHERE TOTAL_MONTHLY_COPAYMENT>=0 
																			AND REASON_CD NOT IN (4)
							AND REASON_CD IS NOT NULL 
						AND	MONTHLY_INCOME > 0
						AND TOTAL_MONTHLY_COPAYMENT <= MONTHLY_INCOME 
						AND TOTAL_MONTHLY_COPAYMENT<CALC_TOT_FAM_PAY
												
											   ) MED_ZERO_M  
								
											 JOIN ( SELECT MODULE_HDR_ID
												,ENTITY_NAME, FLOOR(COUNT(1)/2+ .50) F_CNT , CEIL(COUNT(1)/2+ .50)  CE_CNT 
												FROM TMP_FAMILY_HDR_MED 
														WHERE TOTAL_MONTHLY_COPAYMENT>=0 
																			AND REASON_CD NOT IN (4)
							AND REASON_CD IS NOT NULL 
						AND	MONTHLY_INCOME > 0
						AND TOTAL_MONTHLY_COPAYMENT <= MONTHLY_INCOME 
						AND TOTAL_MONTHLY_COPAYMENT<CALC_TOT_FAM_PAY
												GROUP BY 1,2
											  ) TF
											ON TF.MODULE_HDR_ID=MED_ZERO_M.MODULE_HDR_ID	
											AND TF.ENTITY_NAME=MED_ZERO_M.ENTITY_NAME
											AND MED_ZERO_M.RN BETWEEN TF.F_CNT AND TF.CE_CNT
										 
									  GROUP BY 1,2 
				) MEDIAN_0_T
		ON INC.MODULE_HDR_ID= MEDIAN_0_T.MODULE_HDR_ID
		AND INC.ENTITY_NAME=MEDIAN_0_T.ENTITY_NAME
		LEFT JOIN (  SELECT 
									 TF.MODULE_HDR_ID
									,TF.ENTITY_NAME
									
									,ROUND(AVG(MED_M.TOTAL_MONTHLY_COPAYMENT),2) MEDIAN_NO0_AVG
									   
										FROM (   
												SELECT 
												 MODULE_HDR_ID
												,ENTITY_NAME
												,TOTAL_MONTHLY_COPAYMENT
												,FISCAL_YEAR
												,ROW_NUMBER() OVER ( PARTITION BY MODULE_HDR_ID,ENTITY_NAME ORDER BY TOTAL_MONTHLY_COPAYMENT) RN
												FROM TMP_FAMILY_HDR_MED
						WHERE  TOTAL_MONTHLY_COPAYMENT>0
												AND REASON_CD NOT IN (4)
							AND REASON_CD IS NOT NULL 
						AND	MONTHLY_INCOME > 0
						AND TOTAL_MONTHLY_COPAYMENT <= MONTHLY_INCOME 
						AND TOTAL_MONTHLY_COPAYMENT<CALC_TOT_FAM_PAY
												
											   ) MED_M  
								
											 JOIN ( SELECT MODULE_HDR_ID
												,ENTITY_NAME, FLOOR(COUNT(1)/2+ .50) F_CNT , CEIL(COUNT(1)/2+ .50)  CE_CNT 
												FROM TMP_FAMILY_HDR_MED 
						WHERE  TOTAL_MONTHLY_COPAYMENT>0
												AND REASON_CD NOT IN (4)
							AND REASON_CD IS NOT NULL 
						AND	MONTHLY_INCOME > 0
						AND TOTAL_MONTHLY_COPAYMENT <= MONTHLY_INCOME 
						AND TOTAL_MONTHLY_COPAYMENT<CALC_TOT_FAM_PAY
												GROUP BY 1,2
											  ) TF
											ON TF.MODULE_HDR_ID=MED_M.MODULE_HDR_ID	
											AND TF.ENTITY_NAME=MED_M.ENTITY_NAME
											AND MED_M.RN BETWEEN TF.F_CNT AND TF.CE_CNT
										 
									  GROUP BY 1,2 
				) MEDIAN_NO0_T
		ON  INC.MODULE_HDR_ID =MEDIAN_NO0_T.MODULE_HDR_ID
		AND INC.ENTITY_NAME=MEDIAN_NO0_T.ENTITY_NAME
		ORDER BY INC.ENTITY_NAME, INC.MODULE_HDR_ID; 
		/* SELECT * FROM TMP_FAMILY_RATIO; */
		
		DROP TEMPORARY TABLE IF EXISTS CARS_801_TEMP_INCOME_CAT_CAL;
		CREATE TEMPORARY TABLE CARS_801_TEMP_INCOME_CAT_CAL
						SELECT 
							 F_HDR.ENTITY_ID
							,INC_GRP.ENTITY_NAME
							,INC_GRP.FISCAL_YEAR
							,0 															AVGMOSTATE																		
							,SUM(IFNULL(0_RATIO,0)*FAM_MO_UNADJ_CNT )/HDR.CNT										0_AVG
							,SUM(IFNULL(1_25_RATIO,0)*FAM_MO_UNADJ_CNT)/HDR.CNT								1_25AVG
							,SUM(IFNULL(26_50_RATIO,0)*FAM_MO_UNADJ_CNT)/HDR.CNT									26_50AVG
							,SUM(IFNULL(51_100_RATIO,0)*FAM_MO_UNADJ_CNT)/HDR.CNT								51_100AVG
							,SUM(IFNULL(101_200_RATIO,0)*FAM_MO_UNADJ_CNT)/HDR.CNT								101_200AVG
							,SUM(IFNULL(200_RATIO,0)*FAM_MO_UNADJ_CNT)	/HDR.CNT									200_AVG
							,SUM(IFNULL(PRO_SVC_RATIO,0)*FAM_MO_UNADJ_CNT)/HDR.CNT									PRO_SVCAVG 
							,SUM(IFNULL(INVALID_RATIO,0)*FAM_MO_UNADJ_CNT) /HDR.CNT + IFNULL(HDR.INV_AVG,0) 		INVALID_AVG
							,SUM(IFNULL(COP0INC0_RAT,0)*FAM_MO_UNADJ_CNT)  /HDR.CNT  								COP0INC0_AVG
							
							,SUM(IFNULL(0_RATIO,0)*FAM_MO_UNADJ_CNT )										0_SUM
							,SUM(IFNULL(1_25_RATIO,0)*FAM_MO_UNADJ_CNT)									1_25SUM
							,SUM(IFNULL(26_50_RATIO,0)*FAM_MO_UNADJ_CNT)									26_50SUM
							,SUM(IFNULL(51_100_RATIO,0)*FAM_MO_UNADJ_CNT)								51_100SUM
							,SUM(IFNULL(101_200_RATIO,0)*FAM_MO_UNADJ_CNT)								101_200SUM
							,SUM(IFNULL(200_RATIO,0)*FAM_MO_UNADJ_CNT)										200_SUM
							,SUM(IFNULL(PRO_SVC_RATIO,0)*FAM_MO_UNADJ_CNT)									PRO_SVCSUM 
							,SUM(IFNULL(INVALID_RATIO,0)*FAM_MO_UNADJ_CNT) + IFNULL(HDR.INV_SUM,0)  		INVALID_SUM
							,SUM(IFNULL(COP0INC0_RAT,0)*FAM_MO_UNADJ_CNT)    								COP0INC0_SUM
							,SUM(IFNULL(MEAN_0_AVG,0)*FAM_MO_UNADJ_CNT * (1-IFNULL(INVALID_RATIO,0)))		MEAN_0_SUM
							,SUM(IFNULL(MEAN_NO0_AVG,0) * FAM_MO_UNADJ_CNT *
								(1 - IFNULL(INVALID_RATIO,0)-IFNULL(0_RATIO,0)) 
								) 																			MEAN_NO0_SUM
							,SUM(IFNULL(MEDIAN_0_AVG,0) * FAM_MO_UNADJ_CNT * (1-IFNULL(INVALID_RATIO,0))) 	MEDIAN_0_SUM
							,SUM(IFNULL(MEDIAN_NO0_AVG,0)* FAM_MO_UNADJ_CNT *
								(1 - IFNULL(INVALID_RATIO,0)-IFNULL(0_RATIO,0))) 							MEDIAN_NO0_SUM
							,SUM(F_HDR.FAM_MO_UNADJ_CNT * (1 - IFNULL(INVALID_RATIO,0)))					TOTFFYSTATE_VALID	
							,SUM(FAM_MO_UNADJ_CNT *
								(1 - IFNULL(INVALID_RATIO,0) - IFNULL(0_RATIO,0))) 			    			TOTFFYSTATE_VALID_NO0
						FROM (						
								
							
									SELECT  MODULE_HDR_ID
										   ,ENTITY_NAME
										   ,FISCAL_YEAR
										   ,0_RATIO    
										   ,1_25_RATIO 
										   ,26_50_RATIO
										   ,51_100_RATIO
										   ,101_200_RATIO
										   ,200_RATIO
										   ,PRO_SVC_RATIO 
										   ,INVALID_RATIO
										   ,COP0INC0_RAT
										   ,MEAN_0_AVG
										   ,MEAN_NO0_AVG
										   ,MEDIAN_0_AVG
										   ,MEDIAN_NO0_AVG
									FROM TMP_FAMILY_RATIO	
											
								) INC_GRP 
											JOIN ( SELECT 
													 MODULE_HDR_ID
													,ENTITY_ID
													,ENTITY_NAME
													,FISCAL_YEAR
													,IFNULL(FAM_MO_UNADJ_CNT,0) AS FAM_MO_UNADJ_CNT
												FROM TMP_MOD_HDR_M
                                                  #TMP_FAMILY_HDR 
												#GROUP BY 
													#1,2,3
											)  F_HDR 
							ON INC_GRP.MODULE_HDR_ID=F_HDR.MODULE_HDR_ID
							AND INC_GRP.ENTITY_NAME=F_HDR.ENTITY_NAME
							AND INC_GRP.FISCAL_YEAR=F_HDR.FISCAL_YEAR
														LEFT JOIN(
			SELECT  HDR.ENTITY_NAME,HDR.CNT,SUM(IFNULL(CASE WHEN R.MODULE_HDR_ID IS NULL THEN HDR.FAM_MO_UNADJ_CNT ELSE 0 END,0)) AS INV_SUM,
                    SUM(IFNULL(CASE WHEN R.MODULE_HDR_ID IS NULL THEN HDR.FAM_MO_UNADJ_CNT ELSE 0 END,0)/HDR.CNT) AS INV_AVG		FROM 
			
			(SELECT ENTITY_NAME,FAM_MO_UNADJ_CNT,MODULE_HDR_ID,COUNT(1) AS CNT FROM TMP_MOD_HDR_M GROUP BY 1) AS HDR
			
LEFT JOIN TMP_FAMILY_RATIO AS R ON R.ENTITY_NAME=HDR.ENTITY_NAME AND R.MODULE_HDR_ID=HDR.MODULE_HDR_ID

GROUP BY 1			
		) HDR ON INC_GRP.ENTITY_NAME=HDR.ENTITY_NAME
						GROUP BY 1,2,3;
		/*summation of all income categories */
		DROP TEMPORARY TABLE IF EXISTS CARS_801_TEMP_INCOME_CAT_TOT;
		CREATE TEMPORARY TABLE CARS_801_TEMP_INCOME_CAT_TOT
		SELECT
				 SUM_INCOME_CAT.ENTITY_ID
				,SUM_INCOME_CAT.ENTITY_NAME
				,SUM_INCOME_CAT.FISCAL_YEAR
				,ROUND(FACT.PFACTOR,2) PFACTOR
				/*  #,TOTFFYSTATE_VALID 
				,SUM_INCOME_CAT.AVGMOSTATE */
				,CASE WHEN FACT.PFACTOR>0 THEN ROUND(TOT_AVG*FACT.PFACTOR) ELSE NULL END  FAMADJCNT 
				
				/*in this section all income catgories, protective services , invalid values and mean/median values including/excluding zero income */
				/* in this section, it uses formula to populate family unadjusted/adjusted count per state and fiscal year for each income category*/
				/* in this section, it uses formula to populate family count percentage per state and fiscal year for each income category */
				/*income category 0*/
				,ROUND(SUM_INCOME_CAT.COP0INC0_AVG) AS  COPAY_0_INCOME_0_FAMILY_UNADJ_COUNT
				,ROUND(SUM_INCOME_CAT.0_AVG) AS  INCOME_0_FAMILY_UNADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN ROUND(SUM_INCOME_CAT.0_AVG*FACT.PFACTOR) ELSE NULL END  INCOME_0_FAMILY_ADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN ROUND(SUM_INCOME_CAT.COP0INC0_AVG*FACT.PFACTOR) ELSE NULL END  COPAY_0_INCOME_0_FAMILY_ADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN SUM_INCOME_CAT.TOTAL_WGHT>0 THEN ROUND(SUM_INCOME_CAT.COP0INC0_SUM/SUM_INCOME_CAT.TOTAL_WGHT*100,2) ELSE 0 END ELSE NULL END  COPAY_0_INCOME_0_FAMILY_PERCENT
				,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN SUM_INCOME_CAT.TOTAL_WGHT>0 THEN ROUND(SUM_INCOME_CAT.0_SUM/SUM_INCOME_CAT.TOTAL_WGHT*100,2) ELSE 0 END ELSE NULL END  INCOME_0_FAMILY_PERCENT
				/*income category 1-500*/
				, ROUND(SUM_INCOME_CAT.1_25AVG) AS INCOME_1_25_FAMILY_UNADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN ROUND(SUM_INCOME_CAT.1_25AVG*FACT.PFACTOR)  ELSE NULL END INCOME_1_25_FAMILY_ADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN SUM_INCOME_CAT.TOTAL_WGHT>0 THEN ROUND(SUM_INCOME_CAT.1_25SUM/SUM_INCOME_CAT.TOTAL_WGHT*100,2)  ELSE 0 END ELSE NULL END INCOME_1_25_FAMILY_PERCENT
				/*income category 501-1000*/
				,ROUND(SUM_INCOME_CAT.26_50AVG) AS INCOME_26_50_FAMILY_UNADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(SUM_INCOME_CAT.26_50AVG *FACT.PFACTOR) ELSE NULL END INCOME_26_50_FAMILY_ADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN SUM_INCOME_CAT.TOTAL_WGHT>0 THEN ROUND(SUM_INCOME_CAT.26_50SUM/SUM_INCOME_CAT.TOTAL_WGHT*100,2) ELSE 0 END ELSE NULL END INCOME_26_50_FAMILY_PERCENT
				
				/*income category 1001-2000*/
				,ROUND(SUM_INCOME_CAT.51_100AVG) AS  INCOME_51_100_FAMILY_UNADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN ROUND(SUM_INCOME_CAT.51_100AVG*FACT.PFACTOR) ELSE NULL END INCOME_51_100_FAMILY_ADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN SUM_INCOME_CAT.TOTAL_WGHT>0 THEN ROUND(SUM_INCOME_CAT.51_100SUM/SUM_INCOME_CAT.TOTAL_WGHT*100,2) ELSE 0 END ELSE NULL END INCOME_51_100_FAMILY_PERCENT
				
				/*income category 2001-200*/
				,ROUND(SUM_INCOME_CAT.101_200AVG)  INCOME_101_200_FAMILY_UNADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0  THEN ROUND(SUM_INCOME_CAT.101_200AVG*FACT.PFACTOR) ELSE NULL END INCOME_101_200_FAMILY_ADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN SUM_INCOME_CAT.TOTAL_WGHT>0 THEN ROUND(SUM_INCOME_CAT.101_200SUM/SUM_INCOME_CAT.TOTAL_WGHT*100,2) ELSE 0 END ELSE NULL END INCOME_101_200_FAMILY_PERCENT
				/*income category >200*/
				,ROUND(SUM_INCOME_CAT.200_AVG) AS  INCOME_GT_200_FAMILY_UNADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN ROUND(SUM_INCOME_CAT.200_AVG*FACT.PFACTOR)  ELSE NULL END INCOME_GT_200_FAMILY_ADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN SUM_INCOME_CAT.TOTAL_WGHT>0 THEN ROUND(SUM_INCOME_CAT.200_SUM/SUM_INCOME_CAT.TOTAL_WGHT*100,2) ELSE 0 END ELSE NULL END INCOME_GT_200_FAMILY_PERCENT
				/*protective service values*/
				,ROUND(SUM_INCOME_CAT.PRO_SVCAVG ) AS  PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN ROUND(SUM_INCOME_CAT.PRO_SVCAVG *FACT.PFACTOR) ELSE NULL END PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN  SUM_INCOME_CAT.TOTAL_WGHT>0 THEN ROUND(SUM_INCOME_CAT.PRO_SVCSUM /SUM_INCOME_CAT.TOTAL_WGHT*100,2) ELSE 0 END ELSE NULL END PROTECTIVE_SERVICE_FAMILY_PERCENT
				/*invalid values*/
				,ROUND(SUM_INCOME_CAT.INVALID_AVG) AS INVALID_INCOME_FAMILY_UNADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN  ROUND(SUM_INCOME_CAT.INVALID_AVG*FACT.PFACTOR)  ELSE NULL END INVALID_INCOME_FAMILY_ADJ_COUNT
				,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN  SUM_INCOME_CAT.TOTAL_WGHT>0 THEN ROUND(SUM_INCOME_CAT.INVALID_SUM/SUM_INCOME_CAT.TOTAL_WGHT*100,2) ELSE 0 END ELSE NULL END INVALID_INCOME_FAMILY_PERCENT
				
				,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN SUM_INCOME_CAT.TOTFFYSTATE_VALID>0 THEN ROUND(IFNULL( MEAN_0_SUM,0)/TOTFFYSTATE_VALID,2) ELSE 0 END ELSE NULL END MEAN_WITH0_VAR
				,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN SUM_INCOME_CAT.TOTFFYSTATE_VALID_NO0>0 THEN ROUND(IFNULL( MEAN_NO0_SUM,0)/TOTFFYSTATE_VALID_NO0,2) ELSE 0 END ELSE NULL END MEAN_NO0_VAR
				,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN SUM_INCOME_CAT.TOTFFYSTATE_VALID>0 THEN ROUND(IFNULL( MEDIAN_0_SUM,0)/TOTFFYSTATE_VALID,2) ELSE 0 END ELSE NULL END MEDIAN_WITH0_VAR
				,CASE WHEN FACT.PFACTOR>0 THEN CASE WHEN SUM_INCOME_CAT.TOTFFYSTATE_VALID_NO0>0 THEN ROUND(IFNULL( MEDIAN_NO0_SUM,0)/TOTFFYSTATE_VALID_NO0,2) ELSE 0 END ELSE NULL END MEDIAN_NO0_VAR
			
				
				FROM
				(
				SELECT 		 ENTITY_ID
							,ENTITY_NAME
							,FISCAL_YEAR
							,AVGMOSTATE
							,(
							 0_AVG+
							1_25AVG+
							26_50AVG+
							51_100AVG+
							101_200AVG+
							200_AVG+
							PRO_SVCAVG+
							INVALID_AVG+
							COP0INC0_AVG
							   
								
							) TOT_AVG
							,0_AVG
							,1_25AVG
							,26_50AVG
							,51_100AVG
							,101_200AVG
							,200_AVG
							,PRO_SVCAVG 
							,INVALID_AVG
							,COP0INC0_AVG
							,0_SUM
							,1_25SUM
							,26_50SUM
							,51_100SUM
							,101_200SUM
							,200_SUM
							,PRO_SVCSUM 
							,INVALID_SUM
							,COP0INC0_SUM
							, (0_SUM+
							1_25SUM+
							26_50SUM+
							51_100SUM+
							101_200SUM+
							200_SUM+
							PRO_SVCSUM+
							INVALID_SUM+
							COP0INC0_SUM) AS TOTAL_WGHT
							,MEAN_0_SUM
							,MEAN_NO0_SUM
							,MEDIAN_0_SUM
							,MEDIAN_NO0_SUM
							,TOTFFYSTATE_VALID	
							,TOTFFYSTATE_VALID_NO0
							FROM CARS_801_TEMP_INCOME_CAT_CAL
				) SUM_INCOME_CAT 
					
					LEFT JOIN ( SELECT 
									ENTITY_ID
									,ENTITY_NAME
									,PERIOD_DESC
									,IFNULL(POOLING_FACTOR,0)*.01 AS PFACTOR 
								FROM VW_CARS_801_POOLING_FACTOR FACT 
						  ) FACT
									
				ON 	FACT.PERIOD_DESC LIKE CONCAT('%',SUM_INCOME_CAT.FISCAL_YEAR)
				AND FACT.ENTITY_NAME=SUM_INCOME_CAT.ENTITY_NAME;
				
INSERT INTO `CARS_801_AGGN_COPAY_CAT`(
    `AGGN_REF_ID`,
    `ENTITY_ID`,
    `ENTITY_NAME`,
    `INVALID_COPAY_FAMILY_UNADJ_COUNT`,
    `INVALID_COPAY_FAMILY_ADJ_COUNT`,
    `INVALID_COPAY_FAMILY_PERCENT`,
    `COPAY_0_FAMILY_UNADJ_COUNT`,
    `COPAY_0_FAMILY_ADJ_COUNT`,
    `COPAY_0_FAMILY_PERCENT`,
    `COPAY_1_25_FAMILY_UNADJ_COUNT`,
    `COPAY_1_25_FAMILY_ADJ_COUNT`,
    `COPAY_1_25_FAMILY_PERCENT`,
    `COPAY_26_50_FAMILY_UNADJ_COUNT`,
    `COPAY_26_50_FAMILY_ADJ_COUNT`,
    `COPAY_26_50_FAMILY_PERCENT`,
    `COPAY_51_100_FAMILY_UNADJ_COUNT`,
    `COPAY_51_100_FAMILY_ADJ_COUNT`,
    `COPAY_51_100_FAMILY_PERCENT`,
    `COPAY_101_200_FAMILY_UNADJ_COUNT`,
    `COPAY_101_200_FAMILY_ADJ_COUNT`,
    `COPAY_101_200_FAMILY_PERENT`,
    `COPAY_GT_200_FAMILY_UNADJ_COUNT`,
    `COPAY_GT_200_FAMILY_ADJ_COUNT`,
    `COPAY_GT_200_FAMILY_PERCENT`,
	`WITH_0_MEAN_COPAY_AMOUNT`,
    `WITH_0_MEDIAN_COPAY_AMOUNT`,
    `WITHOUT_0_MEAN_INCOME_AMOUNT`,
    `WITHOUT_0_MEDIAN_INCOME_AMOUNT`,
    `PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT`,
    `PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT`,
    `PROTECTIVE_SERVICE_FAMILY_PERCENT`,
	`COPAY_0_INCOME_0_FAMILY_UNADJ_COUNT`,
    `COPAY_0_INCOME_0_FAMILY_ADJ_COUNT`,
    `COPAY_0_INCOME_0_FAMILY_PERCENT`)				

 SELECT 
 i_aggn_ref_id
 ,ENTITY_ID
,ENTITY_NAME


,INVALID_INCOME_FAMILY_UNADJ_COUNT
,INVALID_INCOME_FAMILY_ADJ_COUNT
,INVALID_INCOME_FAMILY_PERCENT
,INCOME_0_FAMILY_UNADJ_COUNT
,INCOME_0_FAMILY_ADJ_COUNT 
,INCOME_0_FAMILY_PERCENT
,INCOME_1_25_FAMILY_UNADJ_COUNT 
,INCOME_1_25_FAMILY_ADJ_COUNT 
,INCOME_1_25_FAMILY_PERCENT 
,INCOME_26_50_FAMILY_UNADJ_COUNT 
,INCOME_26_50_FAMILY_ADJ_COUNT 
,INCOME_26_50_FAMILY_PERCENT 
,INCOME_51_100_FAMILY_UNADJ_COUNT 
,INCOME_51_100_FAMILY_ADJ_COUNT 
,INCOME_51_100_FAMILY_PERCENT 
,INCOME_101_200_FAMILY_UNADJ_COUNT 
,INCOME_101_200_FAMILY_ADJ_COUNT 
,INCOME_101_200_FAMILY_PERCENT 
,INCOME_GT_200_FAMILY_UNADJ_COUNT 
,INCOME_GT_200_FAMILY_ADJ_COUNT 
,INCOME_GT_200_FAMILY_PERCENT 
,MEAN_WITH0_VAR 
,MEDIAN_WITH0_VAR 
,MEAN_NO0_VAR
,MEDIAN_NO0_VAR
,PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT
,PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT
,PROTECTIVE_SERVICE_FAMILY_PERCENT
,COPAY_0_INCOME_0_FAMILY_UNADJ_COUNT
,COPAY_0_INCOME_0_FAMILY_ADJ_COUNT
,COPAY_0_INCOME_0_FAMILY_PERCENT
FROM CARS_801_TEMP_INCOME_CAT_TOT
UNION ALL


SELECT 
 i_aggn_ref_id
,0
,'National'

,NAT_INVALID_INCOME_FAMILY_UNADJ_COUNT
,NAT_INVALID_INCOME_FAMILY_ADJ_COUNT
,CASE WHEN NAT_FAM_ADJ_CNT>0 			THEN 	ROUND(NAT_INVALID_INCOME_FAMILY_ADJ_COUNT/NAT_FAM_ADJ_CNT*100,2)   		ELSE 0 END NAT_INVALID_INCOME_PCT
,NAT_INCOME_0_FAMILY_UNADJ_COUNT
,NAT_INCOME_0_FAMILY_ADJ_COUNT 
,CASE WHEN NAT_FAM_ADJ_CNT>0 			THEN 	ROUND(NAT_INCOME_0_FAMILY_ADJ_COUNT/NAT_FAM_ADJ_CNT*100,2) 		  		ELSE 0 END NAT_INCOME_0_PCT
,NAT_INCOME_1_25_FAMILY_UNADJ_COUNT
,NAT_INCOME_1_25_FAMILY_ADJ_COUNT	
,CASE WHEN NAT_FAM_ADJ_CNT>0 			THEN 	ROUND(NAT_INCOME_1_25_FAMILY_ADJ_COUNT/NAT_FAM_ADJ_CNT*100,2) 	  		ELSE 0 END NAT_INCOME_1_25_PCT
,NAT_INCOME_26_50_FAMILY_UNADJ_COUNT
,NAT_INCOME_26_50_FAMILY_ADJ_COUNT
,CASE WHEN NAT_FAM_ADJ_CNT>0 			THEN 	ROUND(NAT_INCOME_26_50_FAMILY_ADJ_COUNT/NAT_FAM_ADJ_CNT*100,2)  		ELSE 0 END NAT_INCOME_26_50_PCT
,NAT_INCOME_51_100_FAMILY_UNADJ_COUNT
,NAT_INCOME_51_100_FAMILY_ADJ_COUNT
,CASE WHEN NAT_FAM_ADJ_CNT>0 			THEN 	ROUND(NAT_INCOME_51_100_FAMILY_ADJ_COUNT/NAT_FAM_ADJ_CNT*100,2) 		ELSE 0 END NAT_INCOME_51_100_PCT		
,NAT_INCOME_101_200_FAMILY_UNADJ_COUNT
,NAT_INCOME_101_200_FAMILY_ADJ_COUNT
,CASE WHEN NAT_FAM_ADJ_CNT>0 			THEN 	ROUND(NAT_INCOME_101_200_FAMILY_ADJ_COUNT/NAT_FAM_ADJ_CNT*100,2) 		ELSE 0 END NAT_INCOME_101_200_PCT
,NAT_INCOME_GT_200_FAMILY_UNADJ_COUNT
,NAT_INCOME_GT_200_FAMILY_ADJ_COUNT
,CASE WHEN NAT_FAM_ADJ_CNT>0 			THEN 	ROUND(NAT_INCOME_GT_200_FAMILY_ADJ_COUNT/NAT_FAM_ADJ_CNT*100,2)	  	ELSE 0 END NAT_INCOME_GT_200_PCT
,CASE WHEN NAT_FAM_ADJ_CNT>0 			THEN 	ROUND(NAT_MEAN_WITH0_WGHT_VAR/NAT_FAM_ADJ_CNT,2)				  		ELSE 0 END NAT_MEAN_WITH0
,CASE WHEN NAT_FAM_ADJ_CNT>0 			THEN 	ROUND(NAT_MEDIAN_WITH0_WGHT_VAR/NAT_FAM_ADJ_CNT,2)		 	  			ELSE 0 END NAT_MEDIAN_WITH0
,CASE WHEN NAT_INCOME_NO0_WGHT_VAR>0 	THEN 	ROUND(NAT_MEAN_NO0_WGHT_VAR/ NAT_INCOME_NO0_WGHT_VAR,2)		  			ELSE 0 END NAT_MEAN_NO0
,CASE WHEN NAT_INCOME_NO0_WGHT_VAR>0 	THEN 	ROUND(NAT_MEDIAN_NO0_WGHT_VAR/NAT_INCOME_NO0_WGHT_VAR,2) 	  			ELSE 0 END NAT_MEDIAN_NO0

,NAT_PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT
,NAT_PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT
,CASE WHEN NAT_FAM_ADJ_CNT>0 			THEN 	ROUND(NAT_PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT/NAT_FAM_ADJ_CNT*100,2) ELSE NULL END NAT_PROTECTIVE_SERVICE_PCT
,NAT_COPAY_0_INCOME_0_FAMILY_UNADJ_COUNT
,NAT_COPAY_0_INCOME_0_FAMILY_ADJ_COUNT
,CASE WHEN NAT_FAM_ADJ_CNT>0 			THEN 	ROUND(NAT_COPAY_0_INCOME_0_FAMILY_ADJ_COUNT/NAT_FAM_ADJ_CNT*100,2) ELSE NULL END NAT_COPAY_0_INCOME_0_FAMILY_PCT
FROM 
(
	SELECT 
		SUM(INVALID_INCOME_FAMILY_UNADJ_COUNT) 						AS NAT_INVALID_INCOME_FAMILY_UNADJ_COUNT
		,SUM(INVALID_INCOME_FAMILY_ADJ_COUNT) 						AS NAT_INVALID_INCOME_FAMILY_ADJ_COUNT
		,SUM(INCOME_0_FAMILY_UNADJ_COUNT) 							AS NAT_INCOME_0_FAMILY_UNADJ_COUNT
		,SUM(INCOME_0_FAMILY_ADJ_COUNT) 							AS NAT_INCOME_0_FAMILY_ADJ_COUNT
		,SUM(INCOME_1_25_FAMILY_UNADJ_COUNT)						AS NAT_INCOME_1_25_FAMILY_UNADJ_COUNT 
		,SUM(INCOME_1_25_FAMILY_ADJ_COUNT)							AS NAT_INCOME_1_25_FAMILY_ADJ_COUNT
		,SUM(INCOME_26_50_FAMILY_UNADJ_COUNT) 					AS NAT_INCOME_26_50_FAMILY_UNADJ_COUNT
		,SUM(INCOME_26_50_FAMILY_ADJ_COUNT)						AS NAT_INCOME_26_50_FAMILY_ADJ_COUNT
		,SUM(INCOME_51_100_FAMILY_UNADJ_COUNT)					AS NAT_INCOME_51_100_FAMILY_UNADJ_COUNT
		,SUM(INCOME_51_100_FAMILY_ADJ_COUNT) 					AS NAT_INCOME_51_100_FAMILY_ADJ_COUNT
		,SUM(INCOME_101_200_FAMILY_UNADJ_COUNT) 					AS NAT_INCOME_101_200_FAMILY_UNADJ_COUNT
		,SUM(INCOME_101_200_FAMILY_ADJ_COUNT) 					AS NAT_INCOME_101_200_FAMILY_ADJ_COUNT
		,SUM(INCOME_GT_200_FAMILY_UNADJ_COUNT) 					AS NAT_INCOME_GT_200_FAMILY_UNADJ_COUNT
		,SUM(INCOME_GT_200_FAMILY_ADJ_COUNT) 						AS NAT_INCOME_GT_200_FAMILY_ADJ_COUNT
		,SUM(PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT) 				AS NAT_PROTECTIVE_SERVICE_FAMILY_UNADJ_COUNT
		,SUM(PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT)					AS NAT_PROTECTIVE_SERVICE_FAMILY_ADJ_COUNT	
		,SUM(COPAY_0_INCOME_0_FAMILY_UNADJ_COUNT)                   AS NAT_COPAY_0_INCOME_0_FAMILY_UNADJ_COUNT		
        ,SUM(COPAY_0_INCOME_0_FAMILY_ADJ_COUNT)                     AS NAT_COPAY_0_INCOME_0_FAMILY_ADJ_COUNT
		,SUM(FAMADJCNT) 					                        AS NAT_FAM_ADJ_CNT
		,SUM(FAMADJCNT * TOT2.INCOME_NO0_WGHT_VAR)					AS NAT_INCOME_NO0_WGHT_VAR
		,SUM(MEAN_WITH0_VAR*FAMADJCNT)								AS NAT_MEAN_WITH0_WGHT_VAR
		,SUM(MEAN_NO0_VAR*FAMADJCNT*TOT2.INCOME_NO0_WGHT_VAR)		AS NAT_MEAN_NO0_WGHT_VAR
		,SUM(MEDIAN_WITH0_VAR*FAMADJCNT)							AS NAT_MEDIAN_WITH0_WGHT_VAR
		,SUM(MEDIAN_NO0_VAR*FAMADJCNT*TOT2.INCOME_NO0_WGHT_VAR)		AS NAT_MEDIAN_NO0_WGHT_VAR
	FROM CARS_801_TEMP_INCOME_CAT_TOT TOT1
		JOIN (SELECT 
			 ENTITY_NAME
			,FISCAL_YEAR
			 ,CASE WHEN PFACTOR>0 THEN  
                  CASE WHEN INVALID_INCOME_FAMILY_PERCENT=100 THEN 0 
                  ELSE ((1 - (INVALID_INCOME_FAMILY_PERCENT / 100) - (INCOME_0_FAMILY_PERCENT / 100)) / (1 - (INVALID_INCOME_FAMILY_PERCENT / 100))) 
                  END 
              ELSE 1 END  INCOME_NO0_WGHT_VAR
			FROM CARS_801_TEMP_INCOME_CAT_TOT
		) TOT2 
	ON TOT1.ENTITY_NAME=TOT2.ENTITY_NAME
	AND TOT1.FISCAL_YEAR=TOT2.FISCAL_YEAR
) NAT_DT
UNION ALL
	SELECT 
		i_aggn_ref_id
		,E.ENTITY_ID		   
		,E.ENTITY_NAME
		
		,NULL
		,NULL
		,NULL
		
		,NULL
		,NULL
		,NULL
		
		,NULL
		,NULL
		,NULL
		
		,NULL
		,NULL
		,NULL
		
		,NULL
		,NULL
		,NULL
		
		,NULL
		,NULL
		,NULL
		
		,NULL
		,NULL
		,NULL
		
		,NULL
		,NULL
		,NULL
		
		,NULL
		,NULL
		,NULL
		
		,NULL
		,NULL
		,NULL
		
		,NULL
	
     FROM CARS_ENTITY E
          LEFT OUTER JOIN CARS_801_TEMP_INCOME_CAT_TOT C
     ON E.ENTITY_ID = C.ENTITY_ID
     WHERE E.ENTITY_TYPE_CD = 'STATE-TER'
     AND C.ENTITY_ID IS NULL ;

SET v_total_rows_inserted = ROW_COUNT();

DROP TEMPORARY TABLE IF EXISTS TMP_MOD_HDR_M;
DROP TEMPORARY TABLE IF EXISTS TMP_FAMILY_HDR;
DROP TEMPORARY TABLE IF EXISTS TMP_FAMILY_HDR_MED;
DROP TEMPORARY TABLE IF EXISTS TMP_FAMILY_RATIO;
DROP TEMPORARY TABLE IF EXISTS CARS_801_TEMP_INCOME_CAT_TOT;
DROP TEMPORARY TABLE IF EXISTS CARS_801_TEMP_INCOME_CAT_CAL;

UPDATE CARS_801_SP_LOG
SET SP_STATUS_TEXT= CONCAT('Success. Rows inserted: ',v_total_rows_inserted, ' Rows Deleted :', v_total_rows_deleted), END_TS=NOW() 
WHERE  SP_LOG_ID=( SELECT MAX(SP_LOG_ID) FROM CARS_801_SP_LOG WHERE SP_NAME ='CARS_801_AGGN_SP_COPAY_CAT');

		
END$$
DELIMITER ;
